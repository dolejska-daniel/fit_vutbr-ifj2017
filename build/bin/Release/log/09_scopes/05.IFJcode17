# 2017-12-04 10:53:32.561948
# SECTION: 09_scopes
# TEST: 05
# INFO: declaration in nested flow control statements
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: FUNEXP, UNARY, IFTHEN, BOOLOP
# STATE: FAIL
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IJUMP at line: 2 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: ICREATEFRAME at line: 6 with following arguments:
# Executing instruction: IPUSHFRAME at line: 7 with following arguments:
# Executing instruction: ICREATEFRAME at line: 8 with following arguments:
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: LF@i1
# Executing instruction: IMOVE at line: 10 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@i1()
# Executing instruction: IPUSHS at line: 11 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 12 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@i1=0(int)
# Executing instruction: ICLEARS at line: 13 with following arguments:
# Executing instruction: IDEFVAR at line: 14 with following arguments:
# Dest: LF@i2
# Executing instruction: IMOVE at line: 15 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@i2()
# Executing instruction: IPUSHS at line: 16 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 17 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@i2=0(int)
# Executing instruction: ICLEARS at line: 18 with following arguments:
# Executing instruction: ILABEL at line: 20 with following arguments:
# Executing instruction: IPUSHS at line: 21 with following arguments:
# Arg1: LF@i1=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 22 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 23 with following arguments:
# Arg1: Stack@=10(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 24 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 25 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ICREATEFRAME at line: 27 with following arguments:
# Executing instruction: ILABEL at line: 29 with following arguments:
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: LF@i2=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 31 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 32 with following arguments:
# Arg1: Stack@=10(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 33 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 34 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ICREATEFRAME at line: 36 with following arguments:
# Executing instruction: IDEFVAR at line: 37 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 38 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@a()
# Executing instruction: IPUSHS at line: 39 with following arguments:
# Arg1: Const@=42(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 40 with following arguments:
# Arg1: Stack@=42(int)
# Dest: LF@a=0(int)
# Executing instruction: ICLEARS at line: 41 with following arguments:
# Executing instruction: IPUSHS at line: 42 with following arguments:
# Arg1: LF@a=42(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 43 with following arguments:
# Arg1: LF@i1=10(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 44 with following arguments:
# Arg1: Stack@=42(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 45 with following arguments:
# Arg1: LF@i2=10(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 46 with following arguments:
# Arg1: Stack@=52(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 47 with following arguments:
# Arg1: Stack@=62(int)
# Dest: LF@a=42(int)
# Executing instruction: ICLEARS at line: 48 with following arguments:
# Executing instruction: IPUSHS at line: 49 with following arguments:
# Arg1: LF@a=62(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 50 with following arguments:
# Dest: TF@__INTERNAL__VAR_0
# Executing instruction: IPOPS at line: 51 with following arguments:
# Arg1: Stack@=62(int)
# Dest: TF@__INTERNAL__VAR_0()
# Executing instruction: IWRITE at line: 52 with following arguments:
# Arg1: TF@__INTERNAL__VAR_0=62(int)
# Executing instruction: IPUSHS at line: 53 with following arguments:
# Arg1: LF@i2=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 54 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 55 with following arguments:
# Arg1: Stack@=10(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 56 with following arguments:
# Arg1: Stack@=9(int)
# Dest: LF@i2=10(int)
# Executing instruction: ICLEARS at line: 57 with following arguments:
# Executing instruction: IJUMP at line: 59 with following arguments:
# Executing instruction: ILABEL at line: 29 with following arguments:
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: LF@i2=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 31 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 32 with following arguments:
# Arg1: Stack@=9(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 33 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 34 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ICREATEFRAME at line: 36 with following arguments:
# Executing instruction: IDEFVAR at line: 37 with following arguments:
# Dest: LF@a
# Error at line: 37
# Symbol already exists!
# 
# STDOUT DIFF:
# --- expected
# +++ actual
# @@ -1,10 +1 @@

# - 62 61 60 59 58 57 56 55 54 53

# - 61 60 59 58 57 56 55 54 53 52

# - 60 59 58 57 56 55 54 53 52 51

# - 59 58 57 56 55 54 53 52 51 50

# - 58 57 56 55 54 53 52 51 50 49

# - 57 56 55 54 53 52 51 50 49 48

# - 56 55 54 53 52 51 50 49 48 47

# - 55 54 53 52 51 50 49 48 47 46

# - 54 53 52 51 50 49 48 47 46 45

# - 53 52 51 50 49 48 47 46 45 44

# + 62

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 52
# PRICE: ---
# 
#   1: ' declaration in nested flow control statements
#   2: 
#   3: scope
#   4: 	dim i1 as integer = 10
#   5: 	dim i2 as integer = 10
#   6: 
#   7: 	do while i1 > 0
#   8: 		do while i2 > 0
#   9: 			dim a as integer = 42
#  10: 			a = a + i1 + i2
#  11: 			print a;
#  12: 			i2 = i2 - 1
#  13: 		loop
#  14: 		print !"\n";
#  15: 		i1 = i1 - 1
#  16: 		i2 = 10
#  17: 	loop
#  18: 
#  19: end scope

########################################

.IFJcode17                                                                      #     1/82
JUMP main                                                                       #     2/82
# MAIN                                                                          #     4/82
LABEL main                                                                      #     5/82
CREATEFRAME                                                                     #     6/82
PUSHFRAME                                                                       #     7/82
CREATEFRAME                                                                     #     8/82
DEFVAR LF@i1                                                                    #     9/82
MOVE LF@i1 int@0                                                                #    10/82
PUSHS int@10                                                                    #    11/82
POPS LF@i1                                                                      #    12/82
CLEARS                                                                          #    13/82
DEFVAR LF@i2                                                                    #    14/82
MOVE LF@i2 int@0                                                                #    15/82
PUSHS int@10                                                                    #    16/82
POPS LF@i2                                                                      #    17/82
CLEARS                                                                          #    18/82
# DO WHILE                                                                      #    19/82
LABEL __INTERNAL__LOOP_0_BEGIN                                                  #    20/82
PUSHS LF@i1                                                                     #    21/82
PUSHS int@0                                                                     #    22/82
GTS                                                                             #    23/82
PUSHS bool@true                                                                 #    24/82
JUMPIFNEQS __INTERNAL__LOOP_0_END                                               #    25/82
# DO WHILE TRUE                                                                 #    26/82
CREATEFRAME                                                                     #    27/82
# DO WHILE                                                                      #    28/82
LABEL __INTERNAL__LOOP_1_BEGIN                                                  #    29/82
PUSHS LF@i2                                                                     #    30/82
PUSHS int@0                                                                     #    31/82
GTS                                                                             #    32/82
PUSHS bool@true                                                                 #    33/82
JUMPIFNEQS __INTERNAL__LOOP_1_END                                               #    34/82
# DO WHILE TRUE                                                                 #    35/82
CREATEFRAME                                                                     #    36/82
DEFVAR LF@a                                                                     #    37/82
MOVE LF@a int@0                                                                 #    38/82
PUSHS int@42                                                                    #    39/82
POPS LF@a                                                                       #    40/82
CLEARS                                                                          #    41/82
PUSHS LF@a                                                                      #    42/82
PUSHS LF@i1                                                                     #    43/82
ADDS                                                                            #    44/82
PUSHS LF@i2                                                                     #    45/82
ADDS                                                                            #    46/82
POPS LF@a                                                                       #    47/82
CLEARS                                                                          #    48/82
PUSHS LF@a                                                                      #    49/82
DEFVAR TF@__INTERNAL__VAR_0                                                     #    50/82
POPS TF@__INTERNAL__VAR_0                                                       #    51/82
WRITE TF@__INTERNAL__VAR_0                                                      #    52/82
PUSHS LF@i2                                                                     #    53/82
PUSHS int@1                                                                     #    54/82
SUBS                                                                            #    55/82
POPS LF@i2                                                                      #    56/82
CLEARS                                                                          #    57/82
# LOOP                                                                          #    58/82
JUMP __INTERNAL__LOOP_1_BEGIN                                                   #    59/82
# DO WHILE FALSE                                                                #    60/82
LABEL __INTERNAL__LOOP_1_END                                                    #    61/82
# DO WHILE END                                                                  #    62/82
PUSHS string@\010                                                               #    63/82
POPS TF@__INTERNAL__VAR_0                                                       #    64/82
WRITE TF@__INTERNAL__VAR_0                                                      #    65/82
PUSHS LF@i1                                                                     #    66/82
PUSHS int@1                                                                     #    67/82
SUBS                                                                            #    68/82
POPS LF@i1                                                                      #    69/82
CLEARS                                                                          #    70/82
PUSHS int@10                                                                    #    71/82
POPS LF@i2                                                                      #    72/82
CLEARS                                                                          #    73/82
# LOOP                                                                          #    74/82
JUMP __INTERNAL__LOOP_0_BEGIN                                                   #    75/82
# DO WHILE FALSE                                                                #    76/82
LABEL __INTERNAL__LOOP_0_END                                                    #    77/82
# DO WHILE END                                                                  #    78/82
JUMP __INTERNAL__FILE_END                                                       #    79/82
# PROGRAM END                                                                   #    81/82
LABEL __INTERNAL__FILE_END                                                      #    82/82