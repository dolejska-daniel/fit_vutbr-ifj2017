# 2017-12-04 14:49:26.433274
# SECTION: 09_scopes
# TEST: 05
# INFO: declaration in nested flow control statements
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: UNARY, IFTHEN, FUNEXP, BOOLOP
# STATE: FAIL
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IJUMP at line: 2 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: ICREATEFRAME at line: 6 with following arguments:
# Executing instruction: IPUSHFRAME at line: 7 with following arguments:
# Executing instruction: ICREATEFRAME at line: 8 with following arguments:
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: LF@i1
# Executing instruction: IMOVE at line: 10 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@i1()
# Executing instruction: IPUSHS at line: 11 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 12 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@i1=0(int)
# Executing instruction: ICLEARS at line: 13 with following arguments:
# Executing instruction: IDEFVAR at line: 14 with following arguments:
# Dest: LF@i2
# Executing instruction: IMOVE at line: 15 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@i2()
# Executing instruction: IPUSHS at line: 16 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 17 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@i2=0(int)
# Executing instruction: ICLEARS at line: 18 with following arguments:
# Executing instruction: ICREATEFRAME at line: 20 with following arguments:
# Executing instruction: ILABEL at line: 21 with following arguments:
# Executing instruction: IPUSHS at line: 22 with following arguments:
# Arg1: LF@i1=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 23 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 24 with following arguments:
# Arg1: Stack@=10(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 25 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 26 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ICREATEFRAME at line: 28 with following arguments:
# Executing instruction: ICREATEFRAME at line: 30 with following arguments:
# Executing instruction: ILABEL at line: 31 with following arguments:
# Executing instruction: IPUSHS at line: 32 with following arguments:
# Arg1: LF@i2=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 33 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 34 with following arguments:
# Arg1: Stack@=10(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 35 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 36 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ICREATEFRAME at line: 38 with following arguments:
# Executing instruction: IDEFVAR at line: 39 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 40 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@a()
# Executing instruction: IPUSHS at line: 41 with following arguments:
# Arg1: Const@=42(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 42 with following arguments:
# Arg1: Stack@=42(int)
# Dest: LF@a=0(int)
# Executing instruction: ICLEARS at line: 43 with following arguments:
# Executing instruction: IPUSHS at line: 44 with following arguments:
# Arg1: LF@a=42(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 45 with following arguments:
# Arg1: LF@i1=10(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 46 with following arguments:
# Arg1: Stack@=42(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 47 with following arguments:
# Arg1: LF@i2=10(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 48 with following arguments:
# Arg1: Stack@=52(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 49 with following arguments:
# Arg1: Stack@=62(int)
# Dest: LF@a=42(int)
# Executing instruction: ICLEARS at line: 50 with following arguments:
# Executing instruction: IPUSHS at line: 51 with following arguments:
# Arg1: LF@a=62(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 52 with following arguments:
# Dest: TF@__INTERNAL__VAR_0
# Executing instruction: IPOPS at line: 53 with following arguments:
# Arg1: Stack@=62(int)
# Dest: TF@__INTERNAL__VAR_0()
# Executing instruction: IWRITE at line: 54 with following arguments:
# Arg1: TF@__INTERNAL__VAR_0=62(int)
# Executing instruction: IPUSHS at line: 55 with following arguments:
# Arg1: LF@i2=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 56 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 57 with following arguments:
# Arg1: Stack@=10(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 58 with following arguments:
# Arg1: Stack@=9(int)
# Dest: LF@i2=10(int)
# Executing instruction: ICLEARS at line: 59 with following arguments:
# Executing instruction: IJUMP at line: 61 with following arguments:
# Executing instruction: ILABEL at line: 31 with following arguments:
# Executing instruction: IPUSHS at line: 32 with following arguments:
# Arg1: LF@i2=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 33 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 34 with following arguments:
# Arg1: Stack@=9(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 35 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 36 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ICREATEFRAME at line: 38 with following arguments:
# Executing instruction: IDEFVAR at line: 39 with following arguments:
# Dest: LF@a
# Error at line: 39
# Symbol already exists!
# 
# STDOUT DIFF:
# --- expected
# +++ actual
# @@ -1,10 +1 @@

# - 62 61 60 59 58 57 56 55 54 53

# - 61 60 59 58 57 56 55 54 53 52

# - 60 59 58 57 56 55 54 53 52 51

# - 59 58 57 56 55 54 53 52 51 50

# - 58 57 56 55 54 53 52 51 50 49

# - 57 56 55 54 53 52 51 50 49 48

# - 56 55 54 53 52 51 50 49 48 47

# - 55 54 53 52 51 50 49 48 47 46

# - 54 53 52 51 50 49 48 47 46 45

# - 53 52 51 50 49 48 47 46 45 44

# + 62

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 52
# PRICE: ---
# 
#   1: ' declaration in nested flow control statements
#   2: 
#   3: scope
#   4: 	dim i1 as integer = 10
#   5: 	dim i2 as integer = 10
#   6: 
#   7: 	do while i1 > 0
#   8: 		do while i2 > 0
#   9: 			dim a as integer = 42
#  10: 			a = a + i1 + i2
#  11: 			print a;
#  12: 			i2 = i2 - 1
#  13: 		loop
#  14: 		print !"\n";
#  15: 		i1 = i1 - 1
#  16: 		i2 = 10
#  17: 	loop
#  18: 
#  19: end scope

########################################

.IFJcode17                                                                      #     1/84
JUMP main                                                                       #     2/84
# MAIN                                                                          #     4/84
LABEL main                                                                      #     5/84
CREATEFRAME                                                                     #     6/84
PUSHFRAME                                                                       #     7/84
CREATEFRAME                                                                     #     8/84
DEFVAR LF@i1                                                                    #     9/84
MOVE LF@i1 int@0                                                                #    10/84
PUSHS int@10                                                                    #    11/84
POPS LF@i1                                                                      #    12/84
CLEARS                                                                          #    13/84
DEFVAR LF@i2                                                                    #    14/84
MOVE LF@i2 int@0                                                                #    15/84
PUSHS int@10                                                                    #    16/84
POPS LF@i2                                                                      #    17/84
CLEARS                                                                          #    18/84
# DO WHILE                                                                      #    19/84
CREATEFRAME                                                                     #    20/84
LABEL __INTERNAL__LOOP_0_BEGIN                                                  #    21/84
PUSHS LF@i1                                                                     #    22/84
PUSHS int@0                                                                     #    23/84
GTS                                                                             #    24/84
PUSHS bool@true                                                                 #    25/84
JUMPIFNEQS __INTERNAL__LOOP_0_END                                               #    26/84
# DO WHILE TRUE                                                                 #    27/84
CREATEFRAME                                                                     #    28/84
# DO WHILE                                                                      #    29/84
CREATEFRAME                                                                     #    30/84
LABEL __INTERNAL__LOOP_1_BEGIN                                                  #    31/84
PUSHS LF@i2                                                                     #    32/84
PUSHS int@0                                                                     #    33/84
GTS                                                                             #    34/84
PUSHS bool@true                                                                 #    35/84
JUMPIFNEQS __INTERNAL__LOOP_1_END                                               #    36/84
# DO WHILE TRUE                                                                 #    37/84
CREATEFRAME                                                                     #    38/84
DEFVAR LF@a                                                                     #    39/84
MOVE LF@a int@0                                                                 #    40/84
PUSHS int@42                                                                    #    41/84
POPS LF@a                                                                       #    42/84
CLEARS                                                                          #    43/84
PUSHS LF@a                                                                      #    44/84
PUSHS LF@i1                                                                     #    45/84
ADDS                                                                            #    46/84
PUSHS LF@i2                                                                     #    47/84
ADDS                                                                            #    48/84
POPS LF@a                                                                       #    49/84
CLEARS                                                                          #    50/84
PUSHS LF@a                                                                      #    51/84
DEFVAR TF@__INTERNAL__VAR_0                                                     #    52/84
POPS TF@__INTERNAL__VAR_0                                                       #    53/84
WRITE TF@__INTERNAL__VAR_0                                                      #    54/84
PUSHS LF@i2                                                                     #    55/84
PUSHS int@1                                                                     #    56/84
SUBS                                                                            #    57/84
POPS LF@i2                                                                      #    58/84
CLEARS                                                                          #    59/84
# LOOP                                                                          #    60/84
JUMP __INTERNAL__LOOP_1_BEGIN                                                   #    61/84
# DO WHILE FALSE                                                                #    62/84
LABEL __INTERNAL__LOOP_1_END                                                    #    63/84
# DO WHILE END                                                                  #    64/84
PUSHS string@\010                                                               #    65/84
POPS TF@__INTERNAL__VAR_0                                                       #    66/84
WRITE TF@__INTERNAL__VAR_0                                                      #    67/84
PUSHS LF@i1                                                                     #    68/84
PUSHS int@1                                                                     #    69/84
SUBS                                                                            #    70/84
POPS LF@i1                                                                      #    71/84
CLEARS                                                                          #    72/84
PUSHS int@10                                                                    #    73/84
POPS LF@i2                                                                      #    74/84
CLEARS                                                                          #    75/84
# LOOP                                                                          #    76/84
JUMP __INTERNAL__LOOP_0_BEGIN                                                   #    77/84
# DO WHILE FALSE                                                                #    78/84
LABEL __INTERNAL__LOOP_0_END                                                    #    79/84
# DO WHILE END                                                                  #    80/84
JUMP __INTERNAL__FILE_END                                                       #    81/84
# PROGRAM END                                                                   #    83/84
LABEL __INTERNAL__FILE_END                                                      #    84/84