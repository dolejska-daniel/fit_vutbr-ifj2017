# 2017-12-04 17:23:08.710990
# SECTION: 01_basic
# TEST: 12
# INFO: Print input
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: BOOLOP, UNARY, IFTHEN, FUNEXP
# STATE: FAIL
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IJUMP at line: 2 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: ICREATEFRAME at line: 6 with following arguments:
# Executing instruction: IPUSHFRAME at line: 7 with following arguments:
# Executing instruction: ICREATEFRAME at line: 8 with following arguments:
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: LF@hdghaskljkl
# Executing instruction: IMOVE at line: 10 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@hdghaskljkl()
# Executing instruction: IREAD at line: 11 with following arguments:
# Dest: LF@hdghaskljkl=(string)
# Executing instruction: IPUSHS at line: 12 with following arguments:
# Arg1: LF@hdghaskljkl=Martin Kobelka napsal tento test(string)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 13 with following arguments:
# Dest: TF@__INTERNAL__VAR_0
# Executing instruction: IMOVE at line: 14 with following arguments:
# Arg1: Const@=(string)
# Dest: TF@__INTERNAL__VAR_0()
# Executing instruction: IPOPS at line: 15 with following arguments:
# Arg1: Stack@=Martin Kobelka napsal tento test(string)
# Dest: TF@__INTERNAL__VAR_0=(string)
# Executing instruction: IWRITE at line: 16 with following arguments:
# Arg1: TF@__INTERNAL__VAR_0=Martin Kobelka napsal tento test(string)
# Executing instruction: IJUMP at line: 17 with following arguments:
# Executing instruction: ILABEL at line: 22 with following arguments:
# 
# STDOUT DIFF:
# --- expected
# +++ actual
# @@ -1 +1 @@

# -? Martin Kobelka napsal tento test
# +Martin Kobelka napsal tento test

# INTERPRETER STDIN: 
# Martin Kobelka napsal tento test
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: ---
# 
#   1: ' Print input
#   2: 
#   3: SCOPE
#   4: 
#   5: 	dim hdghaskljkl as string
#   6: 
#   7: 	input hdghaskljkl
#   8: 
#   9: 	print hdghaskljkl;
#  10: 
#  11: END SCOPE

########################################

.IFJcode17                                                                      #     1/22
JUMP main                                                                       #     2/22
# MAIN                                                                          #     4/22
LABEL main                                                                      #     5/22
CREATEFRAME                                                                     #     6/22
PUSHFRAME                                                                       #     7/22
CREATEFRAME                                                                     #     8/22
DEFVAR LF@hdghaskljkl                                                           #     9/22
MOVE LF@hdghaskljkl string@                                                     #    10/22
READ LF@hdghaskljkl string                                                      #    11/22
PUSHS LF@hdghaskljkl                                                            #    12/22
DEFVAR TF@__INTERNAL__VAR_0                                                     #    13/22
MOVE TF@__INTERNAL__VAR_0 string@                                               #    14/22
POPS TF@__INTERNAL__VAR_0                                                       #    15/22
WRITE TF@__INTERNAL__VAR_0                                                      #    16/22
JUMP __INTERNAL__FILE_END                                                       #    17/22
# MAIN END                                                                      #    19/22
# PROGRAM END                                                                   #    21/22
LABEL __INTERNAL__FILE_END                                                      #    22/22