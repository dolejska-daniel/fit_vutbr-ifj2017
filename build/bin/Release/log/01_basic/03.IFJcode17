# 2017-12-03 11:37:01.505731
# SECTION: 01_basic
# TEST: 03
# INFO: variable definitions
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: FUNEXP, UNARY, IFTHEN, BOOLOP
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IJUMP at line: 2 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: ICREATEFRAME at line: 6 with following arguments:
# Executing instruction: IPUSHFRAME at line: 7 with following arguments:
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 9 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@a()
# Executing instruction: IPUSHS at line: 10 with following arguments:
# Arg1: Const@=foo(string)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 11 with following arguments:
# Arg1: Stack@=foo(string)
# Dest: LF@a=(string)
# Executing instruction: ICLEARS at line: 12 with following arguments:
# Executing instruction: IDEFVAR at line: 13 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 14 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: IPUSHS at line: 15 with following arguments:
# Arg1: Const@=4500(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 16 with following arguments:
# Arg1: Stack@=4500(int)
# Dest: LF@b=0(int)
# Executing instruction: ICLEARS at line: 17 with following arguments:
# Executing instruction: IDEFVAR at line: 18 with following arguments:
# Dest: LF@b0_
# Executing instruction: IMOVE at line: 19 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b0_()
# Executing instruction: IPUSHS at line: 20 with following arguments:
# Arg1: Const@=45(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 21 with following arguments:
# Arg1: Stack@=45(int)
# Dest: LF@b0_=0(int)
# Executing instruction: ICLEARS at line: 22 with following arguments:
# Executing instruction: IDEFVAR at line: 23 with following arguments:
# Dest: LF@c
# Executing instruction: IMOVE at line: 24 with following arguments:
# Arg1: Const@=0(double)
# Dest: LF@c()
# Executing instruction: IPUSHS at line: 25 with following arguments:
# Arg1: Const@=78.4(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 26 with following arguments:
# Arg1: Stack@=78.4(double)
# Dest: LF@c=0(double)
# Executing instruction: ICLEARS at line: 27 with following arguments:
# Executing instruction: IDEFVAR at line: 28 with following arguments:
# Dest: LF@d
# Executing instruction: IMOVE at line: 29 with following arguments:
# Arg1: Const@=0(double)
# Dest: LF@d()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: Const@=780000(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 31 with following arguments:
# Arg1: Stack@=780000(double)
# Dest: LF@d=0(double)
# Executing instruction: ICLEARS at line: 32 with following arguments:
# Executing instruction: IDEFVAR at line: 33 with following arguments:
# Dest: LF@e
# Executing instruction: IMOVE at line: 34 with following arguments:
# Arg1: Const@=0(double)
# Dest: LF@e()
# Executing instruction: IPUSHS at line: 35 with following arguments:
# Arg1: Const@=0.0008(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 36 with following arguments:
# Arg1: Stack@=0.0008(double)
# Dest: LF@e=0(double)
# Executing instruction: ICLEARS at line: 37 with following arguments:
# Executing instruction: IDEFVAR at line: 38 with following arguments:
# Dest: LF@f
# Executing instruction: IMOVE at line: 39 with following arguments:
# Arg1: Const@=0(double)
# Dest: LF@f()
# Executing instruction: IPUSHS at line: 40 with following arguments:
# Arg1: Const@=870000(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 41 with following arguments:
# Arg1: Stack@=870000(double)
# Dest: LF@f=0(double)
# Executing instruction: ICLEARS at line: 42 with following arguments:
# Executing instruction: IJUMP at line: 43 with following arguments:
# Executing instruction: ILABEL at line: 46 with following arguments:
# 
# EXPECTED INTERPRETER STDOUT:



# CURRENT INTERPRETER STDOUT:



# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 120 (50+70)
# 
#   1: ' variable definitions
#   2: scope
#   3:     Dim a as     string = !"foo"
#   4: 	Dim   b as integer = 4500
#   5: 	Dim b0_ as integer =   0045
#   6: 	Dim c   as double = 78.4
#   7: 	Dim d as double = 78e4
#   8: 	Dim   e as double =     8e-4
#   9:     Dim f   as double   = 87E4
#  10: end scope

########################################

.IFJcode17                                                                      #     1/46
JUMP main                                                                       #     2/46
# MAIN                                                                          #     4/46
LABEL main                                                                      #     5/46
CREATEFRAME                                                                     #     6/46
PUSHFRAME                                                                       #     7/46
DEFVAR LF@a                                                                     #     8/46
MOVE LF@a string@                                                               #     9/46
PUSHS string@foo                                                                #    10/46
POPS LF@a                                                                       #    11/46
CLEARS                                                                          #    12/46
DEFVAR LF@b                                                                     #    13/46
MOVE LF@b int@0                                                                 #    14/46
PUSHS int@4500                                                                  #    15/46
POPS LF@b                                                                       #    16/46
CLEARS                                                                          #    17/46
DEFVAR LF@b0_                                                                   #    18/46
MOVE LF@b0_ int@0                                                               #    19/46
PUSHS int@45                                                                    #    20/46
POPS LF@b0_                                                                     #    21/46
CLEARS                                                                          #    22/46
DEFVAR LF@c                                                                     #    23/46
MOVE LF@c float@0.0                                                             #    24/46
PUSHS float@78.4                                                                #    25/46
POPS LF@c                                                                       #    26/46
CLEARS                                                                          #    27/46
DEFVAR LF@d                                                                     #    28/46
MOVE LF@d float@0.0                                                             #    29/46
PUSHS float@78e4                                                                #    30/46
POPS LF@d                                                                       #    31/46
CLEARS                                                                          #    32/46
DEFVAR LF@e                                                                     #    33/46
MOVE LF@e float@0.0                                                             #    34/46
PUSHS float@8e-4                                                                #    35/46
POPS LF@e                                                                       #    36/46
CLEARS                                                                          #    37/46
DEFVAR LF@f                                                                     #    38/46
MOVE LF@f float@0.0                                                             #    39/46
PUSHS float@87E4                                                                #    40/46
POPS LF@f                                                                       #    41/46
CLEARS                                                                          #    42/46
JUMP __INTERNAL__FILE_END                                                       #    43/46
# PROGRAM END                                                                   #    45/46
LABEL __INTERNAL__FILE_END                                                      #    46/46