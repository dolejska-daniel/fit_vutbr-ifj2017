# 2017-12-04 17:23:19.641054
# SECTION: 99_benchmarks
# TEST: 05
# INFO: factorial by recursion
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: BOOLOP, UNARY, IFTHEN, FUNEXP
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IJUMP at line: 2 with following arguments:
# Executing instruction: ILABEL at line: 58 with following arguments:
# Executing instruction: ICREATEFRAME at line: 59 with following arguments:
# Executing instruction: IPUSHFRAME at line: 60 with following arguments:
# Executing instruction: ICREATEFRAME at line: 61 with following arguments:
# Executing instruction: IDEFVAR at line: 62 with following arguments:
# Dest: LF@res
# Executing instruction: IMOVE at line: 63 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@res()
# Executing instruction: ICREATEFRAME at line: 64 with following arguments:
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 66 with following arguments:
# Dest: TF@n
# Executing instruction: IPOPS at line: 67 with following arguments:
# Arg1: Stack@=10(int)
# Dest: TF@n()
# Executing instruction: ICALL at line: 68 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: IPUSHFRAME at line: 6 with following arguments:
# Executing instruction: ICREATEFRAME at line: 7 with following arguments:
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: LF@temp_result
# Executing instruction: IMOVE at line: 9 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@temp_result()
# Executing instruction: IDEFVAR at line: 10 with following arguments:
# Dest: LF@decremented_n
# Executing instruction: IMOVE at line: 11 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@decremented_n()
# Executing instruction: IDEFVAR at line: 12 with following arguments:
# Dest: LF@result
# Executing instruction: IMOVE at line: 13 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@result()
# Executing instruction: ICREATEFRAME at line: 15 with following arguments:
# Executing instruction: IPUSHS at line: 17 with following arguments:
# Arg1: LF@n=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 18 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 19 with following arguments:
# Arg1: Stack@=10(int)
# Arg2: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 20 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 21 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 27 with following arguments:
# Executing instruction: IPUSHS at line: 29 with following arguments:
# Arg1: LF@n=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 31 with following arguments:
# Arg1: Stack@=10(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 32 with following arguments:
# Arg1: Stack@=9(int)
# Dest: LF@decremented_n=0(int)
# Executing instruction: ICLEARS at line: 33 with following arguments:
# Executing instruction: ICREATEFRAME at line: 34 with following arguments:
# Executing instruction: IPUSHS at line: 35 with following arguments:
# Arg1: LF@decremented_n=9(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 36 with following arguments:
# Dest: TF@n
# Executing instruction: IPOPS at line: 37 with following arguments:
# Arg1: Stack@=9(int)
# Dest: TF@n()
# Executing instruction: ICALL at line: 38 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: IPUSHFRAME at line: 6 with following arguments:
# Executing instruction: ICREATEFRAME at line: 7 with following arguments:
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: LF@temp_result
# Executing instruction: IMOVE at line: 9 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@temp_result()
# Executing instruction: IDEFVAR at line: 10 with following arguments:
# Dest: LF@decremented_n
# Executing instruction: IMOVE at line: 11 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@decremented_n()
# Executing instruction: IDEFVAR at line: 12 with following arguments:
# Dest: LF@result
# Executing instruction: IMOVE at line: 13 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@result()
# Executing instruction: ICREATEFRAME at line: 15 with following arguments:
# Executing instruction: IPUSHS at line: 17 with following arguments:
# Arg1: LF@n=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 18 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 19 with following arguments:
# Arg1: Stack@=9(int)
# Arg2: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 20 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 21 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 27 with following arguments:
# Executing instruction: IPUSHS at line: 29 with following arguments:
# Arg1: LF@n=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 31 with following arguments:
# Arg1: Stack@=9(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 32 with following arguments:
# Arg1: Stack@=8(int)
# Dest: LF@decremented_n=0(int)
# Executing instruction: ICLEARS at line: 33 with following arguments:
# Executing instruction: ICREATEFRAME at line: 34 with following arguments:
# Executing instruction: IPUSHS at line: 35 with following arguments:
# Arg1: LF@decremented_n=8(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 36 with following arguments:
# Dest: TF@n
# Executing instruction: IPOPS at line: 37 with following arguments:
# Arg1: Stack@=8(int)
# Dest: TF@n()
# Executing instruction: ICALL at line: 38 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: IPUSHFRAME at line: 6 with following arguments:
# Executing instruction: ICREATEFRAME at line: 7 with following arguments:
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: LF@temp_result
# Executing instruction: IMOVE at line: 9 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@temp_result()
# Executing instruction: IDEFVAR at line: 10 with following arguments:
# Dest: LF@decremented_n
# Executing instruction: IMOVE at line: 11 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@decremented_n()
# Executing instruction: IDEFVAR at line: 12 with following arguments:
# Dest: LF@result
# Executing instruction: IMOVE at line: 13 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@result()
# Executing instruction: ICREATEFRAME at line: 15 with following arguments:
# Executing instruction: IPUSHS at line: 17 with following arguments:
# Arg1: LF@n=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 18 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 19 with following arguments:
# Arg1: Stack@=8(int)
# Arg2: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 20 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 21 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 27 with following arguments:
# Executing instruction: IPUSHS at line: 29 with following arguments:
# Arg1: LF@n=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 31 with following arguments:
# Arg1: Stack@=8(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 32 with following arguments:
# Arg1: Stack@=7(int)
# Dest: LF@decremented_n=0(int)
# Executing instruction: ICLEARS at line: 33 with following arguments:
# Executing instruction: ICREATEFRAME at line: 34 with following arguments:
# Executing instruction: IPUSHS at line: 35 with following arguments:
# Arg1: LF@decremented_n=7(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 36 with following arguments:
# Dest: TF@n
# Executing instruction: IPOPS at line: 37 with following arguments:
# Arg1: Stack@=7(int)
# Dest: TF@n()
# Executing instruction: ICALL at line: 38 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: IPUSHFRAME at line: 6 with following arguments:
# Executing instruction: ICREATEFRAME at line: 7 with following arguments:
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: LF@temp_result
# Executing instruction: IMOVE at line: 9 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@temp_result()
# Executing instruction: IDEFVAR at line: 10 with following arguments:
# Dest: LF@decremented_n
# Executing instruction: IMOVE at line: 11 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@decremented_n()
# Executing instruction: IDEFVAR at line: 12 with following arguments:
# Dest: LF@result
# Executing instruction: IMOVE at line: 13 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@result()
# Executing instruction: ICREATEFRAME at line: 15 with following arguments:
# Executing instruction: IPUSHS at line: 17 with following arguments:
# Arg1: LF@n=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 18 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 19 with following arguments:
# Arg1: Stack@=7(int)
# Arg2: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 20 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 21 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 27 with following arguments:
# Executing instruction: IPUSHS at line: 29 with following arguments:
# Arg1: LF@n=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 31 with following arguments:
# Arg1: Stack@=7(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 32 with following arguments:
# Arg1: Stack@=6(int)
# Dest: LF@decremented_n=0(int)
# Executing instruction: ICLEARS at line: 33 with following arguments:
# Executing instruction: ICREATEFRAME at line: 34 with following arguments:
# Executing instruction: IPUSHS at line: 35 with following arguments:
# Arg1: LF@decremented_n=6(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 36 with following arguments:
# Dest: TF@n
# Executing instruction: IPOPS at line: 37 with following arguments:
# Arg1: Stack@=6(int)
# Dest: TF@n()
# Executing instruction: ICALL at line: 38 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: IPUSHFRAME at line: 6 with following arguments:
# Executing instruction: ICREATEFRAME at line: 7 with following arguments:
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: LF@temp_result
# Executing instruction: IMOVE at line: 9 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@temp_result()
# Executing instruction: IDEFVAR at line: 10 with following arguments:
# Dest: LF@decremented_n
# Executing instruction: IMOVE at line: 11 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@decremented_n()
# Executing instruction: IDEFVAR at line: 12 with following arguments:
# Dest: LF@result
# Executing instruction: IMOVE at line: 13 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@result()
# Executing instruction: ICREATEFRAME at line: 15 with following arguments:
# Executing instruction: IPUSHS at line: 17 with following arguments:
# Arg1: LF@n=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 18 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 19 with following arguments:
# Arg1: Stack@=6(int)
# Arg2: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 20 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 21 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 27 with following arguments:
# Executing instruction: IPUSHS at line: 29 with following arguments:
# Arg1: LF@n=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 31 with following arguments:
# Arg1: Stack@=6(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 32 with following arguments:
# Arg1: Stack@=5(int)
# Dest: LF@decremented_n=0(int)
# Executing instruction: ICLEARS at line: 33 with following arguments:
# Executing instruction: ICREATEFRAME at line: 34 with following arguments:
# Executing instruction: IPUSHS at line: 35 with following arguments:
# Arg1: LF@decremented_n=5(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 36 with following arguments:
# Dest: TF@n
# Executing instruction: IPOPS at line: 37 with following arguments:
# Arg1: Stack@=5(int)
# Dest: TF@n()
# Executing instruction: ICALL at line: 38 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: IPUSHFRAME at line: 6 with following arguments:
# Executing instruction: ICREATEFRAME at line: 7 with following arguments:
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: LF@temp_result
# Executing instruction: IMOVE at line: 9 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@temp_result()
# Executing instruction: IDEFVAR at line: 10 with following arguments:
# Dest: LF@decremented_n
# Executing instruction: IMOVE at line: 11 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@decremented_n()
# Executing instruction: IDEFVAR at line: 12 with following arguments:
# Dest: LF@result
# Executing instruction: IMOVE at line: 13 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@result()
# Executing instruction: ICREATEFRAME at line: 15 with following arguments:
# Executing instruction: IPUSHS at line: 17 with following arguments:
# Arg1: LF@n=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 18 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 19 with following arguments:
# Arg1: Stack@=5(int)
# Arg2: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 20 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 21 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 27 with following arguments:
# Executing instruction: IPUSHS at line: 29 with following arguments:
# Arg1: LF@n=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 31 with following arguments:
# Arg1: Stack@=5(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 32 with following arguments:
# Arg1: Stack@=4(int)
# Dest: LF@decremented_n=0(int)
# Executing instruction: ICLEARS at line: 33 with following arguments:
# Executing instruction: ICREATEFRAME at line: 34 with following arguments:
# Executing instruction: IPUSHS at line: 35 with following arguments:
# Arg1: LF@decremented_n=4(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 36 with following arguments:
# Dest: TF@n
# Executing instruction: IPOPS at line: 37 with following arguments:
# Arg1: Stack@=4(int)
# Dest: TF@n()
# Executing instruction: ICALL at line: 38 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: IPUSHFRAME at line: 6 with following arguments:
# Executing instruction: ICREATEFRAME at line: 7 with following arguments:
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: LF@temp_result
# Executing instruction: IMOVE at line: 9 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@temp_result()
# Executing instruction: IDEFVAR at line: 10 with following arguments:
# Dest: LF@decremented_n
# Executing instruction: IMOVE at line: 11 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@decremented_n()
# Executing instruction: IDEFVAR at line: 12 with following arguments:
# Dest: LF@result
# Executing instruction: IMOVE at line: 13 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@result()
# Executing instruction: ICREATEFRAME at line: 15 with following arguments:
# Executing instruction: IPUSHS at line: 17 with following arguments:
# Arg1: LF@n=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 18 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 19 with following arguments:
# Arg1: Stack@=4(int)
# Arg2: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 20 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 21 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 27 with following arguments:
# Executing instruction: IPUSHS at line: 29 with following arguments:
# Arg1: LF@n=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 31 with following arguments:
# Arg1: Stack@=4(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 32 with following arguments:
# Arg1: Stack@=3(int)
# Dest: LF@decremented_n=0(int)
# Executing instruction: ICLEARS at line: 33 with following arguments:
# Executing instruction: ICREATEFRAME at line: 34 with following arguments:
# Executing instruction: IPUSHS at line: 35 with following arguments:
# Arg1: LF@decremented_n=3(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 36 with following arguments:
# Dest: TF@n
# Executing instruction: IPOPS at line: 37 with following arguments:
# Arg1: Stack@=3(int)
# Dest: TF@n()
# Executing instruction: ICALL at line: 38 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: IPUSHFRAME at line: 6 with following arguments:
# Executing instruction: ICREATEFRAME at line: 7 with following arguments:
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: LF@temp_result
# Executing instruction: IMOVE at line: 9 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@temp_result()
# Executing instruction: IDEFVAR at line: 10 with following arguments:
# Dest: LF@decremented_n
# Executing instruction: IMOVE at line: 11 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@decremented_n()
# Executing instruction: IDEFVAR at line: 12 with following arguments:
# Dest: LF@result
# Executing instruction: IMOVE at line: 13 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@result()
# Executing instruction: ICREATEFRAME at line: 15 with following arguments:
# Executing instruction: IPUSHS at line: 17 with following arguments:
# Arg1: LF@n=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 18 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 19 with following arguments:
# Arg1: Stack@=3(int)
# Arg2: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 20 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 21 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 27 with following arguments:
# Executing instruction: IPUSHS at line: 29 with following arguments:
# Arg1: LF@n=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 31 with following arguments:
# Arg1: Stack@=3(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 32 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@decremented_n=0(int)
# Executing instruction: ICLEARS at line: 33 with following arguments:
# Executing instruction: ICREATEFRAME at line: 34 with following arguments:
# Executing instruction: IPUSHS at line: 35 with following arguments:
# Arg1: LF@decremented_n=2(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 36 with following arguments:
# Dest: TF@n
# Executing instruction: IPOPS at line: 37 with following arguments:
# Arg1: Stack@=2(int)
# Dest: TF@n()
# Executing instruction: ICALL at line: 38 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: IPUSHFRAME at line: 6 with following arguments:
# Executing instruction: ICREATEFRAME at line: 7 with following arguments:
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: LF@temp_result
# Executing instruction: IMOVE at line: 9 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@temp_result()
# Executing instruction: IDEFVAR at line: 10 with following arguments:
# Dest: LF@decremented_n
# Executing instruction: IMOVE at line: 11 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@decremented_n()
# Executing instruction: IDEFVAR at line: 12 with following arguments:
# Dest: LF@result
# Executing instruction: IMOVE at line: 13 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@result()
# Executing instruction: ICREATEFRAME at line: 15 with following arguments:
# Executing instruction: IPUSHS at line: 17 with following arguments:
# Arg1: LF@n=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 18 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 19 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 20 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 21 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 27 with following arguments:
# Executing instruction: IPUSHS at line: 29 with following arguments:
# Arg1: LF@n=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 31 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 32 with following arguments:
# Arg1: Stack@=1(int)
# Dest: LF@decremented_n=0(int)
# Executing instruction: ICLEARS at line: 33 with following arguments:
# Executing instruction: ICREATEFRAME at line: 34 with following arguments:
# Executing instruction: IPUSHS at line: 35 with following arguments:
# Arg1: LF@decremented_n=1(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 36 with following arguments:
# Dest: TF@n
# Executing instruction: IPOPS at line: 37 with following arguments:
# Arg1: Stack@=1(int)
# Dest: TF@n()
# Executing instruction: ICALL at line: 38 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: IPUSHFRAME at line: 6 with following arguments:
# Executing instruction: ICREATEFRAME at line: 7 with following arguments:
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: LF@temp_result
# Executing instruction: IMOVE at line: 9 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@temp_result()
# Executing instruction: IDEFVAR at line: 10 with following arguments:
# Dest: LF@decremented_n
# Executing instruction: IMOVE at line: 11 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@decremented_n()
# Executing instruction: IDEFVAR at line: 12 with following arguments:
# Dest: LF@result
# Executing instruction: IMOVE at line: 13 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@result()
# Executing instruction: ICREATEFRAME at line: 15 with following arguments:
# Executing instruction: IPUSHS at line: 17 with following arguments:
# Arg1: LF@n=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 18 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 19 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 20 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 21 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 23 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 24 with following arguments:
# Arg1: Stack@=1(int)
# Dest: LF@result=0(int)
# Executing instruction: ICLEARS at line: 25 with following arguments:
# Executing instruction: IJUMP at line: 26 with following arguments:
# Executing instruction: ILABEL at line: 48 with following arguments:
# Executing instruction: ICREATEFRAME at line: 49 with following arguments:
# Executing instruction: IPUSHS at line: 51 with following arguments:
# Arg1: LF@result=1(int)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 52 with following arguments:
# Executing instruction: IPOPFRAME at line: 39 with following arguments:
# Executing instruction: IPOPS at line: 40 with following arguments:
# Arg1: Stack@=1(int)
# Dest: LF@temp_result=0(int)
# Executing instruction: ICLEARS at line: 41 with following arguments:
# Executing instruction: IPUSHS at line: 42 with following arguments:
# Arg1: LF@n=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 43 with following arguments:
# Arg1: LF@temp_result=1(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 44 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 45 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@result=0(int)
# Executing instruction: ICLEARS at line: 46 with following arguments:
# Executing instruction: ILABEL at line: 48 with following arguments:
# Executing instruction: ICREATEFRAME at line: 49 with following arguments:
# Executing instruction: IPUSHS at line: 51 with following arguments:
# Arg1: LF@result=2(int)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 52 with following arguments:
# Executing instruction: IPOPFRAME at line: 39 with following arguments:
# Executing instruction: IPOPS at line: 40 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@temp_result=0(int)
# Executing instruction: ICLEARS at line: 41 with following arguments:
# Executing instruction: IPUSHS at line: 42 with following arguments:
# Arg1: LF@n=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 43 with following arguments:
# Arg1: LF@temp_result=2(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 44 with following arguments:
# Arg1: Stack@=3(int)
# Arg2: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 45 with following arguments:
# Arg1: Stack@=6(int)
# Dest: LF@result=0(int)
# Executing instruction: ICLEARS at line: 46 with following arguments:
# Executing instruction: ILABEL at line: 48 with following arguments:
# Executing instruction: ICREATEFRAME at line: 49 with following arguments:
# Executing instruction: IPUSHS at line: 51 with following arguments:
# Arg1: LF@result=6(int)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 52 with following arguments:
# Executing instruction: IPOPFRAME at line: 39 with following arguments:
# Executing instruction: IPOPS at line: 40 with following arguments:
# Arg1: Stack@=6(int)
# Dest: LF@temp_result=0(int)
# Executing instruction: ICLEARS at line: 41 with following arguments:
# Executing instruction: IPUSHS at line: 42 with following arguments:
# Arg1: LF@n=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 43 with following arguments:
# Arg1: LF@temp_result=6(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 44 with following arguments:
# Arg1: Stack@=4(int)
# Arg2: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 45 with following arguments:
# Arg1: Stack@=24(int)
# Dest: LF@result=0(int)
# Executing instruction: ICLEARS at line: 46 with following arguments:
# Executing instruction: ILABEL at line: 48 with following arguments:
# Executing instruction: ICREATEFRAME at line: 49 with following arguments:
# Executing instruction: IPUSHS at line: 51 with following arguments:
# Arg1: LF@result=24(int)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 52 with following arguments:
# Executing instruction: IPOPFRAME at line: 39 with following arguments:
# Executing instruction: IPOPS at line: 40 with following arguments:
# Arg1: Stack@=24(int)
# Dest: LF@temp_result=0(int)
# Executing instruction: ICLEARS at line: 41 with following arguments:
# Executing instruction: IPUSHS at line: 42 with following arguments:
# Arg1: LF@n=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 43 with following arguments:
# Arg1: LF@temp_result=24(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 44 with following arguments:
# Arg1: Stack@=5(int)
# Arg2: Stack@=24(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 45 with following arguments:
# Arg1: Stack@=120(int)
# Dest: LF@result=0(int)
# Executing instruction: ICLEARS at line: 46 with following arguments:
# Executing instruction: ILABEL at line: 48 with following arguments:
# Executing instruction: ICREATEFRAME at line: 49 with following arguments:
# Executing instruction: IPUSHS at line: 51 with following arguments:
# Arg1: LF@result=120(int)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 52 with following arguments:
# Executing instruction: IPOPFRAME at line: 39 with following arguments:
# Executing instruction: IPOPS at line: 40 with following arguments:
# Arg1: Stack@=120(int)
# Dest: LF@temp_result=0(int)
# Executing instruction: ICLEARS at line: 41 with following arguments:
# Executing instruction: IPUSHS at line: 42 with following arguments:
# Arg1: LF@n=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 43 with following arguments:
# Arg1: LF@temp_result=120(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 44 with following arguments:
# Arg1: Stack@=6(int)
# Arg2: Stack@=120(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 45 with following arguments:
# Arg1: Stack@=720(int)
# Dest: LF@result=0(int)
# Executing instruction: ICLEARS at line: 46 with following arguments:
# Executing instruction: ILABEL at line: 48 with following arguments:
# Executing instruction: ICREATEFRAME at line: 49 with following arguments:
# Executing instruction: IPUSHS at line: 51 with following arguments:
# Arg1: LF@result=720(int)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 52 with following arguments:
# Executing instruction: IPOPFRAME at line: 39 with following arguments:
# Executing instruction: IPOPS at line: 40 with following arguments:
# Arg1: Stack@=720(int)
# Dest: LF@temp_result=0(int)
# Executing instruction: ICLEARS at line: 41 with following arguments:
# Executing instruction: IPUSHS at line: 42 with following arguments:
# Arg1: LF@n=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 43 with following arguments:
# Arg1: LF@temp_result=720(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 44 with following arguments:
# Arg1: Stack@=7(int)
# Arg2: Stack@=720(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 45 with following arguments:
# Arg1: Stack@=5040(int)
# Dest: LF@result=0(int)
# Executing instruction: ICLEARS at line: 46 with following arguments:
# Executing instruction: ILABEL at line: 48 with following arguments:
# Executing instruction: ICREATEFRAME at line: 49 with following arguments:
# Executing instruction: IPUSHS at line: 51 with following arguments:
# Arg1: LF@result=5040(int)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 52 with following arguments:
# Executing instruction: IPOPFRAME at line: 39 with following arguments:
# Executing instruction: IPOPS at line: 40 with following arguments:
# Arg1: Stack@=5040(int)
# Dest: LF@temp_result=0(int)
# Executing instruction: ICLEARS at line: 41 with following arguments:
# Executing instruction: IPUSHS at line: 42 with following arguments:
# Arg1: LF@n=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 43 with following arguments:
# Arg1: LF@temp_result=5040(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 44 with following arguments:
# Arg1: Stack@=8(int)
# Arg2: Stack@=5040(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 45 with following arguments:
# Arg1: Stack@=40320(int)
# Dest: LF@result=0(int)
# Executing instruction: ICLEARS at line: 46 with following arguments:
# Executing instruction: ILABEL at line: 48 with following arguments:
# Executing instruction: ICREATEFRAME at line: 49 with following arguments:
# Executing instruction: IPUSHS at line: 51 with following arguments:
# Arg1: LF@result=40320(int)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 52 with following arguments:
# Executing instruction: IPOPFRAME at line: 39 with following arguments:
# Executing instruction: IPOPS at line: 40 with following arguments:
# Arg1: Stack@=40320(int)
# Dest: LF@temp_result=0(int)
# Executing instruction: ICLEARS at line: 41 with following arguments:
# Executing instruction: IPUSHS at line: 42 with following arguments:
# Arg1: LF@n=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 43 with following arguments:
# Arg1: LF@temp_result=40320(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 44 with following arguments:
# Arg1: Stack@=9(int)
# Arg2: Stack@=40320(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 45 with following arguments:
# Arg1: Stack@=362880(int)
# Dest: LF@result=0(int)
# Executing instruction: ICLEARS at line: 46 with following arguments:
# Executing instruction: ILABEL at line: 48 with following arguments:
# Executing instruction: ICREATEFRAME at line: 49 with following arguments:
# Executing instruction: IPUSHS at line: 51 with following arguments:
# Arg1: LF@result=362880(int)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 52 with following arguments:
# Executing instruction: IPOPFRAME at line: 39 with following arguments:
# Executing instruction: IPOPS at line: 40 with following arguments:
# Arg1: Stack@=362880(int)
# Dest: LF@temp_result=0(int)
# Executing instruction: ICLEARS at line: 41 with following arguments:
# Executing instruction: IPUSHS at line: 42 with following arguments:
# Arg1: LF@n=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 43 with following arguments:
# Arg1: LF@temp_result=362880(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 44 with following arguments:
# Arg1: Stack@=10(int)
# Arg2: Stack@=362880(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 45 with following arguments:
# Arg1: Stack@=3628800(int)
# Dest: LF@result=0(int)
# Executing instruction: ICLEARS at line: 46 with following arguments:
# Executing instruction: ILABEL at line: 48 with following arguments:
# Executing instruction: ICREATEFRAME at line: 49 with following arguments:
# Executing instruction: IPUSHS at line: 51 with following arguments:
# Arg1: LF@result=3628800(int)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 52 with following arguments:
# Executing instruction: IPOPFRAME at line: 69 with following arguments:
# Executing instruction: IPOPS at line: 70 with following arguments:
# Arg1: Stack@=3628800(int)
# Dest: LF@res=0(int)
# Executing instruction: ICLEARS at line: 71 with following arguments:
# Executing instruction: IPUSHS at line: 72 with following arguments:
# Arg1: LF@res=3628800(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 73 with following arguments:
# Dest: TF@__INTERNAL__VAR_0
# Executing instruction: IMOVE at line: 74 with following arguments:
# Arg1: Const@=0(int)
# Dest: TF@__INTERNAL__VAR_0()
# Executing instruction: IPOPS at line: 75 with following arguments:
# Arg1: Stack@=3628800(int)
# Dest: TF@__INTERNAL__VAR_0=0(int)
# Executing instruction: IWRITE at line: 76 with following arguments:
# Arg1: TF@__INTERNAL__VAR_0=3628800(int)
# Executing instruction: IJUMP at line: 77 with following arguments:
# Executing instruction: ILABEL at line: 82 with following arguments:
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 1517 (590+927)
# 
#   1: ' factorial by recursion
#   2: declare function factorial (n As integer) As integer
#   3: function factorial (n As integer) As integer
#   4: 	dim temp_result As integer
#   5: 	dim decremented_n As integer
#   6: 	dim result As integer
#   7: 	if n < 2 Then
#   8: 		result = 1
#   9: 	Else
#  10: 		decremented_n = n - 1
#  11: 		temp_result = factorial(decremented_n)
#  12: 		result = n * temp_result
#  13: 	end if
#  14: 	Return result
#  15: end function
#  16: 
#  17: scope
#  18: 	dim res as integer
#  19: 	res = factorial(10)
#  20: 	print res;
#  21: end scope

########################################

.IFJcode17                                                                      #     1/82
JUMP main                                                                       #     2/82
# FUNCTION                                                                      #     4/82
LABEL factorial                                                                 #     5/82
PUSHFRAME                                                                       #     6/82
CREATEFRAME                                                                     #     7/82
DEFVAR LF@temp_result                                                           #     8/82
MOVE LF@temp_result int@0                                                       #     9/82
DEFVAR LF@decremented_n                                                         #    10/82
MOVE LF@decremented_n int@0                                                     #    11/82
DEFVAR LF@result                                                                #    12/82
MOVE LF@result int@0                                                            #    13/82
# IF BLOCK                                                                      #    14/82
CREATEFRAME                                                                     #    15/82
# IF                                                                            #    16/82
PUSHS LF@n                                                                      #    17/82
PUSHS int@2                                                                     #    18/82
LTS                                                                             #    19/82
PUSHS bool@true                                                                 #    20/82
JUMPIFNEQS __INTERNAL__COND_0_END                                               #    21/82
# THEN                                                                          #    22/82
PUSHS int@1                                                                     #    23/82
POPS LF@result                                                                  #    24/82
CLEARS                                                                          #    25/82
JUMP __INTERNAL__COND_0_BLOCK_END                                               #    26/82
LABEL __INTERNAL__COND_0_END                                                    #    27/82
# ELSE                                                                          #    28/82
PUSHS LF@n                                                                      #    29/82
PUSHS int@1                                                                     #    30/82
SUBS                                                                            #    31/82
POPS LF@decremented_n                                                           #    32/82
CLEARS                                                                          #    33/82
CREATEFRAME                                                                     #    34/82
PUSHS LF@decremented_n                                                          #    35/82
DEFVAR TF@n                                                                     #    36/82
POPS TF@n                                                                       #    37/82
CALL factorial                                                                  #    38/82
POPFRAME                                                                        #    39/82
POPS LF@temp_result                                                             #    40/82
CLEARS                                                                          #    41/82
PUSHS LF@n                                                                      #    42/82
PUSHS LF@temp_result                                                            #    43/82
MULS                                                                            #    44/82
POPS LF@result                                                                  #    45/82
CLEARS                                                                          #    46/82
# END IF                                                                        #    47/82
LABEL __INTERNAL__COND_0_BLOCK_END                                              #    48/82
CREATEFRAME                                                                     #    49/82
# END IF BLOCK                                                                  #    50/82
PUSHS LF@result                                                                 #    51/82
RETURN                                                                          #    52/82
PUSHS int@0                                                                     #    53/82
RETURN                                                                          #    54/82
# END FUNCTION                                                                  #    55/82
# MAIN                                                                          #    57/82
LABEL main                                                                      #    58/82
CREATEFRAME                                                                     #    59/82
PUSHFRAME                                                                       #    60/82
CREATEFRAME                                                                     #    61/82
DEFVAR LF@res                                                                   #    62/82
MOVE LF@res int@0                                                               #    63/82
CREATEFRAME                                                                     #    64/82
PUSHS int@10                                                                    #    65/82
DEFVAR TF@n                                                                     #    66/82
POPS TF@n                                                                       #    67/82
CALL factorial                                                                  #    68/82
POPFRAME                                                                        #    69/82
POPS LF@res                                                                     #    70/82
CLEARS                                                                          #    71/82
PUSHS LF@res                                                                    #    72/82
DEFVAR TF@__INTERNAL__VAR_0                                                     #    73/82
MOVE TF@__INTERNAL__VAR_0 int@0                                                 #    74/82
POPS TF@__INTERNAL__VAR_0                                                       #    75/82
WRITE TF@__INTERNAL__VAR_0                                                      #    76/82
JUMP __INTERNAL__FILE_END                                                       #    77/82
# MAIN END                                                                      #    79/82
# PROGRAM END                                                                   #    81/82
LABEL __INTERNAL__FILE_END                                                      #    82/82