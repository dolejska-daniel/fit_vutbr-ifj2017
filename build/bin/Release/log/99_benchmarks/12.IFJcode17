# 2017-12-04 14:49:32.269797
# SECTION: 99_benchmarks
# TEST: 12
# INFO: Ackerman function for ackerman(2, 5)
# REQUIRED EXTENSIONS: FUNEXP
# ACTIVATED EXTENSIONS: UNARY, IFTHEN, FUNEXP, BOOLOP
# STATE: FAIL
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IJUMP at line: 2 with following arguments:
# Executing instruction: ILABEL at line: 83 with following arguments:
# Executing instruction: ICREATEFRAME at line: 84 with following arguments:
# Executing instruction: IPUSHFRAME at line: 85 with following arguments:
# Executing instruction: ICREATEFRAME at line: 86 with following arguments:
# Executing instruction: IDEFVAR at line: 87 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 88 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@a()
# Executing instruction: ICREATEFRAME at line: 89 with following arguments:
# Executing instruction: IPUSHS at line: 90 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 91 with following arguments:
# Dest: TF@m
# Executing instruction: IPOPS at line: 92 with following arguments:
# Arg1: Stack@=2(int)
# Dest: TF@m()
# Executing instruction: IPUSHS at line: 93 with following arguments:
# Arg1: Const@=5(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 94 with following arguments:
# Dest: TF@n
# Executing instruction: IPOPS at line: 95 with following arguments:
# Arg1: Stack@=5(int)
# Dest: TF@n()
# Executing instruction: ICALL at line: 96 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: IPUSHFRAME at line: 6 with following arguments:
# Executing instruction: ICREATEFRAME at line: 7 with following arguments:
# Executing instruction: ICREATEFRAME at line: 9 with following arguments:
# Executing instruction: IPUSHS at line: 11 with following arguments:
# Arg1: LF@m=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 12 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 13 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 14 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 15 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 22 with following arguments:
# Executing instruction: ICREATEFRAME at line: 25 with following arguments:
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: LF@n=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 28 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 29 with following arguments:
# Arg1: Stack@=5(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 31 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 46 with following arguments:
# Executing instruction: ICREATEFRAME at line: 48 with following arguments:
# Executing instruction: IPUSHS at line: 49 with following arguments:
# Arg1: LF@m=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 50 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 51 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 52 with following arguments:
# Dest: TF@m
# Executing instruction: IPOPS at line: 53 with following arguments:
# Arg1: Stack@=1(int)
# Dest: TF@m()
# Executing instruction: ICREATEFRAME at line: 54 with following arguments:
# Executing instruction: IPUSHS at line: 55 with following arguments:
# Arg1: LF@m=2(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 56 with following arguments:
# Dest: TF@m
# Executing instruction: IPOPS at line: 57 with following arguments:
# Arg1: Stack@=2(int)
# Dest: TF@m()
# Executing instruction: IPUSHS at line: 58 with following arguments:
# Arg1: LF@n=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 59 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 60 with following arguments:
# Arg1: Stack@=5(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 61 with following arguments:
# Dest: TF@n
# Executing instruction: IPOPS at line: 62 with following arguments:
# Arg1: Stack@=4(int)
# Dest: TF@n()
# Executing instruction: ICALL at line: 63 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: IPUSHFRAME at line: 6 with following arguments:
# Executing instruction: ICREATEFRAME at line: 7 with following arguments:
# Executing instruction: ICREATEFRAME at line: 9 with following arguments:
# Executing instruction: IPUSHS at line: 11 with following arguments:
# Arg1: LF@m=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 12 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 13 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 14 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 15 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 22 with following arguments:
# Executing instruction: ICREATEFRAME at line: 25 with following arguments:
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: LF@n=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 28 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 29 with following arguments:
# Arg1: Stack@=4(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 31 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 46 with following arguments:
# Executing instruction: ICREATEFRAME at line: 48 with following arguments:
# Executing instruction: IPUSHS at line: 49 with following arguments:
# Arg1: LF@m=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 50 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 51 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 52 with following arguments:
# Dest: TF@m
# Executing instruction: IPOPS at line: 53 with following arguments:
# Arg1: Stack@=1(int)
# Dest: TF@m()
# Executing instruction: ICREATEFRAME at line: 54 with following arguments:
# Executing instruction: IPUSHS at line: 55 with following arguments:
# Arg1: LF@m=2(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 56 with following arguments:
# Dest: TF@m
# Executing instruction: IPOPS at line: 57 with following arguments:
# Arg1: Stack@=2(int)
# Dest: TF@m()
# Executing instruction: IPUSHS at line: 58 with following arguments:
# Arg1: LF@n=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 59 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 60 with following arguments:
# Arg1: Stack@=4(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 61 with following arguments:
# Dest: TF@n
# Executing instruction: IPOPS at line: 62 with following arguments:
# Arg1: Stack@=3(int)
# Dest: TF@n()
# Executing instruction: ICALL at line: 63 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: IPUSHFRAME at line: 6 with following arguments:
# Executing instruction: ICREATEFRAME at line: 7 with following arguments:
# Executing instruction: ICREATEFRAME at line: 9 with following arguments:
# Executing instruction: IPUSHS at line: 11 with following arguments:
# Arg1: LF@m=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 12 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 13 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 14 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 15 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 22 with following arguments:
# Executing instruction: ICREATEFRAME at line: 25 with following arguments:
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: LF@n=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 28 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 29 with following arguments:
# Arg1: Stack@=3(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 31 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 46 with following arguments:
# Executing instruction: ICREATEFRAME at line: 48 with following arguments:
# Executing instruction: IPUSHS at line: 49 with following arguments:
# Arg1: LF@m=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 50 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 51 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 52 with following arguments:
# Dest: TF@m
# Executing instruction: IPOPS at line: 53 with following arguments:
# Arg1: Stack@=1(int)
# Dest: TF@m()
# Executing instruction: ICREATEFRAME at line: 54 with following arguments:
# Executing instruction: IPUSHS at line: 55 with following arguments:
# Arg1: LF@m=2(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 56 with following arguments:
# Dest: TF@m
# Executing instruction: IPOPS at line: 57 with following arguments:
# Arg1: Stack@=2(int)
# Dest: TF@m()
# Executing instruction: IPUSHS at line: 58 with following arguments:
# Arg1: LF@n=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 59 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 60 with following arguments:
# Arg1: Stack@=3(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 61 with following arguments:
# Dest: TF@n
# Executing instruction: IPOPS at line: 62 with following arguments:
# Arg1: Stack@=2(int)
# Dest: TF@n()
# Executing instruction: ICALL at line: 63 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: IPUSHFRAME at line: 6 with following arguments:
# Executing instruction: ICREATEFRAME at line: 7 with following arguments:
# Executing instruction: ICREATEFRAME at line: 9 with following arguments:
# Executing instruction: IPUSHS at line: 11 with following arguments:
# Arg1: LF@m=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 12 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 13 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 14 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 15 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 22 with following arguments:
# Executing instruction: ICREATEFRAME at line: 25 with following arguments:
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: LF@n=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 28 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 29 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 31 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 46 with following arguments:
# Executing instruction: ICREATEFRAME at line: 48 with following arguments:
# Executing instruction: IPUSHS at line: 49 with following arguments:
# Arg1: LF@m=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 50 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 51 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 52 with following arguments:
# Dest: TF@m
# Executing instruction: IPOPS at line: 53 with following arguments:
# Arg1: Stack@=1(int)
# Dest: TF@m()
# Executing instruction: ICREATEFRAME at line: 54 with following arguments:
# Executing instruction: IPUSHS at line: 55 with following arguments:
# Arg1: LF@m=2(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 56 with following arguments:
# Dest: TF@m
# Executing instruction: IPOPS at line: 57 with following arguments:
# Arg1: Stack@=2(int)
# Dest: TF@m()
# Executing instruction: IPUSHS at line: 58 with following arguments:
# Arg1: LF@n=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 59 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 60 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 61 with following arguments:
# Dest: TF@n
# Executing instruction: IPOPS at line: 62 with following arguments:
# Arg1: Stack@=1(int)
# Dest: TF@n()
# Executing instruction: ICALL at line: 63 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: IPUSHFRAME at line: 6 with following arguments:
# Executing instruction: ICREATEFRAME at line: 7 with following arguments:
# Executing instruction: ICREATEFRAME at line: 9 with following arguments:
# Executing instruction: IPUSHS at line: 11 with following arguments:
# Arg1: LF@m=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 12 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 13 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 14 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 15 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 22 with following arguments:
# Executing instruction: ICREATEFRAME at line: 25 with following arguments:
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: LF@n=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 28 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 29 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 31 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 46 with following arguments:
# Executing instruction: ICREATEFRAME at line: 48 with following arguments:
# Executing instruction: IPUSHS at line: 49 with following arguments:
# Arg1: LF@m=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 50 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 51 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 52 with following arguments:
# Dest: TF@m
# Executing instruction: IPOPS at line: 53 with following arguments:
# Arg1: Stack@=1(int)
# Dest: TF@m()
# Executing instruction: ICREATEFRAME at line: 54 with following arguments:
# Executing instruction: IPUSHS at line: 55 with following arguments:
# Arg1: LF@m=2(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 56 with following arguments:
# Dest: TF@m
# Executing instruction: IPOPS at line: 57 with following arguments:
# Arg1: Stack@=2(int)
# Dest: TF@m()
# Executing instruction: IPUSHS at line: 58 with following arguments:
# Arg1: LF@n=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 59 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 60 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 61 with following arguments:
# Dest: TF@n
# Executing instruction: IPOPS at line: 62 with following arguments:
# Arg1: Stack@=0(int)
# Dest: TF@n()
# Executing instruction: ICALL at line: 63 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: IPUSHFRAME at line: 6 with following arguments:
# Executing instruction: ICREATEFRAME at line: 7 with following arguments:
# Executing instruction: ICREATEFRAME at line: 9 with following arguments:
# Executing instruction: IPUSHS at line: 11 with following arguments:
# Arg1: LF@m=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 12 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 13 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 14 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 15 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 22 with following arguments:
# Executing instruction: ICREATEFRAME at line: 25 with following arguments:
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: LF@n=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 28 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 29 with following arguments:
# Arg1: Stack@=0(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 31 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ICREATEFRAME at line: 33 with following arguments:
# Executing instruction: IPUSHS at line: 34 with following arguments:
# Arg1: LF@m=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 35 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 36 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 37 with following arguments:
# Dest: TF@m
# Executing instruction: IPOPS at line: 38 with following arguments:
# Arg1: Stack@=1(int)
# Dest: TF@m()
# Executing instruction: IPUSHS at line: 39 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 40 with following arguments:
# Dest: TF@n
# Executing instruction: IPOPS at line: 41 with following arguments:
# Arg1: Stack@=1(int)
# Dest: TF@n()
# Executing instruction: ICALL at line: 42 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: IPUSHFRAME at line: 6 with following arguments:
# Executing instruction: ICREATEFRAME at line: 7 with following arguments:
# Executing instruction: ICREATEFRAME at line: 9 with following arguments:
# Executing instruction: IPUSHS at line: 11 with following arguments:
# Arg1: LF@m=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 12 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 13 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 14 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 15 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 22 with following arguments:
# Executing instruction: ICREATEFRAME at line: 25 with following arguments:
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: LF@n=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 28 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 29 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 31 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 46 with following arguments:
# Executing instruction: ICREATEFRAME at line: 48 with following arguments:
# Executing instruction: IPUSHS at line: 49 with following arguments:
# Arg1: LF@m=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 50 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 51 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 52 with following arguments:
# Dest: TF@m
# Executing instruction: IPOPS at line: 53 with following arguments:
# Arg1: Stack@=0(int)
# Dest: TF@m()
# Executing instruction: ICREATEFRAME at line: 54 with following arguments:
# Executing instruction: IPUSHS at line: 55 with following arguments:
# Arg1: LF@m=1(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 56 with following arguments:
# Dest: TF@m
# Executing instruction: IPOPS at line: 57 with following arguments:
# Arg1: Stack@=1(int)
# Dest: TF@m()
# Executing instruction: IPUSHS at line: 58 with following arguments:
# Arg1: LF@n=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 59 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 60 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 61 with following arguments:
# Dest: TF@n
# Executing instruction: IPOPS at line: 62 with following arguments:
# Arg1: Stack@=0(int)
# Dest: TF@n()
# Executing instruction: ICALL at line: 63 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: IPUSHFRAME at line: 6 with following arguments:
# Executing instruction: ICREATEFRAME at line: 7 with following arguments:
# Executing instruction: ICREATEFRAME at line: 9 with following arguments:
# Executing instruction: IPUSHS at line: 11 with following arguments:
# Arg1: LF@m=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 12 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 13 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 14 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 15 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 22 with following arguments:
# Executing instruction: ICREATEFRAME at line: 25 with following arguments:
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: LF@n=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 28 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 29 with following arguments:
# Arg1: Stack@=0(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 31 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ICREATEFRAME at line: 33 with following arguments:
# Executing instruction: IPUSHS at line: 34 with following arguments:
# Arg1: LF@m=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 35 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 36 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 37 with following arguments:
# Dest: TF@m
# Executing instruction: IPOPS at line: 38 with following arguments:
# Arg1: Stack@=0(int)
# Dest: TF@m()
# Executing instruction: IPUSHS at line: 39 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 40 with following arguments:
# Dest: TF@n
# Executing instruction: IPOPS at line: 41 with following arguments:
# Arg1: Stack@=1(int)
# Dest: TF@n()
# Executing instruction: ICALL at line: 42 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: IPUSHFRAME at line: 6 with following arguments:
# Executing instruction: ICREATEFRAME at line: 7 with following arguments:
# Executing instruction: ICREATEFRAME at line: 9 with following arguments:
# Executing instruction: IPUSHS at line: 11 with following arguments:
# Arg1: LF@m=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 12 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 13 with following arguments:
# Arg1: Stack@=0(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 14 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 15 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 17 with following arguments:
# Arg1: LF@n=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 18 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 19 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 20 with following arguments:
# Executing instruction: IPOPFRAME at line: 43 with following arguments:
# Executing instruction: IRETURN at line: 44 with following arguments:
# Executing instruction: IPOPFRAME at line: 64 with following arguments:
# Executing instruction: IDEFVAR at line: 65 with following arguments:
# Dest: TF@n
# Error at line: 65
# Symbol already exists!
# 
# EXPECTED INTERPRETER STDOUT:

#  13


# CURRENT INTERPRETER STDOUT:



# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 52
# PRICE: ---
# 
#   1: ' Ackerman function for ackerman(2, 5)
#   2: function ackermann(m as integer, n as integer) as integer
#   3: 	if m = 0 then
#   4: 		return n + 1
#   5: 	else
#   6: 		if n = 0 then
#   7: 			return ackermann(m - 1, 1)
#   8: 		else
#   9: 			return ackermann(m - 1, ackermann(m, n - 1))
#  10: 		end if
#  11: 	end if
#  12: end function
#  13: 
#  14: scope
#  15:     dim a as integer
#  16:     a = ackermann(2, 5)
#  17:     print a;
#  18: end scope

########################################

.IFJcode17                                                                      #     1/107
JUMP main                                                                       #     2/107
# FUNCTION                                                                      #     4/107
LABEL ackermann                                                                 #     5/107
PUSHFRAME                                                                       #     6/107
CREATEFRAME                                                                     #     7/107
# IF BLOCK                                                                      #     8/107
CREATEFRAME                                                                     #     9/107
# IF                                                                            #    10/107
PUSHS LF@m                                                                      #    11/107
PUSHS int@0                                                                     #    12/107
EQS                                                                             #    13/107
PUSHS bool@true                                                                 #    14/107
JUMPIFNEQS __INTERNAL__COND_0_END                                               #    15/107
# THEN                                                                          #    16/107
PUSHS LF@n                                                                      #    17/107
PUSHS int@1                                                                     #    18/107
ADDS                                                                            #    19/107
RETURN                                                                          #    20/107
JUMP __INTERNAL__COND_0_BLOCK_END                                               #    21/107
LABEL __INTERNAL__COND_0_END                                                    #    22/107
# ELSE                                                                          #    23/107
# IF BLOCK                                                                      #    24/107
CREATEFRAME                                                                     #    25/107
# IF                                                                            #    26/107
PUSHS LF@n                                                                      #    27/107
PUSHS int@0                                                                     #    28/107
EQS                                                                             #    29/107
PUSHS bool@true                                                                 #    30/107
JUMPIFNEQS __INTERNAL__COND_1_END                                               #    31/107
# THEN                                                                          #    32/107
CREATEFRAME                                                                     #    33/107
PUSHS LF@m                                                                      #    34/107
PUSHS int@1                                                                     #    35/107
SUBS                                                                            #    36/107
DEFVAR TF@m                                                                     #    37/107
POPS TF@m                                                                       #    38/107
PUSHS int@1                                                                     #    39/107
DEFVAR TF@n                                                                     #    40/107
POPS TF@n                                                                       #    41/107
CALL ackermann                                                                  #    42/107
POPFRAME                                                                        #    43/107
RETURN                                                                          #    44/107
JUMP __INTERNAL__COND_1_BLOCK_END                                               #    45/107
LABEL __INTERNAL__COND_1_END                                                    #    46/107
# ELSE                                                                          #    47/107
CREATEFRAME                                                                     #    48/107
PUSHS LF@m                                                                      #    49/107
PUSHS int@1                                                                     #    50/107
SUBS                                                                            #    51/107
DEFVAR TF@m                                                                     #    52/107
POPS TF@m                                                                       #    53/107
CREATEFRAME                                                                     #    54/107
PUSHS LF@m                                                                      #    55/107
DEFVAR TF@m                                                                     #    56/107
POPS TF@m                                                                       #    57/107
PUSHS LF@n                                                                      #    58/107
PUSHS int@1                                                                     #    59/107
SUBS                                                                            #    60/107
DEFVAR TF@n                                                                     #    61/107
POPS TF@n                                                                       #    62/107
CALL ackermann                                                                  #    63/107
POPFRAME                                                                        #    64/107
DEFVAR TF@n                                                                     #    65/107
POPS TF@n                                                                       #    66/107
CALL ackermann                                                                  #    67/107
POPFRAME                                                                        #    68/107
RETURN                                                                          #    69/107
# END IF                                                                        #    70/107
LABEL __INTERNAL__COND_1_BLOCK_END                                              #    71/107
CREATEFRAME                                                                     #    72/107
# END IF BLOCK                                                                  #    73/107
# END IF                                                                        #    74/107
LABEL __INTERNAL__COND_0_BLOCK_END                                              #    75/107
CREATEFRAME                                                                     #    76/107
# END IF BLOCK                                                                  #    77/107
PUSHS int@0                                                                     #    78/107
RETURN                                                                          #    79/107
# END FUNCTION                                                                  #    80/107
# MAIN                                                                          #    82/107
LABEL main                                                                      #    83/107
CREATEFRAME                                                                     #    84/107
PUSHFRAME                                                                       #    85/107
CREATEFRAME                                                                     #    86/107
DEFVAR LF@a                                                                     #    87/107
MOVE LF@a int@0                                                                 #    88/107
CREATEFRAME                                                                     #    89/107
PUSHS int@2                                                                     #    90/107
DEFVAR TF@m                                                                     #    91/107
POPS TF@m                                                                       #    92/107
PUSHS int@5                                                                     #    93/107
DEFVAR TF@n                                                                     #    94/107
POPS TF@n                                                                       #    95/107
CALL ackermann                                                                  #    96/107
POPFRAME                                                                        #    97/107
POPS LF@a                                                                       #    98/107
CLEARS                                                                          #    99/107
PUSHS LF@a                                                                      #   100/107
DEFVAR TF@__INTERNAL__VAR_0                                                     #   101/107
POPS TF@__INTERNAL__VAR_0                                                       #   102/107
WRITE TF@__INTERNAL__VAR_0                                                      #   103/107
JUMP __INTERNAL__FILE_END                                                       #   104/107
# PROGRAM END                                                                   #   106/107
LABEL __INTERNAL__FILE_END                                                      #   107/107