# 2017-12-04 17:23:19.935837
# SECTION: 99_benchmarks
# TEST: 12
# INFO: Ackerman function for ackerman(2, 5)
# REQUIRED EXTENSIONS: FUNEXP
# ACTIVATED EXTENSIONS: BOOLOP, UNARY, IFTHEN, FUNEXP
# STATE: FAIL
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IJUMP at line: 2 with following arguments:
# Executing instruction: ILABEL at line: 83 with following arguments:
# Executing instruction: ICREATEFRAME at line: 84 with following arguments:
# Executing instruction: IPUSHFRAME at line: 85 with following arguments:
# Executing instruction: ICREATEFRAME at line: 86 with following arguments:
# Executing instruction: IDEFVAR at line: 87 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 88 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@a()
# Executing instruction: ICREATEFRAME at line: 89 with following arguments:
# Executing instruction: IPUSHS at line: 90 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 91 with following arguments:
# Dest: TF@m
# Executing instruction: IPOPS at line: 92 with following arguments:
# Arg1: Stack@=2(int)
# Dest: TF@m()
# Executing instruction: IPUSHS at line: 93 with following arguments:
# Arg1: Const@=5(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 94 with following arguments:
# Dest: TF@n
# Executing instruction: IPOPS at line: 95 with following arguments:
# Arg1: Stack@=5(int)
# Dest: TF@n()
# Executing instruction: ICALL at line: 96 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: IPUSHFRAME at line: 6 with following arguments:
# Executing instruction: ICREATEFRAME at line: 7 with following arguments:
# Executing instruction: ICREATEFRAME at line: 9 with following arguments:
# Executing instruction: IPUSHS at line: 11 with following arguments:
# Arg1: LF@m=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 12 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 13 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 14 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 15 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 22 with following arguments:
# Executing instruction: ICREATEFRAME at line: 25 with following arguments:
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: LF@n=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 28 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 29 with following arguments:
# Arg1: Stack@=5(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 31 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 46 with following arguments:
# Executing instruction: ICREATEFRAME at line: 48 with following arguments:
# Executing instruction: IPUSHS at line: 49 with following arguments:
# Arg1: LF@m=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 50 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 51 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 52 with following arguments:
# Dest: TF@m
# Executing instruction: IPOPS at line: 53 with following arguments:
# Arg1: Stack@=1(int)
# Dest: TF@m()
# Executing instruction: ICREATEFRAME at line: 54 with following arguments:
# Executing instruction: IPUSHS at line: 55 with following arguments:
# Arg1: LF@m=2(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 56 with following arguments:
# Dest: TF@m
# Executing instruction: IPOPS at line: 57 with following arguments:
# Arg1: Stack@=2(int)
# Dest: TF@m()
# Executing instruction: IPUSHS at line: 58 with following arguments:
# Arg1: LF@n=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 59 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 60 with following arguments:
# Arg1: Stack@=5(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 61 with following arguments:
# Dest: TF@n
# Executing instruction: IPOPS at line: 62 with following arguments:
# Arg1: Stack@=4(int)
# Dest: TF@n()
# Executing instruction: ICALL at line: 63 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: IPUSHFRAME at line: 6 with following arguments:
# Executing instruction: ICREATEFRAME at line: 7 with following arguments:
# Executing instruction: ICREATEFRAME at line: 9 with following arguments:
# Executing instruction: IPUSHS at line: 11 with following arguments:
# Arg1: LF@m=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 12 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 13 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 14 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 15 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 22 with following arguments:
# Executing instruction: ICREATEFRAME at line: 25 with following arguments:
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: LF@n=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 28 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 29 with following arguments:
# Arg1: Stack@=4(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 31 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 46 with following arguments:
# Executing instruction: ICREATEFRAME at line: 48 with following arguments:
# Executing instruction: IPUSHS at line: 49 with following arguments:
# Arg1: LF@m=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 50 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 51 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 52 with following arguments:
# Dest: TF@m
# Executing instruction: IPOPS at line: 53 with following arguments:
# Arg1: Stack@=1(int)
# Dest: TF@m()
# Executing instruction: ICREATEFRAME at line: 54 with following arguments:
# Executing instruction: IPUSHS at line: 55 with following arguments:
# Arg1: LF@m=2(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 56 with following arguments:
# Dest: TF@m
# Executing instruction: IPOPS at line: 57 with following arguments:
# Arg1: Stack@=2(int)
# Dest: TF@m()
# Executing instruction: IPUSHS at line: 58 with following arguments:
# Arg1: LF@n=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 59 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 60 with following arguments:
# Arg1: Stack@=4(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 61 with following arguments:
# Dest: TF@n
# Executing instruction: IPOPS at line: 62 with following arguments:
# Arg1: Stack@=3(int)
# Dest: TF@n()
# Executing instruction: ICALL at line: 63 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: IPUSHFRAME at line: 6 with following arguments:
# Executing instruction: ICREATEFRAME at line: 7 with following arguments:
# Executing instruction: ICREATEFRAME at line: 9 with following arguments:
# Executing instruction: IPUSHS at line: 11 with following arguments:
# Arg1: LF@m=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 12 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 13 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 14 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 15 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 22 with following arguments:
# Executing instruction: ICREATEFRAME at line: 25 with following arguments:
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: LF@n=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 28 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 29 with following arguments:
# Arg1: Stack@=3(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 31 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 46 with following arguments:
# Executing instruction: ICREATEFRAME at line: 48 with following arguments:
# Executing instruction: IPUSHS at line: 49 with following arguments:
# Arg1: LF@m=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 50 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 51 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 52 with following arguments:
# Dest: TF@m
# Executing instruction: IPOPS at line: 53 with following arguments:
# Arg1: Stack@=1(int)
# Dest: TF@m()
# Executing instruction: ICREATEFRAME at line: 54 with following arguments:
# Executing instruction: IPUSHS at line: 55 with following arguments:
# Arg1: LF@m=2(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 56 with following arguments:
# Dest: TF@m
# Executing instruction: IPOPS at line: 57 with following arguments:
# Arg1: Stack@=2(int)
# Dest: TF@m()
# Executing instruction: IPUSHS at line: 58 with following arguments:
# Arg1: LF@n=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 59 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 60 with following arguments:
# Arg1: Stack@=3(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 61 with following arguments:
# Dest: TF@n
# Executing instruction: IPOPS at line: 62 with following arguments:
# Arg1: Stack@=2(int)
# Dest: TF@n()
# Executing instruction: ICALL at line: 63 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: IPUSHFRAME at line: 6 with following arguments:
# Executing instruction: ICREATEFRAME at line: 7 with following arguments:
# Executing instruction: ICREATEFRAME at line: 9 with following arguments:
# Executing instruction: IPUSHS at line: 11 with following arguments:
# Arg1: LF@m=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 12 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 13 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 14 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 15 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 22 with following arguments:
# Executing instruction: ICREATEFRAME at line: 25 with following arguments:
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: LF@n=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 28 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 29 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 31 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 46 with following arguments:
# Executing instruction: ICREATEFRAME at line: 48 with following arguments:
# Executing instruction: IPUSHS at line: 49 with following arguments:
# Arg1: LF@m=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 50 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 51 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 52 with following arguments:
# Dest: TF@m
# Executing instruction: IPOPS at line: 53 with following arguments:
# Arg1: Stack@=1(int)
# Dest: TF@m()
# Executing instruction: ICREATEFRAME at line: 54 with following arguments:
# Executing instruction: IPUSHS at line: 55 with following arguments:
# Arg1: LF@m=2(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 56 with following arguments:
# Dest: TF@m
# Executing instruction: IPOPS at line: 57 with following arguments:
# Arg1: Stack@=2(int)
# Dest: TF@m()
# Executing instruction: IPUSHS at line: 58 with following arguments:
# Arg1: LF@n=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 59 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 60 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 61 with following arguments:
# Dest: TF@n
# Executing instruction: IPOPS at line: 62 with following arguments:
# Arg1: Stack@=1(int)
# Dest: TF@n()
# Executing instruction: ICALL at line: 63 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: IPUSHFRAME at line: 6 with following arguments:
# Executing instruction: ICREATEFRAME at line: 7 with following arguments:
# Executing instruction: ICREATEFRAME at line: 9 with following arguments:
# Executing instruction: IPUSHS at line: 11 with following arguments:
# Arg1: LF@m=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 12 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 13 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 14 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 15 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 22 with following arguments:
# Executing instruction: ICREATEFRAME at line: 25 with following arguments:
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: LF@n=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 28 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 29 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 31 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 46 with following arguments:
# Executing instruction: ICREATEFRAME at line: 48 with following arguments:
# Executing instruction: IPUSHS at line: 49 with following arguments:
# Arg1: LF@m=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 50 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 51 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 52 with following arguments:
# Dest: TF@m
# Executing instruction: IPOPS at line: 53 with following arguments:
# Arg1: Stack@=1(int)
# Dest: TF@m()
# Executing instruction: ICREATEFRAME at line: 54 with following arguments:
# Executing instruction: IPUSHS at line: 55 with following arguments:
# Arg1: LF@m=2(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 56 with following arguments:
# Dest: TF@m
# Executing instruction: IPOPS at line: 57 with following arguments:
# Arg1: Stack@=2(int)
# Dest: TF@m()
# Executing instruction: IPUSHS at line: 58 with following arguments:
# Arg1: LF@n=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 59 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 60 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 61 with following arguments:
# Dest: TF@n
# Executing instruction: IPOPS at line: 62 with following arguments:
# Arg1: Stack@=0(int)
# Dest: TF@n()
# Executing instruction: ICALL at line: 63 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: IPUSHFRAME at line: 6 with following arguments:
# Executing instruction: ICREATEFRAME at line: 7 with following arguments:
# Executing instruction: ICREATEFRAME at line: 9 with following arguments:
# Executing instruction: IPUSHS at line: 11 with following arguments:
# Arg1: LF@m=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 12 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 13 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 14 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 15 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 22 with following arguments:
# Executing instruction: ICREATEFRAME at line: 25 with following arguments:
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: LF@n=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 28 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 29 with following arguments:
# Arg1: Stack@=0(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 31 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ICREATEFRAME at line: 33 with following arguments:
# Executing instruction: IPUSHS at line: 34 with following arguments:
# Arg1: LF@m=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 35 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 36 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 37 with following arguments:
# Dest: TF@m
# Executing instruction: IPOPS at line: 38 with following arguments:
# Arg1: Stack@=1(int)
# Dest: TF@m()
# Executing instruction: IPUSHS at line: 39 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 40 with following arguments:
# Dest: TF@n
# Executing instruction: IPOPS at line: 41 with following arguments:
# Arg1: Stack@=1(int)
# Dest: TF@n()
# Executing instruction: ICALL at line: 42 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: IPUSHFRAME at line: 6 with following arguments:
# Executing instruction: ICREATEFRAME at line: 7 with following arguments:
# Executing instruction: ICREATEFRAME at line: 9 with following arguments:
# Executing instruction: IPUSHS at line: 11 with following arguments:
# Arg1: LF@m=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 12 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 13 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 14 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 15 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 22 with following arguments:
# Executing instruction: ICREATEFRAME at line: 25 with following arguments:
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: LF@n=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 28 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 29 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 31 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 46 with following arguments:
# Executing instruction: ICREATEFRAME at line: 48 with following arguments:
# Executing instruction: IPUSHS at line: 49 with following arguments:
# Arg1: LF@m=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 50 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 51 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 52 with following arguments:
# Dest: TF@m
# Executing instruction: IPOPS at line: 53 with following arguments:
# Arg1: Stack@=0(int)
# Dest: TF@m()
# Executing instruction: ICREATEFRAME at line: 54 with following arguments:
# Executing instruction: IPUSHS at line: 55 with following arguments:
# Arg1: LF@m=1(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 56 with following arguments:
# Dest: TF@m
# Executing instruction: IPOPS at line: 57 with following arguments:
# Arg1: Stack@=1(int)
# Dest: TF@m()
# Executing instruction: IPUSHS at line: 58 with following arguments:
# Arg1: LF@n=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 59 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 60 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 61 with following arguments:
# Dest: TF@n
# Executing instruction: IPOPS at line: 62 with following arguments:
# Arg1: Stack@=0(int)
# Dest: TF@n()
# Executing instruction: ICALL at line: 63 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: IPUSHFRAME at line: 6 with following arguments:
# Executing instruction: ICREATEFRAME at line: 7 with following arguments:
# Executing instruction: ICREATEFRAME at line: 9 with following arguments:
# Executing instruction: IPUSHS at line: 11 with following arguments:
# Arg1: LF@m=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 12 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 13 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 14 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 15 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 22 with following arguments:
# Executing instruction: ICREATEFRAME at line: 25 with following arguments:
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: LF@n=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 28 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 29 with following arguments:
# Arg1: Stack@=0(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 31 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ICREATEFRAME at line: 33 with following arguments:
# Executing instruction: IPUSHS at line: 34 with following arguments:
# Arg1: LF@m=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 35 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 36 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 37 with following arguments:
# Dest: TF@m
# Executing instruction: IPOPS at line: 38 with following arguments:
# Arg1: Stack@=0(int)
# Dest: TF@m()
# Executing instruction: IPUSHS at line: 39 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 40 with following arguments:
# Dest: TF@n
# Executing instruction: IPOPS at line: 41 with following arguments:
# Arg1: Stack@=1(int)
# Dest: TF@n()
# Executing instruction: ICALL at line: 42 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: IPUSHFRAME at line: 6 with following arguments:
# Executing instruction: ICREATEFRAME at line: 7 with following arguments:
# Executing instruction: ICREATEFRAME at line: 9 with following arguments:
# Executing instruction: IPUSHS at line: 11 with following arguments:
# Arg1: LF@m=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 12 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 13 with following arguments:
# Arg1: Stack@=0(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 14 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 15 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 17 with following arguments:
# Arg1: LF@n=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 18 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 19 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 20 with following arguments:
# Executing instruction: IPOPFRAME at line: 43 with following arguments:
# Executing instruction: IRETURN at line: 44 with following arguments:
# Executing instruction: IPOPFRAME at line: 64 with following arguments:
# Executing instruction: IDEFVAR at line: 65 with following arguments:
# Dest: TF@n
# Error at line: 65
# Symbol already exists!
# 
# EXPECTED INTERPRETER STDOUT:

#  13


# CURRENT INTERPRETER STDOUT:



# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 52
# PRICE: ---
# 
#   1: ' Ackerman function for ackerman(2, 5)
#   2: function ackermann(m as integer, n as integer) as integer
#   3: 	if m = 0 then
#   4: 		return n + 1
#   5: 	else
#   6: 		if n = 0 then
#   7: 			return ackermann(m - 1, 1)
#   8: 		else
#   9: 			return ackermann(m - 1, ackermann(m, n - 1))
#  10: 		end if
#  11: 	end if
#  12: end function
#  13: 
#  14: scope
#  15:     dim a as integer
#  16:     a = ackermann(2, 5)
#  17:     print a;
#  18: end scope

########################################

.IFJcode17                                                                      #     1/110
JUMP main                                                                       #     2/110
# FUNCTION                                                                      #     4/110
LABEL ackermann                                                                 #     5/110
PUSHFRAME                                                                       #     6/110
CREATEFRAME                                                                     #     7/110
# IF BLOCK                                                                      #     8/110
CREATEFRAME                                                                     #     9/110
# IF                                                                            #    10/110
PUSHS LF@m                                                                      #    11/110
PUSHS int@0                                                                     #    12/110
EQS                                                                             #    13/110
PUSHS bool@true                                                                 #    14/110
JUMPIFNEQS __INTERNAL__COND_0_END                                               #    15/110
# THEN                                                                          #    16/110
PUSHS LF@n                                                                      #    17/110
PUSHS int@1                                                                     #    18/110
ADDS                                                                            #    19/110
RETURN                                                                          #    20/110
JUMP __INTERNAL__COND_0_BLOCK_END                                               #    21/110
LABEL __INTERNAL__COND_0_END                                                    #    22/110
# ELSE                                                                          #    23/110
# IF BLOCK                                                                      #    24/110
CREATEFRAME                                                                     #    25/110
# IF                                                                            #    26/110
PUSHS LF@n                                                                      #    27/110
PUSHS int@0                                                                     #    28/110
EQS                                                                             #    29/110
PUSHS bool@true                                                                 #    30/110
JUMPIFNEQS __INTERNAL__COND_1_END                                               #    31/110
# THEN                                                                          #    32/110
CREATEFRAME                                                                     #    33/110
PUSHS LF@m                                                                      #    34/110
PUSHS int@1                                                                     #    35/110
SUBS                                                                            #    36/110
DEFVAR TF@m                                                                     #    37/110
POPS TF@m                                                                       #    38/110
PUSHS int@1                                                                     #    39/110
DEFVAR TF@n                                                                     #    40/110
POPS TF@n                                                                       #    41/110
CALL ackermann                                                                  #    42/110
POPFRAME                                                                        #    43/110
RETURN                                                                          #    44/110
JUMP __INTERNAL__COND_1_BLOCK_END                                               #    45/110
LABEL __INTERNAL__COND_1_END                                                    #    46/110
# ELSE                                                                          #    47/110
CREATEFRAME                                                                     #    48/110
PUSHS LF@m                                                                      #    49/110
PUSHS int@1                                                                     #    50/110
SUBS                                                                            #    51/110
DEFVAR TF@m                                                                     #    52/110
POPS TF@m                                                                       #    53/110
CREATEFRAME                                                                     #    54/110
PUSHS LF@m                                                                      #    55/110
DEFVAR TF@m                                                                     #    56/110
POPS TF@m                                                                       #    57/110
PUSHS LF@n                                                                      #    58/110
PUSHS int@1                                                                     #    59/110
SUBS                                                                            #    60/110
DEFVAR TF@n                                                                     #    61/110
POPS TF@n                                                                       #    62/110
CALL ackermann                                                                  #    63/110
POPFRAME                                                                        #    64/110
DEFVAR TF@n                                                                     #    65/110
POPS TF@n                                                                       #    66/110
CALL ackermann                                                                  #    67/110
POPFRAME                                                                        #    68/110
RETURN                                                                          #    69/110
# END IF                                                                        #    70/110
LABEL __INTERNAL__COND_1_BLOCK_END                                              #    71/110
CREATEFRAME                                                                     #    72/110
# END IF BLOCK                                                                  #    73/110
# END IF                                                                        #    74/110
LABEL __INTERNAL__COND_0_BLOCK_END                                              #    75/110
CREATEFRAME                                                                     #    76/110
# END IF BLOCK                                                                  #    77/110
PUSHS int@0                                                                     #    78/110
RETURN                                                                          #    79/110
# END FUNCTION                                                                  #    80/110
# MAIN                                                                          #    82/110
LABEL main                                                                      #    83/110
CREATEFRAME                                                                     #    84/110
PUSHFRAME                                                                       #    85/110
CREATEFRAME                                                                     #    86/110
DEFVAR LF@a                                                                     #    87/110
MOVE LF@a int@0                                                                 #    88/110
CREATEFRAME                                                                     #    89/110
PUSHS int@2                                                                     #    90/110
DEFVAR TF@m                                                                     #    91/110
POPS TF@m                                                                       #    92/110
PUSHS int@5                                                                     #    93/110
DEFVAR TF@n                                                                     #    94/110
POPS TF@n                                                                       #    95/110
CALL ackermann                                                                  #    96/110
POPFRAME                                                                        #    97/110
POPS LF@a                                                                       #    98/110
CLEARS                                                                          #    99/110
PUSHS LF@a                                                                      #   100/110
DEFVAR TF@__INTERNAL__VAR_0                                                     #   101/110
MOVE TF@__INTERNAL__VAR_0 int@0                                                 #   102/110
POPS TF@__INTERNAL__VAR_0                                                       #   103/110
WRITE TF@__INTERNAL__VAR_0                                                      #   104/110
JUMP __INTERNAL__FILE_END                                                       #   105/110
# MAIN END                                                                      #   107/110
# PROGRAM END                                                                   #   109/110
LABEL __INTERNAL__FILE_END                                                      #   110/110