# 2017-12-04 14:49:31.939418
# SECTION: 99_benchmarks
# TEST: 04
# INFO: complex expression
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: UNARY, IFTHEN, FUNEXP, BOOLOP
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IJUMP at line: 2 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: ICREATEFRAME at line: 6 with following arguments:
# Executing instruction: IPUSHFRAME at line: 7 with following arguments:
# Executing instruction: ICREATEFRAME at line: 8 with following arguments:
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 10 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@a()
# Executing instruction: IPUSHS at line: 11 with following arguments:
# Arg1: Const@=74(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 12 with following arguments:
# Arg1: Stack@=74(int)
# Dest: LF@a=0(int)
# Executing instruction: ICLEARS at line: 13 with following arguments:
# Executing instruction: IDEFVAR at line: 14 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 15 with following arguments:
# Arg1: Const@=0(double)
# Dest: LF@b()
# Executing instruction: IPUSHS at line: 16 with following arguments:
# Arg1: Const@=745.745(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 17 with following arguments:
# Arg1: Stack@=745.745(double)
# Dest: LF@b=0(double)
# Executing instruction: ICLEARS at line: 18 with following arguments:
# Executing instruction: IDEFVAR at line: 19 with following arguments:
# Dest: LF@c
# Executing instruction: IMOVE at line: 20 with following arguments:
# Arg1: Const@=0(double)
# Dest: LF@c()
# Executing instruction: IPUSHS at line: 21 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 22 with following arguments:
# Arg1: Const@=123456789(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 23 with following arguments:
# Arg1: Stack@=0(int)
# Arg2: Stack@=123456789(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 24 with following arguments:
# Arg1: Stack@=-123456789(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 25 with following arguments:
# Arg1: Stack@=-1.23457e+08(double)
# Dest: LF@c=0(double)
# Executing instruction: ICLEARS at line: 26 with following arguments:
# Executing instruction: IDEFVAR at line: 27 with following arguments:
# Dest: LF@d
# Executing instruction: IMOVE at line: 28 with following arguments:
# Arg1: Const@=0(double)
# Dest: LF@d()
# Executing instruction: IPUSHS at line: 29 with following arguments:
# Arg1: LF@a=74(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: LF@a=74(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 31 with following arguments:
# Arg1: Stack@=74(int)
# Arg2: Stack@=74(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 32 with following arguments:
# Arg1: Stack@=5476(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 33 with following arguments:
# Arg1: LF@b=745.745(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 34 with following arguments:
# Arg1: LF@b=745.745(double)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 35 with following arguments:
# Arg1: Stack@=745.745(double)
# Arg2: Stack@=745.745(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 36 with following arguments:
# Arg1: Stack@=5476(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 37 with following arguments:
# Arg1: LF@b=745.745(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 38 with following arguments:
# Arg1: LF@a=74(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 39 with following arguments:
# Arg1: Stack@=74(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 40 with following arguments:
# Arg1: Stack@=745.745(double)
# Arg2: Stack@=74(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 41 with following arguments:
# Arg1: Stack@=5477(double)
# Arg2: Stack@=55185.1(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 42 with following arguments:
# Arg1: LF@b=745.745(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 43 with following arguments:
# Arg1: LF@a=74(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 44 with following arguments:
# Arg1: LF@a=74(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 45 with following arguments:
# Arg1: Stack@=74(int)
# Arg2: Stack@=74(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 46 with following arguments:
# Arg1: Stack@=5476(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 47 with following arguments:
# Arg1: LF@b=745.745(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 48 with following arguments:
# Arg1: LF@a=74(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 49 with following arguments:
# Arg1: Stack@=74(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 50 with following arguments:
# Arg1: Stack@=745.745(double)
# Arg2: Stack@=74(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 51 with following arguments:
# Arg1: Stack@=5476(double)
# Arg2: Stack@=55185.1(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 52 with following arguments:
# Arg1: LF@c=-1.23457e+08(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 53 with following arguments:
# Arg1: Const@=7(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 54 with following arguments:
# Arg1: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 55 with following arguments:
# Arg1: Stack@=-1.23457e+08(double)
# Arg2: Stack@=7(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 56 with following arguments:
# Arg1: Stack@=60661.1(double)
# Arg2: Stack@=-8.64198e+08(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 57 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 58 with following arguments:
# Arg1: Const@=5(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 59 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 60 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 61 with following arguments:
# Arg1: LF@b=745.745(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 62 with following arguments:
# Arg1: Stack@=10(double)
# Arg2: Stack@=745.745(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 63 with following arguments:
# Arg1: Stack@=-8.64137e+08(double)
# Arg2: Stack@=7457.45(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 64 with following arguments:
# Arg1: Stack@=745.745(double)
# Arg2: Stack@=-8.64129e+08(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 65 with following arguments:
# Arg1: LF@b=745.745(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 66 with following arguments:
# Arg1: Const@=78(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 67 with following arguments:
# Arg1: Stack@=78(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 68 with following arguments:
# Arg1: Stack@=745.745(double)
# Arg2: Stack@=78(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 69 with following arguments:
# Arg1: Const@=96(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 70 with following arguments:
# Arg1: Stack@=96(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 71 with following arguments:
# Arg1: Stack@=58168.1(double)
# Arg2: Stack@=96(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 72 with following arguments:
# Arg1: Stack@=-6.4442e+11(double)
# Arg2: Stack@=5.58414e+06(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 73 with following arguments:
# Arg1: LF@b=745.745(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 74 with following arguments:
# Arg1: LF@a=74(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 75 with following arguments:
# Arg1: Stack@=74(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 76 with following arguments:
# Arg1: Stack@=745.745(double)
# Arg2: Stack@=74(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 77 with following arguments:
# Arg1: Stack@=-6.44426e+11(double)
# Arg2: Stack@=55185.1(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 78 with following arguments:
# Arg1: LF@b=745.745(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 79 with following arguments:
# Arg1: LF@c=-1.23457e+08(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 80 with following arguments:
# Arg1: Stack@=745.745(double)
# Arg2: Stack@=-1.23457e+08(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 81 with following arguments:
# Arg1: LF@b=745.745(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 82 with following arguments:
# Arg1: Stack@=-1.23456e+08(double)
# Arg2: Stack@=745.745(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 83 with following arguments:
# Arg1: LF@c=-1.23457e+08(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 84 with following arguments:
# Arg1: Stack@=-1.23455e+08(double)
# Arg2: Stack@=-1.23457e+08(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 85 with following arguments:
# Arg1: LF@b=745.745(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 86 with following arguments:
# Arg1: Stack@=-2.46912e+08(double)
# Arg2: Stack@=745.745(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 87 with following arguments:
# Arg1: LF@c=-1.23457e+08(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=-2.46911e+08(double)
# Arg2: Stack@=-1.23457e+08(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 89 with following arguments:
# Arg1: Stack@=-6.44426e+11(double)
# Arg2: Stack@=-3.70368e+08(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 90 with following arguments:
# Arg1: LF@c=-1.23457e+08(double)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 91 with following arguments:
# Arg1: Stack@=-6.44796e+11(double)
# Arg2: Stack@=-1.23457e+08(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 92 with following arguments:
# Arg1: Stack@=-49708.1(double)
# Arg2: Stack@=5222.85(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 93 with following arguments:
# Arg1: Stack@=-44485.3(double)
# Dest: LF@c=-1.23457e+08(double)
# Executing instruction: ICLEARS at line: 94 with following arguments:
# Executing instruction: IPUSHS at line: 95 with following arguments:
# Arg1: LF@c=-44485.3(double)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 96 with following arguments:
# Dest: TF@__INTERNAL__VAR_0
# Executing instruction: IPOPS at line: 97 with following arguments:
# Arg1: Stack@=-44485.3(double)
# Dest: TF@__INTERNAL__VAR_0()
# Executing instruction: IWRITE at line: 98 with following arguments:
# Arg1: TF@__INTERNAL__VAR_0=-44485.3(double)
# Executing instruction: IPUSHS at line: 99 with following arguments:
# Arg1: Const@=
# (string)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 100 with following arguments:
# Arg1: Stack@=
# (string)
# Dest: TF@__INTERNAL__VAR_0=-44485.3(double)
# Executing instruction: IWRITE at line: 101 with following arguments:
# Arg1: TF@__INTERNAL__VAR_0=
# (string)
# Executing instruction: IPUSHS at line: 102 with following arguments:
# Arg1: LF@a=74(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 103 with following arguments:
# Arg1: Stack@=74(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 104 with following arguments:
# Arg1: LF@b=745.745(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 105 with following arguments:
# Arg1: LF@c=-44485.3(double)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 106 with following arguments:
# Arg1: Stack@=745.745(double)
# Arg2: Stack@=-44485.3(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 107 with following arguments:
# Arg1: Stack@=74(double)
# Arg2: Stack@=-0.0167639(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 108 with following arguments:
# Arg1: Const@=7(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 109 with following arguments:
# Arg1: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 110 with following arguments:
# Arg1: LF@b=745.745(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 111 with following arguments:
# Arg1: Stack@=7(double)
# Arg2: Stack@=745.745(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 112 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 113 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 114 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 115 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 116 with following arguments:
# Arg1: Const@=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 117 with following arguments:
# Arg1: LF@a=74(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 118 with following arguments:
# Arg1: Stack@=4(int)
# Arg2: Stack@=74(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 119 with following arguments:
# Arg1: Stack@=-70(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 120 with following arguments:
# Arg1: Const@=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 121 with following arguments:
# Arg1: Const@=9(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 122 with following arguments:
# Arg1: Stack@=8(int)
# Arg2: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 123 with following arguments:
# Arg1: Stack@=72(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 124 with following arguments:
# Arg1: LF@c=-44485.3(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 125 with following arguments:
# Arg1: Const@=74(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 126 with following arguments:
# Arg1: Stack@=74(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 127 with following arguments:
# Arg1: Stack@=-44485.3(double)
# Arg2: Stack@=74(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 128 with following arguments:
# Arg1: LF@c=-44485.3(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 129 with following arguments:
# Arg1: Stack@=-3.29191e+06(double)
# Arg2: Stack@=-44485.3(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 130 with following arguments:
# Arg1: LF@c=-44485.3(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 131 with following arguments:
# Arg1: LF@b=745.745(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 132 with following arguments:
# Arg1: Const@=8(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 133 with following arguments:
# Arg1: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 134 with following arguments:
# Arg1: Stack@=745.745(double)
# Arg2: Stack@=8(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 135 with following arguments:
# Arg1: Const@=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 136 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 137 with following arguments:
# Arg1: Stack@=5965.96(double)
# Arg2: Stack@=4(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 138 with following arguments:
# Arg1: Stack@=-44485.3(double)
# Arg2: Stack@=5969.96(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 139 with following arguments:
# Arg1: Stack@=-3.24743e+06(double)
# Arg2: Stack@=-2.65575e+08(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 140 with following arguments:
# Arg1: LF@b=745.745(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 141 with following arguments:
# Arg1: LF@a=74(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 142 with following arguments:
# Arg1: Stack@=74(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 143 with following arguments:
# Arg1: Stack@=745.745(double)
# Arg2: Stack@=74(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 144 with following arguments:
# Arg1: LF@c=-44485.3(double)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 145 with following arguments:
# Arg1: Stack@=55185.1(double)
# Arg2: Stack@=-44485.3(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 146 with following arguments:
# Arg1: Stack@=-2.68823e+08(double)
# Arg2: Stack@=-1.24053(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 147 with following arguments:
# Arg1: Const@=7(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 148 with following arguments:
# Arg1: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 149 with following arguments:
# Arg1: Stack@=-2.68823e+08(double)
# Arg2: Stack@=7(double)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 150 with following arguments:
# Arg1: Stack@=72(double)
# Arg2: Stack@=-2.68823e+08(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 151 with following arguments:
# Arg1: Stack@=-70(double)
# Arg2: Stack@=-2.67834e-07(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 152 with following arguments:
# Arg1: LF@a=74(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 153 with following arguments:
# Arg1: Stack@=74(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 154 with following arguments:
# Arg1: Stack@=-70(double)
# Arg2: Stack@=74(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 155 with following arguments:
# Arg1: Const@=7(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 156 with following arguments:
# Arg1: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 157 with following arguments:
# Arg1: Stack@=-144(double)
# Arg2: Stack@=7(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 158 with following arguments:
# Arg1: Stack@=2(double)
# Arg2: Stack@=-137(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 159 with following arguments:
# Arg1: LF@a=74(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 160 with following arguments:
# Arg1: Stack@=74(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 161 with following arguments:
# Arg1: LF@b=745.745(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 162 with following arguments:
# Arg1: Stack@=74(double)
# Arg2: Stack@=745.745(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 163 with following arguments:
# Arg1: LF@b=745.745(double)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 164 with following arguments:
# Arg1: Stack@=55185.1(double)
# Arg2: Stack@=745.745(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 165 with following arguments:
# Arg1: Stack@=-274(double)
# Arg2: Stack@=74(double)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 166 with following arguments:
# Arg1: Stack@=0(double)
# Arg2: Stack@=-348(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 167 with following arguments:
# Arg1: Stack@=752.745(double)
# Arg2: Stack@=-0(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 168 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 169 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 170 with following arguments:
# Arg1: Stack@=752.745(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 171 with following arguments:
# Arg1: Const@=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 172 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 173 with following arguments:
# Arg1: Stack@=753.745(double)
# Arg2: Stack@=4(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 174 with following arguments:
# Arg1: Stack@=73.9832(double)
# Arg2: Stack@=188.436(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 175 with following arguments:
# Arg1: Stack@=-114.453(double)
# Dest: LF@d=0(double)
# Executing instruction: ICLEARS at line: 176 with following arguments:
# Executing instruction: IPUSHS at line: 177 with following arguments:
# Arg1: LF@d=-114.453(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 178 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 179 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 180 with following arguments:
# Arg1: LF@d=-114.453(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 181 with following arguments:
# Arg1: Stack@=2(double)
# Arg2: Stack@=-114.453(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 182 with following arguments:
# Arg1: Stack@=-114.453(double)
# Arg2: Stack@=-228.906(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 183 with following arguments:
# Arg1: Stack@=114.453(double)
# Dest: LF@d=-114.453(double)
# Executing instruction: ICLEARS at line: 184 with following arguments:
# Executing instruction: IPUSHS at line: 185 with following arguments:
# Arg1: LF@d=114.453(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 186 with following arguments:
# Arg1: Stack@=114.453(double)
# Dest: TF@__INTERNAL__VAR_0=
# (string)
# Executing instruction: IWRITE at line: 187 with following arguments:
# Arg1: TF@__INTERNAL__VAR_0=114.453(double)
# Executing instruction: IJUMP at line: 188 with following arguments:
# Executing instruction: ILABEL at line: 191 with following arguments:
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 1160 (320+840)
# 
#   1: ' complex expression
#   2: 
#   3: scope
#   4: 	dim a as integer = 74
#   5: 	dim b as double = 745.745
#   6: 	dim c as double = 0-123456789
#   7: 	
#   8: 	dim d as double
#   9: 
#  10: 	c = (a * a) + b / b - b * a + (b * (a * a + b * a + c * 7 + 2 * 5 * b) - b * 78 * 96 - b * a + (b + c + b + c + b + c)) / c
#  11: 	print c;
#  12: 	print !"\n";
#  13: 	d = a + (b / c) - (7 + b - 0 / (2 * (4 - a + 8 * 9 / (c * 74 - c + c * (b * 8 + 4) + b * a / c + 7) - a + 7) - a * b / b) + 1)/4
#  14: 	d = d - 2 * d
#  15: 	print d;
#  16: end scope

########################################

.IFJcode17                                                                      #     1/191
JUMP main                                                                       #     2/191
# MAIN                                                                          #     4/191
LABEL main                                                                      #     5/191
CREATEFRAME                                                                     #     6/191
PUSHFRAME                                                                       #     7/191
CREATEFRAME                                                                     #     8/191
DEFVAR LF@a                                                                     #     9/191
MOVE LF@a int@0                                                                 #    10/191
PUSHS int@74                                                                    #    11/191
POPS LF@a                                                                       #    12/191
CLEARS                                                                          #    13/191
DEFVAR LF@b                                                                     #    14/191
MOVE LF@b float@0.0                                                             #    15/191
PUSHS float@745.745                                                             #    16/191
POPS LF@b                                                                       #    17/191
CLEARS                                                                          #    18/191
DEFVAR LF@c                                                                     #    19/191
MOVE LF@c float@0.0                                                             #    20/191
PUSHS int@0                                                                     #    21/191
PUSHS int@123456789                                                             #    22/191
SUBS                                                                            #    23/191
INT2FLOATS                                                                      #    24/191
POPS LF@c                                                                       #    25/191
CLEARS                                                                          #    26/191
DEFVAR LF@d                                                                     #    27/191
MOVE LF@d float@0.0                                                             #    28/191
PUSHS LF@a                                                                      #    29/191
PUSHS LF@a                                                                      #    30/191
MULS                                                                            #    31/191
INT2FLOATS                                                                      #    32/191
PUSHS LF@b                                                                      #    33/191
PUSHS LF@b                                                                      #    34/191
DIVS                                                                            #    35/191
ADDS                                                                            #    36/191
PUSHS LF@b                                                                      #    37/191
PUSHS LF@a                                                                      #    38/191
INT2FLOATS                                                                      #    39/191
MULS                                                                            #    40/191
SUBS                                                                            #    41/191
PUSHS LF@b                                                                      #    42/191
PUSHS LF@a                                                                      #    43/191
PUSHS LF@a                                                                      #    44/191
MULS                                                                            #    45/191
INT2FLOATS                                                                      #    46/191
PUSHS LF@b                                                                      #    47/191
PUSHS LF@a                                                                      #    48/191
INT2FLOATS                                                                      #    49/191
MULS                                                                            #    50/191
ADDS                                                                            #    51/191
PUSHS LF@c                                                                      #    52/191
PUSHS int@7                                                                     #    53/191
INT2FLOATS                                                                      #    54/191
MULS                                                                            #    55/191
ADDS                                                                            #    56/191
PUSHS int@2                                                                     #    57/191
PUSHS int@5                                                                     #    58/191
MULS                                                                            #    59/191
INT2FLOATS                                                                      #    60/191
PUSHS LF@b                                                                      #    61/191
MULS                                                                            #    62/191
ADDS                                                                            #    63/191
MULS                                                                            #    64/191
PUSHS LF@b                                                                      #    65/191
PUSHS int@78                                                                    #    66/191
INT2FLOATS                                                                      #    67/191
MULS                                                                            #    68/191
PUSHS int@96                                                                    #    69/191
INT2FLOATS                                                                      #    70/191
MULS                                                                            #    71/191
SUBS                                                                            #    72/191
PUSHS LF@b                                                                      #    73/191
PUSHS LF@a                                                                      #    74/191
INT2FLOATS                                                                      #    75/191
MULS                                                                            #    76/191
SUBS                                                                            #    77/191
PUSHS LF@b                                                                      #    78/191
PUSHS LF@c                                                                      #    79/191
ADDS                                                                            #    80/191
PUSHS LF@b                                                                      #    81/191
ADDS                                                                            #    82/191
PUSHS LF@c                                                                      #    83/191
ADDS                                                                            #    84/191
PUSHS LF@b                                                                      #    85/191
ADDS                                                                            #    86/191
PUSHS LF@c                                                                      #    87/191
ADDS                                                                            #    88/191
ADDS                                                                            #    89/191
PUSHS LF@c                                                                      #    90/191
DIVS                                                                            #    91/191
ADDS                                                                            #    92/191
POPS LF@c                                                                       #    93/191
CLEARS                                                                          #    94/191
PUSHS LF@c                                                                      #    95/191
DEFVAR TF@__INTERNAL__VAR_0                                                     #    96/191
POPS TF@__INTERNAL__VAR_0                                                       #    97/191
WRITE TF@__INTERNAL__VAR_0                                                      #    98/191
PUSHS string@\010                                                               #    99/191
POPS TF@__INTERNAL__VAR_0                                                       #   100/191
WRITE TF@__INTERNAL__VAR_0                                                      #   101/191
PUSHS LF@a                                                                      #   102/191
INT2FLOATS                                                                      #   103/191
PUSHS LF@b                                                                      #   104/191
PUSHS LF@c                                                                      #   105/191
DIVS                                                                            #   106/191
ADDS                                                                            #   107/191
PUSHS int@7                                                                     #   108/191
INT2FLOATS                                                                      #   109/191
PUSHS LF@b                                                                      #   110/191
ADDS                                                                            #   111/191
PUSHS int@0                                                                     #   112/191
INT2FLOATS                                                                      #   113/191
PUSHS int@2                                                                     #   114/191
INT2FLOATS                                                                      #   115/191
PUSHS int@4                                                                     #   116/191
PUSHS LF@a                                                                      #   117/191
SUBS                                                                            #   118/191
INT2FLOATS                                                                      #   119/191
PUSHS int@8                                                                     #   120/191
PUSHS int@9                                                                     #   121/191
MULS                                                                            #   122/191
INT2FLOATS                                                                      #   123/191
PUSHS LF@c                                                                      #   124/191
PUSHS int@74                                                                    #   125/191
INT2FLOATS                                                                      #   126/191
MULS                                                                            #   127/191
PUSHS LF@c                                                                      #   128/191
SUBS                                                                            #   129/191
PUSHS LF@c                                                                      #   130/191
PUSHS LF@b                                                                      #   131/191
PUSHS int@8                                                                     #   132/191
INT2FLOATS                                                                      #   133/191
MULS                                                                            #   134/191
PUSHS int@4                                                                     #   135/191
INT2FLOATS                                                                      #   136/191
ADDS                                                                            #   137/191
MULS                                                                            #   138/191
ADDS                                                                            #   139/191
PUSHS LF@b                                                                      #   140/191
PUSHS LF@a                                                                      #   141/191
INT2FLOATS                                                                      #   142/191
MULS                                                                            #   143/191
PUSHS LF@c                                                                      #   144/191
DIVS                                                                            #   145/191
ADDS                                                                            #   146/191
PUSHS int@7                                                                     #   147/191
INT2FLOATS                                                                      #   148/191
ADDS                                                                            #   149/191
DIVS                                                                            #   150/191
ADDS                                                                            #   151/191
PUSHS LF@a                                                                      #   152/191
INT2FLOATS                                                                      #   153/191
SUBS                                                                            #   154/191
PUSHS int@7                                                                     #   155/191
INT2FLOATS                                                                      #   156/191
ADDS                                                                            #   157/191
MULS                                                                            #   158/191
PUSHS LF@a                                                                      #   159/191
INT2FLOATS                                                                      #   160/191
PUSHS LF@b                                                                      #   161/191
MULS                                                                            #   162/191
PUSHS LF@b                                                                      #   163/191
DIVS                                                                            #   164/191
SUBS                                                                            #   165/191
DIVS                                                                            #   166/191
SUBS                                                                            #   167/191
PUSHS int@1                                                                     #   168/191
INT2FLOATS                                                                      #   169/191
ADDS                                                                            #   170/191
PUSHS int@4                                                                     #   171/191
INT2FLOATS                                                                      #   172/191
DIVS                                                                            #   173/191
SUBS                                                                            #   174/191
POPS LF@d                                                                       #   175/191
CLEARS                                                                          #   176/191
PUSHS LF@d                                                                      #   177/191
PUSHS int@2                                                                     #   178/191
INT2FLOATS                                                                      #   179/191
PUSHS LF@d                                                                      #   180/191
MULS                                                                            #   181/191
SUBS                                                                            #   182/191
POPS LF@d                                                                       #   183/191
CLEARS                                                                          #   184/191
PUSHS LF@d                                                                      #   185/191
POPS TF@__INTERNAL__VAR_0                                                       #   186/191
WRITE TF@__INTERNAL__VAR_0                                                      #   187/191
JUMP __INTERNAL__FILE_END                                                       #   188/191
# PROGRAM END                                                                   #   190/191
LABEL __INTERNAL__FILE_END                                                      #   191/191