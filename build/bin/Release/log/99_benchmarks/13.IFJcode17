# 2017-12-04 10:53:38.535833
# SECTION: 99_benchmarks
# TEST: 13
# INFO: Multiplier listing
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: FUNEXP, UNARY, IFTHEN, BOOLOP
# STATE: FAIL
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IJUMP at line: 2 with following arguments:
# Executing instruction: ILABEL at line: 17 with following arguments:
# Executing instruction: ICREATEFRAME at line: 18 with following arguments:
# Executing instruction: IPUSHFRAME at line: 19 with following arguments:
# Executing instruction: ICREATEFRAME at line: 20 with following arguments:
# Executing instruction: IDEFVAR at line: 21 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 22 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@a()
# Executing instruction: IPUSHS at line: 23 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 24 with following arguments:
# Arg1: Stack@=1(int)
# Dest: LF@a=0(int)
# Executing instruction: ICLEARS at line: 25 with following arguments:
# Executing instruction: ILABEL at line: 27 with following arguments:
# Executing instruction: IPUSHS at line: 28 with following arguments:
# Arg1: LF@a=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 29 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 30 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 31 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 32 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ICREATEFRAME at line: 34 with following arguments:
# Executing instruction: IDEFVAR at line: 35 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 36 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: IPUSHS at line: 37 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 38 with following arguments:
# Arg1: Stack@=1(int)
# Dest: LF@b=0(int)
# Executing instruction: ICLEARS at line: 39 with following arguments:
# Executing instruction: ILABEL at line: 41 with following arguments:
# Executing instruction: IPUSHS at line: 42 with following arguments:
# Arg1: LF@b=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 43 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 44 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 45 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 46 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ICREATEFRAME at line: 48 with following arguments:
# Executing instruction: ICREATEFRAME at line: 49 with following arguments:
# Executing instruction: IPUSHS at line: 50 with following arguments:
# Arg1: LF@a=1(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 51 with following arguments:
# Dest: TF@a
# Executing instruction: IPOPS at line: 52 with following arguments:
# Arg1: Stack@=1(int)
# Dest: TF@a()
# Executing instruction: IPUSHS at line: 53 with following arguments:
# Arg1: LF@b=1(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 54 with following arguments:
# Dest: TF@b
# Executing instruction: IPOPS at line: 55 with following arguments:
# Arg1: Stack@=1(int)
# Dest: TF@b()
# Executing instruction: ICALL at line: 56 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: IPUSHFRAME at line: 6 with following arguments:
# Executing instruction: ICREATEFRAME at line: 7 with following arguments:
# Executing instruction: IPUSHS at line: 8 with following arguments:
# Arg1: LF@a=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 9 with following arguments:
# Arg1: LF@b=1(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 10 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 11 with following arguments:
# Executing instruction: IPOPFRAME at line: 57 with following arguments:
# Executing instruction: IDEFVAR at line: 58 with following arguments:
# Dest: TF@__INTERNAL__VAR_0
# Executing instruction: IPOPS at line: 59 with following arguments:
# Arg1: Stack@=1(int)
# Dest: TF@__INTERNAL__VAR_0()
# Executing instruction: IWRITE at line: 60 with following arguments:
# Arg1: TF@__INTERNAL__VAR_0=1(int)
# Executing instruction: IPUSHS at line: 61 with following arguments:
# Arg1: LF@b=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 62 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 63 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 64 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@b=1(int)
# Executing instruction: ICLEARS at line: 65 with following arguments:
# Executing instruction: IJUMP at line: 67 with following arguments:
# Executing instruction: ILABEL at line: 41 with following arguments:
# Executing instruction: IPUSHS at line: 42 with following arguments:
# Arg1: LF@b=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 43 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 44 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 45 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 46 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ICREATEFRAME at line: 48 with following arguments:
# Executing instruction: ICREATEFRAME at line: 49 with following arguments:
# Executing instruction: IPUSHS at line: 50 with following arguments:
# Arg1: LF@a=1(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 51 with following arguments:
# Dest: TF@a
# Executing instruction: IPOPS at line: 52 with following arguments:
# Arg1: Stack@=1(int)
# Dest: TF@a()
# Executing instruction: IPUSHS at line: 53 with following arguments:
# Arg1: LF@b=2(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 54 with following arguments:
# Dest: TF@b
# Executing instruction: IPOPS at line: 55 with following arguments:
# Arg1: Stack@=2(int)
# Dest: TF@b()
# Executing instruction: ICALL at line: 56 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: IPUSHFRAME at line: 6 with following arguments:
# Executing instruction: ICREATEFRAME at line: 7 with following arguments:
# Executing instruction: IPUSHS at line: 8 with following arguments:
# Arg1: LF@a=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 9 with following arguments:
# Arg1: LF@b=2(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 10 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 11 with following arguments:
# Executing instruction: IPOPFRAME at line: 57 with following arguments:
# Executing instruction: IDEFVAR at line: 58 with following arguments:
# Dest: TF@__INTERNAL__VAR_0
# Executing instruction: IPOPS at line: 59 with following arguments:
# Arg1: Stack@=2(int)
# Dest: TF@__INTERNAL__VAR_0()
# Executing instruction: IWRITE at line: 60 with following arguments:
# Arg1: TF@__INTERNAL__VAR_0=2(int)
# Executing instruction: IPUSHS at line: 61 with following arguments:
# Arg1: LF@b=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 62 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 63 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 64 with following arguments:
# Arg1: Stack@=3(int)
# Dest: LF@b=2(int)
# Executing instruction: ICLEARS at line: 65 with following arguments:
# Executing instruction: IJUMP at line: 67 with following arguments:
# Executing instruction: ILABEL at line: 41 with following arguments:
# Executing instruction: IPUSHS at line: 42 with following arguments:
# Arg1: LF@b=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 43 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 44 with following arguments:
# Arg1: Stack@=3(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 45 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 46 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ICREATEFRAME at line: 48 with following arguments:
# Executing instruction: ICREATEFRAME at line: 49 with following arguments:
# Executing instruction: IPUSHS at line: 50 with following arguments:
# Arg1: LF@a=1(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 51 with following arguments:
# Dest: TF@a
# Executing instruction: IPOPS at line: 52 with following arguments:
# Arg1: Stack@=1(int)
# Dest: TF@a()
# Executing instruction: IPUSHS at line: 53 with following arguments:
# Arg1: LF@b=3(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 54 with following arguments:
# Dest: TF@b
# Executing instruction: IPOPS at line: 55 with following arguments:
# Arg1: Stack@=3(int)
# Dest: TF@b()
# Executing instruction: ICALL at line: 56 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: IPUSHFRAME at line: 6 with following arguments:
# Executing instruction: ICREATEFRAME at line: 7 with following arguments:
# Executing instruction: IPUSHS at line: 8 with following arguments:
# Arg1: LF@a=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 9 with following arguments:
# Arg1: LF@b=3(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 10 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 11 with following arguments:
# Executing instruction: IPOPFRAME at line: 57 with following arguments:
# Executing instruction: IDEFVAR at line: 58 with following arguments:
# Dest: TF@__INTERNAL__VAR_0
# Executing instruction: IPOPS at line: 59 with following arguments:
# Arg1: Stack@=3(int)
# Dest: TF@__INTERNAL__VAR_0()
# Executing instruction: IWRITE at line: 60 with following arguments:
# Arg1: TF@__INTERNAL__VAR_0=3(int)
# Executing instruction: IPUSHS at line: 61 with following arguments:
# Arg1: LF@b=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 62 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 63 with following arguments:
# Arg1: Stack@=3(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 64 with following arguments:
# Arg1: Stack@=4(int)
# Dest: LF@b=3(int)
# Executing instruction: ICLEARS at line: 65 with following arguments:
# Executing instruction: IJUMP at line: 67 with following arguments:
# Executing instruction: ILABEL at line: 41 with following arguments:
# Executing instruction: IPUSHS at line: 42 with following arguments:
# Arg1: LF@b=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 43 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 44 with following arguments:
# Arg1: Stack@=4(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 45 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 46 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ICREATEFRAME at line: 48 with following arguments:
# Executing instruction: ICREATEFRAME at line: 49 with following arguments:
# Executing instruction: IPUSHS at line: 50 with following arguments:
# Arg1: LF@a=1(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 51 with following arguments:
# Dest: TF@a
# Executing instruction: IPOPS at line: 52 with following arguments:
# Arg1: Stack@=1(int)
# Dest: TF@a()
# Executing instruction: IPUSHS at line: 53 with following arguments:
# Arg1: LF@b=4(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 54 with following arguments:
# Dest: TF@b
# Executing instruction: IPOPS at line: 55 with following arguments:
# Arg1: Stack@=4(int)
# Dest: TF@b()
# Executing instruction: ICALL at line: 56 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: IPUSHFRAME at line: 6 with following arguments:
# Executing instruction: ICREATEFRAME at line: 7 with following arguments:
# Executing instruction: IPUSHS at line: 8 with following arguments:
# Arg1: LF@a=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 9 with following arguments:
# Arg1: LF@b=4(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 10 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 11 with following arguments:
# Executing instruction: IPOPFRAME at line: 57 with following arguments:
# Executing instruction: IDEFVAR at line: 58 with following arguments:
# Dest: TF@__INTERNAL__VAR_0
# Executing instruction: IPOPS at line: 59 with following arguments:
# Arg1: Stack@=4(int)
# Dest: TF@__INTERNAL__VAR_0()
# Executing instruction: IWRITE at line: 60 with following arguments:
# Arg1: TF@__INTERNAL__VAR_0=4(int)
# Executing instruction: IPUSHS at line: 61 with following arguments:
# Arg1: LF@b=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 62 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 63 with following arguments:
# Arg1: Stack@=4(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 64 with following arguments:
# Arg1: Stack@=5(int)
# Dest: LF@b=4(int)
# Executing instruction: ICLEARS at line: 65 with following arguments:
# Executing instruction: IJUMP at line: 67 with following arguments:
# Executing instruction: ILABEL at line: 41 with following arguments:
# Executing instruction: IPUSHS at line: 42 with following arguments:
# Arg1: LF@b=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 43 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 44 with following arguments:
# Arg1: Stack@=5(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 45 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 46 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ICREATEFRAME at line: 48 with following arguments:
# Executing instruction: ICREATEFRAME at line: 49 with following arguments:
# Executing instruction: IPUSHS at line: 50 with following arguments:
# Arg1: LF@a=1(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 51 with following arguments:
# Dest: TF@a
# Executing instruction: IPOPS at line: 52 with following arguments:
# Arg1: Stack@=1(int)
# Dest: TF@a()
# Executing instruction: IPUSHS at line: 53 with following arguments:
# Arg1: LF@b=5(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 54 with following arguments:
# Dest: TF@b
# Executing instruction: IPOPS at line: 55 with following arguments:
# Arg1: Stack@=5(int)
# Dest: TF@b()
# Executing instruction: ICALL at line: 56 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: IPUSHFRAME at line: 6 with following arguments:
# Executing instruction: ICREATEFRAME at line: 7 with following arguments:
# Executing instruction: IPUSHS at line: 8 with following arguments:
# Arg1: LF@a=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 9 with following arguments:
# Arg1: LF@b=5(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 10 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 11 with following arguments:
# Executing instruction: IPOPFRAME at line: 57 with following arguments:
# Executing instruction: IDEFVAR at line: 58 with following arguments:
# Dest: TF@__INTERNAL__VAR_0
# Executing instruction: IPOPS at line: 59 with following arguments:
# Arg1: Stack@=5(int)
# Dest: TF@__INTERNAL__VAR_0()
# Executing instruction: IWRITE at line: 60 with following arguments:
# Arg1: TF@__INTERNAL__VAR_0=5(int)
# Executing instruction: IPUSHS at line: 61 with following arguments:
# Arg1: LF@b=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 62 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 63 with following arguments:
# Arg1: Stack@=5(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 64 with following arguments:
# Arg1: Stack@=6(int)
# Dest: LF@b=5(int)
# Executing instruction: ICLEARS at line: 65 with following arguments:
# Executing instruction: IJUMP at line: 67 with following arguments:
# Executing instruction: ILABEL at line: 41 with following arguments:
# Executing instruction: IPUSHS at line: 42 with following arguments:
# Arg1: LF@b=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 43 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 44 with following arguments:
# Arg1: Stack@=6(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 45 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 46 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ICREATEFRAME at line: 48 with following arguments:
# Executing instruction: ICREATEFRAME at line: 49 with following arguments:
# Executing instruction: IPUSHS at line: 50 with following arguments:
# Arg1: LF@a=1(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 51 with following arguments:
# Dest: TF@a
# Executing instruction: IPOPS at line: 52 with following arguments:
# Arg1: Stack@=1(int)
# Dest: TF@a()
# Executing instruction: IPUSHS at line: 53 with following arguments:
# Arg1: LF@b=6(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 54 with following arguments:
# Dest: TF@b
# Executing instruction: IPOPS at line: 55 with following arguments:
# Arg1: Stack@=6(int)
# Dest: TF@b()
# Executing instruction: ICALL at line: 56 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: IPUSHFRAME at line: 6 with following arguments:
# Executing instruction: ICREATEFRAME at line: 7 with following arguments:
# Executing instruction: IPUSHS at line: 8 with following arguments:
# Arg1: LF@a=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 9 with following arguments:
# Arg1: LF@b=6(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 10 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 11 with following arguments:
# Executing instruction: IPOPFRAME at line: 57 with following arguments:
# Executing instruction: IDEFVAR at line: 58 with following arguments:
# Dest: TF@__INTERNAL__VAR_0
# Executing instruction: IPOPS at line: 59 with following arguments:
# Arg1: Stack@=6(int)
# Dest: TF@__INTERNAL__VAR_0()
# Executing instruction: IWRITE at line: 60 with following arguments:
# Arg1: TF@__INTERNAL__VAR_0=6(int)
# Executing instruction: IPUSHS at line: 61 with following arguments:
# Arg1: LF@b=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 62 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 63 with following arguments:
# Arg1: Stack@=6(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 64 with following arguments:
# Arg1: Stack@=7(int)
# Dest: LF@b=6(int)
# Executing instruction: ICLEARS at line: 65 with following arguments:
# Executing instruction: IJUMP at line: 67 with following arguments:
# Executing instruction: ILABEL at line: 41 with following arguments:
# Executing instruction: IPUSHS at line: 42 with following arguments:
# Arg1: LF@b=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 43 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 44 with following arguments:
# Arg1: Stack@=7(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 45 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 46 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ICREATEFRAME at line: 48 with following arguments:
# Executing instruction: ICREATEFRAME at line: 49 with following arguments:
# Executing instruction: IPUSHS at line: 50 with following arguments:
# Arg1: LF@a=1(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 51 with following arguments:
# Dest: TF@a
# Executing instruction: IPOPS at line: 52 with following arguments:
# Arg1: Stack@=1(int)
# Dest: TF@a()
# Executing instruction: IPUSHS at line: 53 with following arguments:
# Arg1: LF@b=7(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 54 with following arguments:
# Dest: TF@b
# Executing instruction: IPOPS at line: 55 with following arguments:
# Arg1: Stack@=7(int)
# Dest: TF@b()
# Executing instruction: ICALL at line: 56 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: IPUSHFRAME at line: 6 with following arguments:
# Executing instruction: ICREATEFRAME at line: 7 with following arguments:
# Executing instruction: IPUSHS at line: 8 with following arguments:
# Arg1: LF@a=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 9 with following arguments:
# Arg1: LF@b=7(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 10 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 11 with following arguments:
# Executing instruction: IPOPFRAME at line: 57 with following arguments:
# Executing instruction: IDEFVAR at line: 58 with following arguments:
# Dest: TF@__INTERNAL__VAR_0
# Executing instruction: IPOPS at line: 59 with following arguments:
# Arg1: Stack@=7(int)
# Dest: TF@__INTERNAL__VAR_0()
# Executing instruction: IWRITE at line: 60 with following arguments:
# Arg1: TF@__INTERNAL__VAR_0=7(int)
# Executing instruction: IPUSHS at line: 61 with following arguments:
# Arg1: LF@b=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 62 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 63 with following arguments:
# Arg1: Stack@=7(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 64 with following arguments:
# Arg1: Stack@=8(int)
# Dest: LF@b=7(int)
# Executing instruction: ICLEARS at line: 65 with following arguments:
# Executing instruction: IJUMP at line: 67 with following arguments:
# Executing instruction: ILABEL at line: 41 with following arguments:
# Executing instruction: IPUSHS at line: 42 with following arguments:
# Arg1: LF@b=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 43 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 44 with following arguments:
# Arg1: Stack@=8(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 45 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 46 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ICREATEFRAME at line: 48 with following arguments:
# Executing instruction: ICREATEFRAME at line: 49 with following arguments:
# Executing instruction: IPUSHS at line: 50 with following arguments:
# Arg1: LF@a=1(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 51 with following arguments:
# Dest: TF@a
# Executing instruction: IPOPS at line: 52 with following arguments:
# Arg1: Stack@=1(int)
# Dest: TF@a()
# Executing instruction: IPUSHS at line: 53 with following arguments:
# Arg1: LF@b=8(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 54 with following arguments:
# Dest: TF@b
# Executing instruction: IPOPS at line: 55 with following arguments:
# Arg1: Stack@=8(int)
# Dest: TF@b()
# Executing instruction: ICALL at line: 56 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: IPUSHFRAME at line: 6 with following arguments:
# Executing instruction: ICREATEFRAME at line: 7 with following arguments:
# Executing instruction: IPUSHS at line: 8 with following arguments:
# Arg1: LF@a=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 9 with following arguments:
# Arg1: LF@b=8(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 10 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 11 with following arguments:
# Executing instruction: IPOPFRAME at line: 57 with following arguments:
# Executing instruction: IDEFVAR at line: 58 with following arguments:
# Dest: TF@__INTERNAL__VAR_0
# Executing instruction: IPOPS at line: 59 with following arguments:
# Arg1: Stack@=8(int)
# Dest: TF@__INTERNAL__VAR_0()
# Executing instruction: IWRITE at line: 60 with following arguments:
# Arg1: TF@__INTERNAL__VAR_0=8(int)
# Executing instruction: IPUSHS at line: 61 with following arguments:
# Arg1: LF@b=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 62 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 63 with following arguments:
# Arg1: Stack@=8(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 64 with following arguments:
# Arg1: Stack@=9(int)
# Dest: LF@b=8(int)
# Executing instruction: ICLEARS at line: 65 with following arguments:
# Executing instruction: IJUMP at line: 67 with following arguments:
# Executing instruction: ILABEL at line: 41 with following arguments:
# Executing instruction: IPUSHS at line: 42 with following arguments:
# Arg1: LF@b=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 43 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 44 with following arguments:
# Arg1: Stack@=9(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 45 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 46 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ICREATEFRAME at line: 48 with following arguments:
# Executing instruction: ICREATEFRAME at line: 49 with following arguments:
# Executing instruction: IPUSHS at line: 50 with following arguments:
# Arg1: LF@a=1(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 51 with following arguments:
# Dest: TF@a
# Executing instruction: IPOPS at line: 52 with following arguments:
# Arg1: Stack@=1(int)
# Dest: TF@a()
# Executing instruction: IPUSHS at line: 53 with following arguments:
# Arg1: LF@b=9(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 54 with following arguments:
# Dest: TF@b
# Executing instruction: IPOPS at line: 55 with following arguments:
# Arg1: Stack@=9(int)
# Dest: TF@b()
# Executing instruction: ICALL at line: 56 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: IPUSHFRAME at line: 6 with following arguments:
# Executing instruction: ICREATEFRAME at line: 7 with following arguments:
# Executing instruction: IPUSHS at line: 8 with following arguments:
# Arg1: LF@a=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 9 with following arguments:
# Arg1: LF@b=9(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 10 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 11 with following arguments:
# Executing instruction: IPOPFRAME at line: 57 with following arguments:
# Executing instruction: IDEFVAR at line: 58 with following arguments:
# Dest: TF@__INTERNAL__VAR_0
# Executing instruction: IPOPS at line: 59 with following arguments:
# Arg1: Stack@=9(int)
# Dest: TF@__INTERNAL__VAR_0()
# Executing instruction: IWRITE at line: 60 with following arguments:
# Arg1: TF@__INTERNAL__VAR_0=9(int)
# Executing instruction: IPUSHS at line: 61 with following arguments:
# Arg1: LF@b=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 62 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 63 with following arguments:
# Arg1: Stack@=9(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 64 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@b=9(int)
# Executing instruction: ICLEARS at line: 65 with following arguments:
# Executing instruction: IJUMP at line: 67 with following arguments:
# Executing instruction: ILABEL at line: 41 with following arguments:
# Executing instruction: IPUSHS at line: 42 with following arguments:
# Arg1: LF@b=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 43 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 44 with following arguments:
# Arg1: Stack@=10(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 45 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 46 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 69 with following arguments:
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=
# (string)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 72 with following arguments:
# Arg1: Stack@=
# (string)
# Dest: TF@__INTERNAL__VAR_0=9(int)
# Executing instruction: IWRITE at line: 73 with following arguments:
# Arg1: TF@__INTERNAL__VAR_0=
# (string)
# Executing instruction: IPUSHS at line: 74 with following arguments:
# Arg1: LF@a=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 75 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 76 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 77 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@a=1(int)
# Executing instruction: ICLEARS at line: 78 with following arguments:
# Executing instruction: IJUMP at line: 80 with following arguments:
# Executing instruction: ILABEL at line: 27 with following arguments:
# Executing instruction: IPUSHS at line: 28 with following arguments:
# Arg1: LF@a=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 29 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 30 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 31 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 32 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ICREATEFRAME at line: 34 with following arguments:
# Executing instruction: IDEFVAR at line: 35 with following arguments:
# Dest: LF@b
# Error at line: 35
# Symbol already exists!
# 
# STDOUT DIFF:
# --- expected
# +++ actual
# @@ -1,9 +1 @@

#   1 2 3 4 5 6 7 8 9

# - 2 4 6 8 10 12 14 16 18

# - 3 6 9 12 15 18 21 24 27

# - 4 8 12 16 20 24 28 32 36

# - 5 10 15 20 25 30 35 40 45

# - 6 12 18 24 30 36 42 48 54

# - 7 14 21 28 35 42 49 56 63

# - 8 16 24 32 40 48 56 64 72

# - 9 18 27 36 45 54 63 72 81


# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 52
# PRICE: ---
# 
#   1: ' Multiplier listing
#   2: 
#   3: function multiply(a as integer, b as integer) as integer
#   4:     return a * b
#   5: end function
#   6: 
#   7: scope
#   8:     dim a as integer = 1
#   9:     
#  10:     do while a < 10 
#  11:     
#  12:         dim b as integer = 1
#  13:         
#  14:          do while b < 10 
#  15:             
#  16:             print multiply(a, b);
#  17:             
#  18:             b = b + 1
#  19:         loop
#  20:         print !"\n";
#  21:         a = a + 1
#  22:     loop
#  23:     
#  24: end scope

########################################

.IFJcode17                                                                      #     1/87
JUMP main                                                                       #     2/87
# FUNCTION                                                                      #     4/87
LABEL multiply                                                                  #     5/87
PUSHFRAME                                                                       #     6/87
CREATEFRAME                                                                     #     7/87
PUSHS LF@a                                                                      #     8/87
PUSHS LF@b                                                                      #     9/87
MULS                                                                            #    10/87
RETURN                                                                          #    11/87
PUSHS int@0                                                                     #    12/87
RETURN                                                                          #    13/87
# END FUNCTION                                                                  #    14/87
# MAIN                                                                          #    16/87
LABEL main                                                                      #    17/87
CREATEFRAME                                                                     #    18/87
PUSHFRAME                                                                       #    19/87
CREATEFRAME                                                                     #    20/87
DEFVAR LF@a                                                                     #    21/87
MOVE LF@a int@0                                                                 #    22/87
PUSHS int@1                                                                     #    23/87
POPS LF@a                                                                       #    24/87
CLEARS                                                                          #    25/87
# DO WHILE                                                                      #    26/87
LABEL __INTERNAL__LOOP_0_BEGIN                                                  #    27/87
PUSHS LF@a                                                                      #    28/87
PUSHS int@10                                                                    #    29/87
LTS                                                                             #    30/87
PUSHS bool@true                                                                 #    31/87
JUMPIFNEQS __INTERNAL__LOOP_0_END                                               #    32/87
# DO WHILE TRUE                                                                 #    33/87
CREATEFRAME                                                                     #    34/87
DEFVAR LF@b                                                                     #    35/87
MOVE LF@b int@0                                                                 #    36/87
PUSHS int@1                                                                     #    37/87
POPS LF@b                                                                       #    38/87
CLEARS                                                                          #    39/87
# DO WHILE                                                                      #    40/87
LABEL __INTERNAL__LOOP_1_BEGIN                                                  #    41/87
PUSHS LF@b                                                                      #    42/87
PUSHS int@10                                                                    #    43/87
LTS                                                                             #    44/87
PUSHS bool@true                                                                 #    45/87
JUMPIFNEQS __INTERNAL__LOOP_1_END                                               #    46/87
# DO WHILE TRUE                                                                 #    47/87
CREATEFRAME                                                                     #    48/87
CREATEFRAME                                                                     #    49/87
PUSHS LF@a                                                                      #    50/87
DEFVAR TF@a                                                                     #    51/87
POPS TF@a                                                                       #    52/87
PUSHS LF@b                                                                      #    53/87
DEFVAR TF@b                                                                     #    54/87
POPS TF@b                                                                       #    55/87
CALL multiply                                                                   #    56/87
POPFRAME                                                                        #    57/87
DEFVAR TF@__INTERNAL__VAR_0                                                     #    58/87
POPS TF@__INTERNAL__VAR_0                                                       #    59/87
WRITE TF@__INTERNAL__VAR_0                                                      #    60/87
PUSHS LF@b                                                                      #    61/87
PUSHS int@1                                                                     #    62/87
ADDS                                                                            #    63/87
POPS LF@b                                                                       #    64/87
CLEARS                                                                          #    65/87
# LOOP                                                                          #    66/87
JUMP __INTERNAL__LOOP_1_BEGIN                                                   #    67/87
# DO WHILE FALSE                                                                #    68/87
LABEL __INTERNAL__LOOP_1_END                                                    #    69/87
# DO WHILE END                                                                  #    70/87
PUSHS string@\010                                                               #    71/87
POPS TF@__INTERNAL__VAR_0                                                       #    72/87
WRITE TF@__INTERNAL__VAR_0                                                      #    73/87
PUSHS LF@a                                                                      #    74/87
PUSHS int@1                                                                     #    75/87
ADDS                                                                            #    76/87
POPS LF@a                                                                       #    77/87
CLEARS                                                                          #    78/87
# LOOP                                                                          #    79/87
JUMP __INTERNAL__LOOP_0_BEGIN                                                   #    80/87
# DO WHILE FALSE                                                                #    81/87
LABEL __INTERNAL__LOOP_0_END                                                    #    82/87
# DO WHILE END                                                                  #    83/87
JUMP __INTERNAL__FILE_END                                                       #    84/87
# PROGRAM END                                                                   #    86/87
LABEL __INTERNAL__FILE_END                                                      #    87/87