# 2017-12-04 17:23:12.234359
# SECTION: 05_conditions
# TEST: 14
# INFO: Correct condition without spaces
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: BOOLOP, UNARY, IFTHEN, FUNEXP
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IJUMP at line: 2 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: ICREATEFRAME at line: 6 with following arguments:
# Executing instruction: IPUSHFRAME at line: 7 with following arguments:
# Executing instruction: ICREATEFRAME at line: 8 with following arguments:
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 10 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@a()
# Executing instruction: IPUSHS at line: 11 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 12 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@a=0(int)
# Executing instruction: ICLEARS at line: 13 with following arguments:
# Executing instruction: ICREATEFRAME at line: 15 with following arguments:
# Executing instruction: IPUSHS at line: 17 with following arguments:
# Arg1: LF@a=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 18 with following arguments:
# Arg1: Const@=100(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 19 with following arguments:
# Arg1: Stack@=10(int)
# Arg2: Stack@=100(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 20 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 21 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 23 with following arguments:
# Arg1: Const@=ok(string)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 24 with following arguments:
# Dest: TF@__INTERNAL__VAR_0
# Executing instruction: IMOVE at line: 25 with following arguments:
# Arg1: Const@=(string)
# Dest: TF@__INTERNAL__VAR_0()
# Executing instruction: IPOPS at line: 26 with following arguments:
# Arg1: Stack@=ok(string)
# Dest: TF@__INTERNAL__VAR_0=(string)
# Executing instruction: IWRITE at line: 27 with following arguments:
# Arg1: TF@__INTERNAL__VAR_0=ok(string)
# Executing instruction: IJUMP at line: 28 with following arguments:
# Executing instruction: ILABEL at line: 31 with following arguments:
# Executing instruction: ICREATEFRAME at line: 32 with following arguments:
# Executing instruction: IJUMP at line: 34 with following arguments:
# Executing instruction: ILABEL at line: 39 with following arguments:
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 83 (37+46)
# 
#   1: ' Correct condition without spaces
#   2: scope
#   3: dim a as integer=10
#   4: if a<100then
#   5:     print!"ok";
#   6: end if
#   7: 
#   8: end scope

########################################

.IFJcode17                                                                      #     1/39
JUMP main                                                                       #     2/39
# MAIN                                                                          #     4/39
LABEL main                                                                      #     5/39
CREATEFRAME                                                                     #     6/39
PUSHFRAME                                                                       #     7/39
CREATEFRAME                                                                     #     8/39
DEFVAR LF@a                                                                     #     9/39
MOVE LF@a int@0                                                                 #    10/39
PUSHS int@10                                                                    #    11/39
POPS LF@a                                                                       #    12/39
CLEARS                                                                          #    13/39
# IF BLOCK                                                                      #    14/39
CREATEFRAME                                                                     #    15/39
# IF                                                                            #    16/39
PUSHS LF@a                                                                      #    17/39
PUSHS int@100                                                                   #    18/39
LTS                                                                             #    19/39
PUSHS bool@true                                                                 #    20/39
JUMPIFNEQS __INTERNAL__COND_0_END                                               #    21/39
# THEN                                                                          #    22/39
PUSHS string@ok                                                                 #    23/39
DEFVAR TF@__INTERNAL__VAR_0                                                     #    24/39
MOVE TF@__INTERNAL__VAR_0 string@                                               #    25/39
POPS TF@__INTERNAL__VAR_0                                                       #    26/39
WRITE TF@__INTERNAL__VAR_0                                                      #    27/39
JUMP __INTERNAL__COND_0_BLOCK_END                                               #    28/39
LABEL __INTERNAL__COND_0_END                                                    #    29/39
# END IF                                                                        #    30/39
LABEL __INTERNAL__COND_0_BLOCK_END                                              #    31/39
CREATEFRAME                                                                     #    32/39
# END IF BLOCK                                                                  #    33/39
JUMP __INTERNAL__FILE_END                                                       #    34/39
# MAIN END                                                                      #    36/39
# PROGRAM END                                                                   #    38/39
LABEL __INTERNAL__FILE_END                                                      #    39/39