# 2017-12-04 10:53:30.843378
# SECTION: 05_conditions
# TEST: 03
# INFO: implicit conversions
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: FUNEXP, UNARY, IFTHEN, BOOLOP
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IJUMP at line: 2 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: ICREATEFRAME at line: 6 with following arguments:
# Executing instruction: IPUSHFRAME at line: 7 with following arguments:
# Executing instruction: ICREATEFRAME at line: 8 with following arguments:
# Executing instruction: ICREATEFRAME at line: 10 with following arguments:
# Executing instruction: IPUSHS at line: 12 with following arguments:
# Arg1: Const@=200(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 13 with following arguments:
# Arg1: Stack@=200(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 14 with following arguments:
# Arg1: Const@=200(double)
# Dest: Stack@()
# Executing instruction: IEQS at line: 15 with following arguments:
# Arg1: Stack@=200(double)
# Arg2: Stack@=200(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 16 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 17 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 19 with following arguments:
# Arg1: Const@=789(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 20 with following arguments:
# Dest: TF@__INTERNAL__VAR_0
# Executing instruction: IPOPS at line: 21 with following arguments:
# Arg1: Stack@=789(int)
# Dest: TF@__INTERNAL__VAR_0()
# Executing instruction: IWRITE at line: 22 with following arguments:
# Arg1: TF@__INTERNAL__VAR_0=789(int)
# Executing instruction: IJUMP at line: 23 with following arguments:
# Executing instruction: ILABEL at line: 31 with following arguments:
# Executing instruction: IJUMP at line: 33 with following arguments:
# Executing instruction: ILABEL at line: 36 with following arguments:
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 65 (29+36)
# 
#   1: ' implicit conversions
#   2: scope
#   3: 	if 200 = 200.0 then
#   4: 		print 789;
#   5: 	else
#   6: 		print 0;
#   7: 	end if
#   8: end scope

########################################

.IFJcode17                                                                      #     1/36
JUMP main                                                                       #     2/36
# MAIN                                                                          #     4/36
LABEL main                                                                      #     5/36
CREATEFRAME                                                                     #     6/36
PUSHFRAME                                                                       #     7/36
CREATEFRAME                                                                     #     8/36
# IF BLOCK                                                                      #     9/36
CREATEFRAME                                                                     #    10/36
# IF                                                                            #    11/36
PUSHS int@200                                                                   #    12/36
INT2FLOATS                                                                      #    13/36
PUSHS float@200.0                                                               #    14/36
EQS                                                                             #    15/36
PUSHS bool@true                                                                 #    16/36
JUMPIFNEQS __INTERNAL__COND_0_END                                               #    17/36
# THEN                                                                          #    18/36
PUSHS int@789                                                                   #    19/36
DEFVAR TF@__INTERNAL__VAR_0                                                     #    20/36
POPS TF@__INTERNAL__VAR_0                                                       #    21/36
WRITE TF@__INTERNAL__VAR_0                                                      #    22/36
JUMP __INTERNAL__COND_0_BLOCK_END                                               #    23/36
LABEL __INTERNAL__COND_0_END                                                    #    24/36
# ELSE                                                                          #    25/36
PUSHS int@0                                                                     #    26/36
DEFVAR TF@__INTERNAL__VAR_0                                                     #    27/36
POPS TF@__INTERNAL__VAR_0                                                       #    28/36
WRITE TF@__INTERNAL__VAR_0                                                      #    29/36
# END IF                                                                        #    30/36
LABEL __INTERNAL__COND_0_BLOCK_END                                              #    31/36
# END IF BLOCK                                                                  #    32/36
JUMP __INTERNAL__FILE_END                                                       #    33/36
# PROGRAM END                                                                   #    35/36
LABEL __INTERNAL__FILE_END                                                      #    36/36