# 2017-12-03 11:37:09.327529
# SECTION: 05_conditions
# TEST: 01
# INFO: most simple if statement
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: FUNEXP, UNARY, IFTHEN, BOOLOP
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IJUMP at line: 2 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: ICREATEFRAME at line: 6 with following arguments:
# Executing instruction: IPUSHFRAME at line: 7 with following arguments:
# Executing instruction: IPUSHS at line: 10 with following arguments:
# Arg1: Const@=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 11 with following arguments:
# Arg1: Const@=3(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 12 with following arguments:
# Arg1: Stack@=8(int)
# Arg2: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 13 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 14 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 16 with following arguments:
# Arg1: Const@=42(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 17 with following arguments:
# Dest: LF@__INTERNAL__VAR_0
# Executing instruction: IPOPS at line: 18 with following arguments:
# Arg1: Stack@=42(int)
# Dest: LF@__INTERNAL__VAR_0()
# Executing instruction: IWRITE at line: 19 with following arguments:
# Arg1: LF@__INTERNAL__VAR_0=42(int)
# Executing instruction: IJUMP at line: 20 with following arguments:
# Executing instruction: ILABEL at line: 28 with following arguments:
# Executing instruction: IJUMP at line: 30 with following arguments:
# Executing instruction: ILABEL at line: 33 with following arguments:
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 56 (24+32)
# 
#   1: ' most simple if statement
#   2: scope
#   3: 	if 8 > 3 then
#   4: 		print 42;
#   5: 	else
#   6: 		print 58;
#   7: 	end if
#   8: end scope

########################################

.IFJcode17                                                                      #     1/33
JUMP main                                                                       #     2/33
# MAIN                                                                          #     4/33
LABEL main                                                                      #     5/33
CREATEFRAME                                                                     #     6/33
PUSHFRAME                                                                       #     7/33
# IF BLOCK                                                                      #     8/33
# IF                                                                            #     9/33
PUSHS int@8                                                                     #    10/33
PUSHS int@3                                                                     #    11/33
GTS                                                                             #    12/33
PUSHS bool@true                                                                 #    13/33
JUMPIFNEQS __INTERNAL__COND_0_END                                               #    14/33
# THEN                                                                          #    15/33
PUSHS int@42                                                                    #    16/33
DEFVAR LF@__INTERNAL__VAR_0                                                     #    17/33
POPS LF@__INTERNAL__VAR_0                                                       #    18/33
WRITE LF@__INTERNAL__VAR_0                                                      #    19/33
JUMP __INTERNAL__COND_0_BLOCK_END                                               #    20/33
LABEL __INTERNAL__COND_0_END                                                    #    21/33
# ELSE                                                                          #    22/33
PUSHS int@58                                                                    #    23/33
DEFVAR LF@__INTERNAL__VAR_0                                                     #    24/33
POPS LF@__INTERNAL__VAR_0                                                       #    25/33
WRITE LF@__INTERNAL__VAR_0                                                      #    26/33
# END IF                                                                        #    27/33
LABEL __INTERNAL__COND_0_BLOCK_END                                              #    28/33
# END IF BLOCK                                                                  #    29/33
JUMP __INTERNAL__FILE_END                                                       #    30/33
# PROGRAM END                                                                   #    32/33
LABEL __INTERNAL__FILE_END                                                      #    33/33