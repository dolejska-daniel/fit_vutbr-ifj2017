# 2017-12-03 11:37:09.734111
# SECTION: 06_loops
# TEST: 01
# INFO: basic while loop
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: FUNEXP, UNARY, IFTHEN, BOOLOP
# STATE: FAIL
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IJUMP at line: 2 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: ICREATEFRAME at line: 6 with following arguments:
# Executing instruction: IPUSHFRAME at line: 7 with following arguments:
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 9 with following arguments:
# Arg1: Const@=0(double)
# Dest: LF@a()
# Executing instruction: IPUSHS at line: 10 with following arguments:
# Arg1: Const@=25.54(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 11 with following arguments:
# Arg1: Stack@=25.54(double)
# Dest: LF@a=0(double)
# Executing instruction: ICLEARS at line: 12 with following arguments:
# Executing instruction: ILABEL at line: 13 with following arguments:
# Executing instruction: IPUSHS at line: 14 with following arguments:
# Arg1: LF@a=25.54(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 15 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 16 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 17 with following arguments:
# Arg1: Const@=25(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 18 with following arguments:
# Arg1: Stack@=0(double)
# Arg2: Stack@=25(int)
# Dest: Stack@()
# Error at line: 18
# Wrong operand type!
# 
# EXPECTED INTERPRETER STDOUT:

#  25.54 22.25 18.96 15.67 12.38 9.09 5.8 2.51-0.779999-4.07-7.36-10.65-13.94-17.23-20.52-23.81


# CURRENT INTERPRETER STDOUT:



# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 53
# PRICE: ---
# 
#   1: ' basic while loop
#   2: scope
#   3: 	dim a as double = 25.54
#   4: 	do while a > (0 - 25)
#   5: 		print a;
#   6: 		a = a - 3.29
#   7: 	loop
#   8: end scope

########################################

.IFJcode17                                                                      #     1/36
JUMP main                                                                       #     2/36
# MAIN                                                                          #     4/36
LABEL main                                                                      #     5/36
CREATEFRAME                                                                     #     6/36
PUSHFRAME                                                                       #     7/36
DEFVAR LF@a                                                                     #     8/36
MOVE LF@a float@0.0                                                             #     9/36
PUSHS float@25.54                                                               #    10/36
POPS LF@a                                                                       #    11/36
CLEARS                                                                          #    12/36
LABEL __INTERNAL__LOOP_0_BEGIN                                                  #    13/36
PUSHS LF@a                                                                      #    14/36
PUSHS int@0                                                                     #    15/36
INT2FLOATS                                                                      #    16/36
PUSHS int@25                                                                    #    17/36
SUBS                                                                            #    18/36
GTS                                                                             #    19/36
PUSHS bool@true                                                                 #    20/36
JUMPIFNEQS __INTERNAL__LOOP_0_END                                               #    21/36
PUSHS LF@a                                                                      #    22/36
DEFVAR LF@__INTERNAL__VAR_0                                                     #    23/36
POPS LF@__INTERNAL__VAR_0                                                       #    24/36
WRITE LF@__INTERNAL__VAR_0                                                      #    25/36
PUSHS LF@a                                                                      #    26/36
PUSHS float@3.29                                                                #    27/36
SUBS                                                                            #    28/36
POPS LF@a                                                                       #    29/36
CLEARS                                                                          #    30/36
JUMP __INTERNAL__LOOP_0_BEGIN                                                   #    31/36
LABEL __INTERNAL__LOOP_0_END                                                    #    32/36
JUMP __INTERNAL__FILE_END                                                       #    33/36
# PROGRAM END                                                                   #    35/36
LABEL __INTERNAL__FILE_END                                                      #    36/36