# 2017-12-04 14:49:24.126640
# SECTION: 04_expressions
# TEST: 22
# INFO: Doubles with another format
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: UNARY, IFTHEN, FUNEXP, BOOLOP
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IJUMP at line: 2 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: ICREATEFRAME at line: 6 with following arguments:
# Executing instruction: IPUSHFRAME at line: 7 with following arguments:
# Executing instruction: ICREATEFRAME at line: 8 with following arguments:
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 10 with following arguments:
# Arg1: Const@=0(double)
# Dest: LF@a()
# Executing instruction: IPUSHS at line: 11 with following arguments:
# Arg1: Const@=10.8(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 12 with following arguments:
# Arg1: Stack@=10.8(double)
# Dest: LF@a=0(double)
# Executing instruction: ICLEARS at line: 13 with following arguments:
# Executing instruction: IDEFVAR at line: 14 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 15 with following arguments:
# Arg1: Const@=0(double)
# Dest: LF@b()
# Executing instruction: IPUSHS at line: 16 with following arguments:
# Arg1: Const@=0.67432(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 17 with following arguments:
# Arg1: Stack@=0.67432(double)
# Dest: LF@b=0(double)
# Executing instruction: ICLEARS at line: 18 with following arguments:
# Executing instruction: IDEFVAR at line: 19 with following arguments:
# Dest: LF@c
# Executing instruction: IMOVE at line: 20 with following arguments:
# Arg1: Const@=0(double)
# Dest: LF@c()
# Executing instruction: IPUSHS at line: 21 with following arguments:
# Arg1: Const@=6743.2(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 22 with following arguments:
# Arg1: Stack@=6743.2(double)
# Dest: LF@c=0(double)
# Executing instruction: ICLEARS at line: 23 with following arguments:
# Executing instruction: IPUSHS at line: 24 with following arguments:
# Arg1: LF@a=10.8(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 25 with following arguments:
# Arg1: LF@b=0.67432(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 26 with following arguments:
# Arg1: Stack@=10.8(double)
# Arg2: Stack@=0.67432(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: LF@c=6743.2(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 28 with following arguments:
# Arg1: Stack@=11.4743(double)
# Arg2: Stack@=6743.2(double)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 29 with following arguments:
# Dest: TF@__INTERNAL__VAR_0
# Executing instruction: IPOPS at line: 30 with following arguments:
# Arg1: Stack@=-6731.73(double)
# Dest: TF@__INTERNAL__VAR_0()
# Executing instruction: IWRITE at line: 31 with following arguments:
# Arg1: TF@__INTERNAL__VAR_0=-6731.73(double)
# Executing instruction: IJUMP at line: 32 with following arguments:
# Executing instruction: ILABEL at line: 35 with following arguments:
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 113 (43+70)
# 
#   1: ' Doubles with another format
#   2: scope
#   3: 
#   4: dim a as double = 10.8
#   5: dim b as double = 67.432e-2
#   6: dim c as double = 67.432e2
#   7: 
#   8: print a + b - c;
#   9: 
#  10: end scope

########################################

.IFJcode17                                                                      #     1/35
JUMP main                                                                       #     2/35
# MAIN                                                                          #     4/35
LABEL main                                                                      #     5/35
CREATEFRAME                                                                     #     6/35
PUSHFRAME                                                                       #     7/35
CREATEFRAME                                                                     #     8/35
DEFVAR LF@a                                                                     #     9/35
MOVE LF@a float@0.0                                                             #    10/35
PUSHS float@10.8                                                                #    11/35
POPS LF@a                                                                       #    12/35
CLEARS                                                                          #    13/35
DEFVAR LF@b                                                                     #    14/35
MOVE LF@b float@0.0                                                             #    15/35
PUSHS float@67.432e-2                                                           #    16/35
POPS LF@b                                                                       #    17/35
CLEARS                                                                          #    18/35
DEFVAR LF@c                                                                     #    19/35
MOVE LF@c float@0.0                                                             #    20/35
PUSHS float@67.432e2                                                            #    21/35
POPS LF@c                                                                       #    22/35
CLEARS                                                                          #    23/35
PUSHS LF@a                                                                      #    24/35
PUSHS LF@b                                                                      #    25/35
ADDS                                                                            #    26/35
PUSHS LF@c                                                                      #    27/35
SUBS                                                                            #    28/35
DEFVAR TF@__INTERNAL__VAR_0                                                     #    29/35
POPS TF@__INTERNAL__VAR_0                                                       #    30/35
WRITE TF@__INTERNAL__VAR_0                                                      #    31/35
JUMP __INTERNAL__FILE_END                                                       #    32/35
# PROGRAM END                                                                   #    34/35
LABEL __INTERNAL__FILE_END                                                      #    35/35