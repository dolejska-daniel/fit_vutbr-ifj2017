# 2017-12-04 17:23:11.477847
# SECTION: 04_expressions
# TEST: 18
# INFO: comments inside expressions
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: BOOLOP, UNARY, IFTHEN, FUNEXP
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IJUMP at line: 2 with following arguments:
# Executing instruction: ILABEL at line: 15 with following arguments:
# Executing instruction: ICREATEFRAME at line: 16 with following arguments:
# Executing instruction: IPUSHFRAME at line: 17 with following arguments:
# Executing instruction: ICREATEFRAME at line: 18 with following arguments:
# Executing instruction: IDEFVAR at line: 19 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 20 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@a()
# Executing instruction: ICREATEFRAME at line: 21 with following arguments:
# Executing instruction: ICALL at line: 22 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: IPUSHFRAME at line: 6 with following arguments:
# Executing instruction: ICREATEFRAME at line: 7 with following arguments:
# Executing instruction: IPUSHS at line: 8 with following arguments:
# Arg1: Const@=39(int)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 9 with following arguments:
# Executing instruction: IPOPFRAME at line: 23 with following arguments:
# Executing instruction: IPOPS at line: 24 with following arguments:
# Arg1: Stack@=39(int)
# Dest: LF@a=0(int)
# Executing instruction: ICLEARS at line: 25 with following arguments:
# Executing instruction: IPUSHS at line: 26 with following arguments:
# Arg1: LF@a=39(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: Const@=3(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 28 with following arguments:
# Arg1: Stack@=39(int)
# Arg2: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 29 with following arguments:
# Arg1: Const@=6(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 30 with following arguments:
# Arg1: Stack@=42(int)
# Arg2: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 31 with following arguments:
# Arg1: Stack@=48(int)
# Dest: LF@a=39(int)
# Executing instruction: ICLEARS at line: 32 with following arguments:
# Executing instruction: IPUSHS at line: 33 with following arguments:
# Arg1: LF@a=48(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 34 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 35 with following arguments:
# Arg1: Stack@=48(int)
# Arg2: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 36 with following arguments:
# Arg1: Stack@=96(int)
# Dest: LF@a=48(int)
# Executing instruction: ICLEARS at line: 37 with following arguments:
# Executing instruction: IPUSHS at line: 38 with following arguments:
# Arg1: LF@a=96(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 39 with following arguments:
# Dest: TF@__INTERNAL__VAR_0
# Executing instruction: IMOVE at line: 40 with following arguments:
# Arg1: Const@=0(int)
# Dest: TF@__INTERNAL__VAR_0()
# Executing instruction: IPOPS at line: 41 with following arguments:
# Arg1: Stack@=96(int)
# Dest: TF@__INTERNAL__VAR_0=0(int)
# Executing instruction: IWRITE at line: 42 with following arguments:
# Arg1: TF@__INTERNAL__VAR_0=96(int)
# Executing instruction: IJUMP at line: 43 with following arguments:
# Executing instruction: ILABEL at line: 48 with following arguments:
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 132 (62+70)
# 
#   1: ' comments inside expressions
#   2: 
#   3: function foo() as integer
#   4: 	return 39
#   5: end function
#   6: 
#   7: scope
#   8: 	
#   9: 	dim a as integer
#  10: 	a = foo()
#  11: 	a = a + 3 + 6' comment
#  12: 	a = a /' '/ * /' '/ 2 ' + 8
#  13: 	print a;
#  14: 
#  15: end scope

########################################

.IFJcode17                                                                      #     1/48
JUMP main                                                                       #     2/48
# FUNCTION                                                                      #     4/48
LABEL foo                                                                       #     5/48
PUSHFRAME                                                                       #     6/48
CREATEFRAME                                                                     #     7/48
PUSHS int@39                                                                    #     8/48
RETURN                                                                          #     9/48
PUSHS int@0                                                                     #    10/48
RETURN                                                                          #    11/48
# END FUNCTION                                                                  #    12/48
# MAIN                                                                          #    14/48
LABEL main                                                                      #    15/48
CREATEFRAME                                                                     #    16/48
PUSHFRAME                                                                       #    17/48
CREATEFRAME                                                                     #    18/48
DEFVAR LF@a                                                                     #    19/48
MOVE LF@a int@0                                                                 #    20/48
CREATEFRAME                                                                     #    21/48
CALL foo                                                                        #    22/48
POPFRAME                                                                        #    23/48
POPS LF@a                                                                       #    24/48
CLEARS                                                                          #    25/48
PUSHS LF@a                                                                      #    26/48
PUSHS int@3                                                                     #    27/48
ADDS                                                                            #    28/48
PUSHS int@6                                                                     #    29/48
ADDS                                                                            #    30/48
POPS LF@a                                                                       #    31/48
CLEARS                                                                          #    32/48
PUSHS LF@a                                                                      #    33/48
PUSHS int@2                                                                     #    34/48
MULS                                                                            #    35/48
POPS LF@a                                                                       #    36/48
CLEARS                                                                          #    37/48
PUSHS LF@a                                                                      #    38/48
DEFVAR TF@__INTERNAL__VAR_0                                                     #    39/48
MOVE TF@__INTERNAL__VAR_0 int@0                                                 #    40/48
POPS TF@__INTERNAL__VAR_0                                                       #    41/48
WRITE TF@__INTERNAL__VAR_0                                                      #    42/48
JUMP __INTERNAL__FILE_END                                                       #    43/48
# MAIN END                                                                      #    45/48
# PROGRAM END                                                                   #    47/48
LABEL __INTERNAL__FILE_END                                                      #    48/48