# 2017-12-03 11:37:07.807488
# SECTION: 04_expressions
# TEST: 14
# INFO: Test for implicit conversion
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: FUNEXP, UNARY, IFTHEN, BOOLOP
# STATE: FAIL
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IJUMP at line: 2 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: ICREATEFRAME at line: 6 with following arguments:
# Executing instruction: IPUSHFRAME at line: 7 with following arguments:
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 9 with following arguments:
# Arg1: Const@=0(double)
# Dest: LF@a()
# Executing instruction: IPUSHS at line: 10 with following arguments:
# Arg1: Const@=123.456(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 11 with following arguments:
# Arg1: Stack@=123.456(double)
# Dest: LF@a=0(double)
# Executing instruction: ICLEARS at line: 12 with following arguments:
# Executing instruction: IDEFVAR at line: 13 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 14 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: IPUSHS at line: 15 with following arguments:
# Arg1: Const@=456465(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 16 with following arguments:
# Arg1: Stack@=456465(int)
# Dest: LF@b=0(int)
# Executing instruction: ICLEARS at line: 17 with following arguments:
# Executing instruction: IDEFVAR at line: 18 with following arguments:
# Dest: LF@c
# Executing instruction: IMOVE at line: 19 with following arguments:
# Arg1: Const@=0(double)
# Dest: LF@c()
# Executing instruction: IPUSHS at line: 20 with following arguments:
# Arg1: LF@a=123.456(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 21 with following arguments:
# Arg1: LF@b=456465(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 22 with following arguments:
# Arg1: Stack@=456465(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 23 with following arguments:
# Arg1: Stack@=123.456(double)
# Arg2: Stack@=456465(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 24 with following arguments:
# Arg1: LF@b=456465(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 25 with following arguments:
# Arg1: Stack@=456465(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 26 with following arguments:
# Arg1: Stack@=5.63536e+07(double)
# Arg2: Stack@=456465(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: LF@b=456465(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 28 with following arguments:
# Arg1: Stack@=456465(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 29 with following arguments:
# Arg1: Stack@=123.456(double)
# Arg2: Stack@=456465(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: LF@b=456465(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 31 with following arguments:
# Arg1: Stack@=456465(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 32 with following arguments:
# Arg1: Stack@=5.63536e+07(double)
# Arg2: Stack@=456465(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 33 with following arguments:
# Arg1: Stack@=123.456(double)
# Dest: LF@c=0(double)
# Executing instruction: ICLEARS at line: 34 with following arguments:
# Executing instruction: IPUSHS at line: 35 with following arguments:
# Arg1: LF@c=123.456(double)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 36 with following arguments:
# Dest: LF@__INTERNAL__VAR_0
# Executing instruction: IPOPS at line: 37 with following arguments:
# Arg1: Stack@=123.456(double)
# Dest: LF@__INTERNAL__VAR_0()
# Executing instruction: IWRITE at line: 38 with following arguments:
# Arg1: LF@__INTERNAL__VAR_0=123.456(double)
# Executing instruction: IJUMP at line: 39 with following arguments:
# Executing instruction: ILABEL at line: 42 with following arguments:
# 
# STDOUT DIFF:
# --- expected
# +++ actual
# @@ -1 +1 @@

# - 123.457
# + 123.456

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: ---
# 
#   1: ' Test for implicit conversion
#   2: SCOPE
#   3: 
#   4: 	dim a as double
#   5: 	a = 123.4565
#   6: 
#   7: 	dim b as integer
#   8: 	b = 456465
#   9: 
#  10: 	dim c as double
#  11: 	c = (((a * b) / b) * b) / b 
#  12: 
#  13: 	print c;
#  14: 
#  15: END SCOPE

########################################

.IFJcode17                                                                      #     1/42
JUMP main                                                                       #     2/42
# MAIN                                                                          #     4/42
LABEL main                                                                      #     5/42
CREATEFRAME                                                                     #     6/42
PUSHFRAME                                                                       #     7/42
DEFVAR LF@a                                                                     #     8/42
MOVE LF@a float@0.0                                                             #     9/42
PUSHS float@123.4565                                                            #    10/42
POPS LF@a                                                                       #    11/42
CLEARS                                                                          #    12/42
DEFVAR LF@b                                                                     #    13/42
MOVE LF@b int@0                                                                 #    14/42
PUSHS int@456465                                                                #    15/42
POPS LF@b                                                                       #    16/42
CLEARS                                                                          #    17/42
DEFVAR LF@c                                                                     #    18/42
MOVE LF@c float@0.0                                                             #    19/42
PUSHS LF@a                                                                      #    20/42
PUSHS LF@b                                                                      #    21/42
INT2FLOATS                                                                      #    22/42
MULS                                                                            #    23/42
PUSHS LF@b                                                                      #    24/42
INT2FLOATS                                                                      #    25/42
DIVS                                                                            #    26/42
PUSHS LF@b                                                                      #    27/42
INT2FLOATS                                                                      #    28/42
MULS                                                                            #    29/42
PUSHS LF@b                                                                      #    30/42
INT2FLOATS                                                                      #    31/42
DIVS                                                                            #    32/42
POPS LF@c                                                                       #    33/42
CLEARS                                                                          #    34/42
PUSHS LF@c                                                                      #    35/42
DEFVAR LF@__INTERNAL__VAR_0                                                     #    36/42
POPS LF@__INTERNAL__VAR_0                                                       #    37/42
WRITE LF@__INTERNAL__VAR_0                                                      #    38/42
JUMP __INTERNAL__FILE_END                                                       #    39/42
# PROGRAM END                                                                   #    41/42
LABEL __INTERNAL__FILE_END                                                      #    42/42