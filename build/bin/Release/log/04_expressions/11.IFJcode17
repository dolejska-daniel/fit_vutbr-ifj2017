# 2017-12-03 11:37:07.768885
# SECTION: 04_expressions
# TEST: 11
# INFO: Convert double into integer
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: FUNEXP, UNARY, IFTHEN, BOOLOP
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IJUMP at line: 2 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: ICREATEFRAME at line: 6 with following arguments:
# Executing instruction: IPUSHFRAME at line: 7 with following arguments:
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 9 with following arguments:
# Arg1: Const@=0(double)
# Dest: LF@a()
# Executing instruction: IPUSHS at line: 10 with following arguments:
# Arg1: Const@=2(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 11 with following arguments:
# Arg1: Stack@=2(double)
# Dest: LF@a=0(double)
# Executing instruction: ICLEARS at line: 12 with following arguments:
# Executing instruction: IDEFVAR at line: 13 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 14 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: IPUSHS at line: 15 with following arguments:
# Arg1: LF@a=2(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2INTS at line: 16 with following arguments:
# Arg1: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 17 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@b=0(int)
# Executing instruction: ICLEARS at line: 18 with following arguments:
# Executing instruction: IPUSHS at line: 19 with following arguments:
# Arg1: LF@b=2(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 20 with following arguments:
# Dest: LF@__INTERNAL__VAR_0
# Executing instruction: IPOPS at line: 21 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@__INTERNAL__VAR_0()
# Executing instruction: IWRITE at line: 22 with following arguments:
# Arg1: LF@__INTERNAL__VAR_0=2(int)
# Executing instruction: IJUMP at line: 23 with following arguments:
# Executing instruction: ILABEL at line: 26 with following arguments:
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 71 (28+43)
# 
#   1: ' Convert double into integer
#   2: 
#   3: scope
#   4: 
#   5: 	dim a as double
#   6: 	a = 2.0
#   7: 	dim b as integer
#   8: 	b = a
#   9: 
#  10: 	print b;
#  11: 
#  12: end scope

########################################

.IFJcode17                                                                      #     1/26
JUMP main                                                                       #     2/26
# MAIN                                                                          #     4/26
LABEL main                                                                      #     5/26
CREATEFRAME                                                                     #     6/26
PUSHFRAME                                                                       #     7/26
DEFVAR LF@a                                                                     #     8/26
MOVE LF@a float@0.0                                                             #     9/26
PUSHS float@2.0                                                                 #    10/26
POPS LF@a                                                                       #    11/26
CLEARS                                                                          #    12/26
DEFVAR LF@b                                                                     #    13/26
MOVE LF@b int@0                                                                 #    14/26
PUSHS LF@a                                                                      #    15/26
FLOAT2INTS                                                                      #    16/26
POPS LF@b                                                                       #    17/26
CLEARS                                                                          #    18/26
PUSHS LF@b                                                                      #    19/26
DEFVAR LF@__INTERNAL__VAR_0                                                     #    20/26
POPS LF@__INTERNAL__VAR_0                                                       #    21/26
WRITE LF@__INTERNAL__VAR_0                                                      #    22/26
JUMP __INTERNAL__FILE_END                                                       #    23/26
# PROGRAM END                                                                   #    25/26
LABEL __INTERNAL__FILE_END                                                      #    26/26