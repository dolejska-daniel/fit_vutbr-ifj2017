# 2017-12-04 17:23:11.109368
# SECTION: 04_expressions
# TEST: 06
# INFO: multiple operations with different priorities I
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: BOOLOP, UNARY, IFTHEN, FUNEXP
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IJUMP at line: 2 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: ICREATEFRAME at line: 6 with following arguments:
# Executing instruction: IPUSHFRAME at line: 7 with following arguments:
# Executing instruction: ICREATEFRAME at line: 8 with following arguments:
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 10 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@a()
# Executing instruction: IPUSHS at line: 11 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 12 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@a=0(int)
# Executing instruction: ICLEARS at line: 13 with following arguments:
# Executing instruction: IDEFVAR at line: 14 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 15 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: IPUSHS at line: 16 with following arguments:
# Arg1: Const@=9(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 17 with following arguments:
# Arg1: Stack@=9(int)
# Dest: LF@b=0(int)
# Executing instruction: ICLEARS at line: 18 with following arguments:
# Executing instruction: IPUSHS at line: 19 with following arguments:
# Arg1: LF@b=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 20 with following arguments:
# Arg1: LF@a=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 21 with following arguments:
# Arg1: LF@b=9(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 22 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 23 with following arguments:
# Arg1: Stack@=9(int)
# Arg2: Stack@=18(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 24 with following arguments:
# Arg1: LF@b=9(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 25 with following arguments:
# Arg1: Stack@=27(int)
# Arg2: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 26 with following arguments:
# Arg1: Stack@=36(int)
# Dest: LF@a=2(int)
# Executing instruction: ICLEARS at line: 27 with following arguments:
# Executing instruction: IPUSHS at line: 28 with following arguments:
# Arg1: LF@a=36(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 29 with following arguments:
# Dest: TF@__INTERNAL__VAR_0
# Executing instruction: IMOVE at line: 30 with following arguments:
# Arg1: Const@=0(int)
# Dest: TF@__INTERNAL__VAR_0()
# Executing instruction: IPOPS at line: 31 with following arguments:
# Arg1: Stack@=36(int)
# Dest: TF@__INTERNAL__VAR_0=0(int)
# Executing instruction: IWRITE at line: 32 with following arguments:
# Arg1: TF@__INTERNAL__VAR_0=36(int)
# Executing instruction: IJUMP at line: 33 with following arguments:
# Executing instruction: ILABEL at line: 38 with following arguments:
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 127 (46+81)
# 
#   1: ' multiple operations with different priorities I
#   2: scope
#   3:     dim a as integer = 2
#   4:     dim b as integer = 9
#   5:     a = b + a * b + b
#   6:     print a;
#   7: end scope

########################################

.IFJcode17                                                                      #     1/38
JUMP main                                                                       #     2/38
# MAIN                                                                          #     4/38
LABEL main                                                                      #     5/38
CREATEFRAME                                                                     #     6/38
PUSHFRAME                                                                       #     7/38
CREATEFRAME                                                                     #     8/38
DEFVAR LF@a                                                                     #     9/38
MOVE LF@a int@0                                                                 #    10/38
PUSHS int@2                                                                     #    11/38
POPS LF@a                                                                       #    12/38
CLEARS                                                                          #    13/38
DEFVAR LF@b                                                                     #    14/38
MOVE LF@b int@0                                                                 #    15/38
PUSHS int@9                                                                     #    16/38
POPS LF@b                                                                       #    17/38
CLEARS                                                                          #    18/38
PUSHS LF@b                                                                      #    19/38
PUSHS LF@a                                                                      #    20/38
PUSHS LF@b                                                                      #    21/38
MULS                                                                            #    22/38
ADDS                                                                            #    23/38
PUSHS LF@b                                                                      #    24/38
ADDS                                                                            #    25/38
POPS LF@a                                                                       #    26/38
CLEARS                                                                          #    27/38
PUSHS LF@a                                                                      #    28/38
DEFVAR TF@__INTERNAL__VAR_0                                                     #    29/38
MOVE TF@__INTERNAL__VAR_0 int@0                                                 #    30/38
POPS TF@__INTERNAL__VAR_0                                                       #    31/38
WRITE TF@__INTERNAL__VAR_0                                                      #    32/38
JUMP __INTERNAL__FILE_END                                                       #    33/38
# MAIN END                                                                      #    35/38
# PROGRAM END                                                                   #    37/38
LABEL __INTERNAL__FILE_END                                                      #    38/38