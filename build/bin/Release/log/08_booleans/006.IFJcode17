# 2017-12-03 23:09:21.889260
# SECTION: 08_booleans
# TEST: 006
# INFO: Equl in expression (it compare)
# REQUIRED EXTENSIONS: BOOLOP
# ACTIVATED EXTENSIONS: BOOLOP, IFTHEN, UNARY, FUNEXP
# STATE: FAIL
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IJUMP at line: 2 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: ICREATEFRAME at line: 6 with following arguments:
# Executing instruction: IPUSHFRAME at line: 7 with following arguments:
# Executing instruction: ICREATEFRAME at line: 8 with following arguments:
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 10 with following arguments:
# Arg1: Const@=false(bool)
# Dest: LF@a()
# Executing instruction: IPUSHS at line: 11 with following arguments:
# Arg1: Const@=false(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 12 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: LF@a=false(bool)
# Executing instruction: ICLEARS at line: 13 with following arguments:
# Executing instruction: ICREATEFRAME at line: 15 with following arguments:
# Executing instruction: IPUSHS at line: 17 with following arguments:
# Arg1: LF@a=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 18 with following arguments:
# Arg1: Const@=false(bool)
# Dest: Stack@()
# Executing instruction: IEQS at line: 19 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 20 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 21 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 23 with following arguments:
# Arg1: LF@a=false(bool)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 24 with following arguments:
# Dest: TF@__INTERNAL__VAR_0
# Executing instruction: IPOPS at line: 25 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: TF@__INTERNAL__VAR_0()
# Executing instruction: IWRITE at line: 26 with following arguments:
# Arg1: TF@__INTERNAL__VAR_0=false(bool)
# Executing instruction: IJUMP at line: 27 with following arguments:
# Executing instruction: ILABEL at line: 31 with following arguments:
# Executing instruction: IPUSHS at line: 33 with following arguments:
# Arg1: LF@a=false(bool)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 34 with following arguments:
# Dest: TF@__INTERNAL__VAR_0
# Error at line: 34
# Symbol already exists!
# 
# STDOUT DIFF:
# --- expected
# +++ actual
# @@ -1 +1 @@

# -falsefalse
# +false

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 52
# PRICE: ---
# 
#   1: scope 
#   2:  dim a as boolean = false 
#   3:  if a = false then 
#   4:  print a; 
#   5:  else 
#   6:  end if 
#   7:  print a; 
#   8:  end scope 

########################################

.IFJcode17                                                                      #     1/40
JUMP main                                                                       #     2/40
# MAIN                                                                          #     4/40
LABEL main                                                                      #     5/40
CREATEFRAME                                                                     #     6/40
PUSHFRAME                                                                       #     7/40
CREATEFRAME                                                                     #     8/40
DEFVAR LF@a                                                                     #     9/40
MOVE LF@a bool@false                                                            #    10/40
PUSHS bool@false                                                                #    11/40
POPS LF@a                                                                       #    12/40
CLEARS                                                                          #    13/40
# IF BLOCK                                                                      #    14/40
CREATEFRAME                                                                     #    15/40
# IF                                                                            #    16/40
PUSHS LF@a                                                                      #    17/40
PUSHS bool@false                                                                #    18/40
EQS                                                                             #    19/40
PUSHS bool@true                                                                 #    20/40
JUMPIFNEQS __INTERNAL__COND_0_END                                               #    21/40
# THEN                                                                          #    22/40
PUSHS LF@a                                                                      #    23/40
DEFVAR TF@__INTERNAL__VAR_0                                                     #    24/40
POPS TF@__INTERNAL__VAR_0                                                       #    25/40
WRITE TF@__INTERNAL__VAR_0                                                      #    26/40
JUMP __INTERNAL__COND_0_BLOCK_END                                               #    27/40
LABEL __INTERNAL__COND_0_END                                                    #    28/40
# ELSE                                                                          #    29/40
# END IF                                                                        #    30/40
LABEL __INTERNAL__COND_0_BLOCK_END                                              #    31/40
# END IF BLOCK                                                                  #    32/40
PUSHS LF@a                                                                      #    33/40
DEFVAR TF@__INTERNAL__VAR_0                                                     #    34/40
POPS TF@__INTERNAL__VAR_0                                                       #    35/40
WRITE TF@__INTERNAL__VAR_0                                                      #    36/40
JUMP __INTERNAL__FILE_END                                                       #    37/40
# PROGRAM END                                                                   #    39/40
LABEL __INTERNAL__FILE_END                                                      #    40/40