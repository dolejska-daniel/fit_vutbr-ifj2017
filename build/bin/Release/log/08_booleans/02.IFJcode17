# 2017-12-04 14:49:26.143504
# SECTION: 08_booleans
# TEST: 02
# INFO: boolean operations
# REQUIRED EXTENSIONS: BOOLOP
# ACTIVATED EXTENSIONS: UNARY, IFTHEN, FUNEXP, BOOLOP
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IJUMP at line: 2 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: ICREATEFRAME at line: 6 with following arguments:
# Executing instruction: IPUSHFRAME at line: 7 with following arguments:
# Executing instruction: ICREATEFRAME at line: 8 with following arguments:
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 10 with following arguments:
# Arg1: Const@=false(bool)
# Dest: LF@a()
# Executing instruction: IPUSHS at line: 11 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 12 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@a=false(bool)
# Executing instruction: ICLEARS at line: 13 with following arguments:
# Executing instruction: IDEFVAR at line: 14 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 15 with following arguments:
# Arg1: Const@=false(bool)
# Dest: LF@b()
# Executing instruction: IPUSHS at line: 16 with following arguments:
# Arg1: Const@=false(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 17 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: LF@b=false(bool)
# Executing instruction: ICLEARS at line: 18 with following arguments:
# Executing instruction: IDEFVAR at line: 19 with following arguments:
# Dest: LF@c
# Executing instruction: IMOVE at line: 20 with following arguments:
# Arg1: Const@=false(bool)
# Dest: LF@c()
# Executing instruction: IPUSHS at line: 21 with following arguments:
# Arg1: Const@=false(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 22 with following arguments:
# Arg1: Stack@=false(bool)
# Dest: LF@c=false(bool)
# Executing instruction: ICLEARS at line: 23 with following arguments:
# Executing instruction: ICREATEFRAME at line: 25 with following arguments:
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: LF@b=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 28 with following arguments:
# Arg1: LF@c=false(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 29 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: LF@a=true(bool)
# Dest: Stack@()
# Executing instruction: IANDS at line: 31 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 32 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 33 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 40 with following arguments:
# Executing instruction: IPUSHS at line: 42 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 43 with following arguments:
# Dest: TF@__INTERNAL__VAR_0
# Executing instruction: IPOPS at line: 44 with following arguments:
# Arg1: Stack@=0(int)
# Dest: TF@__INTERNAL__VAR_0()
# Executing instruction: IWRITE at line: 45 with following arguments:
# Arg1: TF@__INTERNAL__VAR_0=0(int)
# Executing instruction: ILABEL at line: 47 with following arguments:
# Executing instruction: ICREATEFRAME at line: 48 with following arguments:
# Executing instruction: ICREATEFRAME at line: 51 with following arguments:
# Executing instruction: IPUSHS at line: 53 with following arguments:
# Arg1: LF@b=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 54 with following arguments:
# Arg1: LF@c=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 55 with following arguments:
# Arg1: LF@a=true(bool)
# Dest: Stack@()
# Executing instruction: IANDS at line: 56 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 57 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 58 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 59 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 66 with following arguments:
# Executing instruction: IPUSHS at line: 68 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 69 with following arguments:
# Dest: TF@__INTERNAL__VAR_0
# Executing instruction: IPOPS at line: 70 with following arguments:
# Arg1: Stack@=1(int)
# Dest: TF@__INTERNAL__VAR_0()
# Executing instruction: IWRITE at line: 71 with following arguments:
# Arg1: TF@__INTERNAL__VAR_0=1(int)
# Executing instruction: ILABEL at line: 73 with following arguments:
# Executing instruction: ICREATEFRAME at line: 74 with following arguments:
# Executing instruction: ICREATEFRAME at line: 77 with following arguments:
# Executing instruction: IPUSHS at line: 79 with following arguments:
# Arg1: Const@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 80 with following arguments:
# Arg1: Const@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 81 with following arguments:
# Arg1: Const@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 82 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 83 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 84 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 85 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IANDS at line: 86 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Dest: Stack@()
# Executing instruction: IORS at line: 87 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=false(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 88 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 89 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 96 with following arguments:
# Executing instruction: IPUSHS at line: 98 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 99 with following arguments:
# Dest: TF@__INTERNAL__VAR_0
# Executing instruction: IPOPS at line: 100 with following arguments:
# Arg1: Stack@=0(int)
# Dest: TF@__INTERNAL__VAR_0()
# Executing instruction: IWRITE at line: 101 with following arguments:
# Arg1: TF@__INTERNAL__VAR_0=0(int)
# Executing instruction: ILABEL at line: 103 with following arguments:
# Executing instruction: ICREATEFRAME at line: 104 with following arguments:
# Executing instruction: IJUMP at line: 106 with following arguments:
# Executing instruction: ILABEL at line: 109 with following arguments:
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 291 (102+189)
# 
#   1: ' boolean operations
#   2: scope
#   3: 	dim a as boolean = True
#   4: 	dim b as boolean = False
#   5: 	dim c as boolean = False
#   6: 
#   7: 	if b or c and a then
#   8: 		print 1;
#   9: 	else
#  10: 		print 0;
#  11: 	end if
#  12: 
#  13: 	if b or (c and a) then
#  14: 		print 0;
#  15: 	else
#  16: 		print 1;
#  17: 	end if
#  18: 
#  19: 	if False or (False and (False or (True or True))) then
#  20: 		print 1;
#  21: 	else
#  22: 		print 0;
#  23: 	end if
#  24: end scope

########################################

.IFJcode17                                                                      #     1/109
JUMP main                                                                       #     2/109
# MAIN                                                                          #     4/109
LABEL main                                                                      #     5/109
CREATEFRAME                                                                     #     6/109
PUSHFRAME                                                                       #     7/109
CREATEFRAME                                                                     #     8/109
DEFVAR LF@a                                                                     #     9/109
MOVE LF@a bool@false                                                            #    10/109
PUSHS bool@true                                                                 #    11/109
POPS LF@a                                                                       #    12/109
CLEARS                                                                          #    13/109
DEFVAR LF@b                                                                     #    14/109
MOVE LF@b bool@false                                                            #    15/109
PUSHS bool@false                                                                #    16/109
POPS LF@b                                                                       #    17/109
CLEARS                                                                          #    18/109
DEFVAR LF@c                                                                     #    19/109
MOVE LF@c bool@false                                                            #    20/109
PUSHS bool@false                                                                #    21/109
POPS LF@c                                                                       #    22/109
CLEARS                                                                          #    23/109
# IF BLOCK                                                                      #    24/109
CREATEFRAME                                                                     #    25/109
# IF                                                                            #    26/109
PUSHS LF@b                                                                      #    27/109
PUSHS LF@c                                                                      #    28/109
ORS                                                                             #    29/109
PUSHS LF@a                                                                      #    30/109
ANDS                                                                            #    31/109
PUSHS bool@true                                                                 #    32/109
JUMPIFNEQS __INTERNAL__COND_0_END                                               #    33/109
# THEN                                                                          #    34/109
PUSHS int@1                                                                     #    35/109
DEFVAR TF@__INTERNAL__VAR_0                                                     #    36/109
POPS TF@__INTERNAL__VAR_0                                                       #    37/109
WRITE TF@__INTERNAL__VAR_0                                                      #    38/109
JUMP __INTERNAL__COND_0_BLOCK_END                                               #    39/109
LABEL __INTERNAL__COND_0_END                                                    #    40/109
# ELSE                                                                          #    41/109
PUSHS int@0                                                                     #    42/109
DEFVAR TF@__INTERNAL__VAR_0                                                     #    43/109
POPS TF@__INTERNAL__VAR_0                                                       #    44/109
WRITE TF@__INTERNAL__VAR_0                                                      #    45/109
# END IF                                                                        #    46/109
LABEL __INTERNAL__COND_0_BLOCK_END                                              #    47/109
CREATEFRAME                                                                     #    48/109
# END IF BLOCK                                                                  #    49/109
# IF BLOCK                                                                      #    50/109
CREATEFRAME                                                                     #    51/109
# IF                                                                            #    52/109
PUSHS LF@b                                                                      #    53/109
PUSHS LF@c                                                                      #    54/109
PUSHS LF@a                                                                      #    55/109
ANDS                                                                            #    56/109
ORS                                                                             #    57/109
PUSHS bool@true                                                                 #    58/109
JUMPIFNEQS __INTERNAL__COND_1_END                                               #    59/109
# THEN                                                                          #    60/109
PUSHS int@0                                                                     #    61/109
DEFVAR TF@__INTERNAL__VAR_0                                                     #    62/109
POPS TF@__INTERNAL__VAR_0                                                       #    63/109
WRITE TF@__INTERNAL__VAR_0                                                      #    64/109
JUMP __INTERNAL__COND_1_BLOCK_END                                               #    65/109
LABEL __INTERNAL__COND_1_END                                                    #    66/109
# ELSE                                                                          #    67/109
PUSHS int@1                                                                     #    68/109
DEFVAR TF@__INTERNAL__VAR_0                                                     #    69/109
POPS TF@__INTERNAL__VAR_0                                                       #    70/109
WRITE TF@__INTERNAL__VAR_0                                                      #    71/109
# END IF                                                                        #    72/109
LABEL __INTERNAL__COND_1_BLOCK_END                                              #    73/109
CREATEFRAME                                                                     #    74/109
# END IF BLOCK                                                                  #    75/109
# IF BLOCK                                                                      #    76/109
CREATEFRAME                                                                     #    77/109
# IF                                                                            #    78/109
PUSHS bool@false                                                                #    79/109
PUSHS bool@false                                                                #    80/109
PUSHS bool@false                                                                #    81/109
PUSHS bool@true                                                                 #    82/109
PUSHS bool@true                                                                 #    83/109
ORS                                                                             #    84/109
ORS                                                                             #    85/109
ANDS                                                                            #    86/109
ORS                                                                             #    87/109
PUSHS bool@true                                                                 #    88/109
JUMPIFNEQS __INTERNAL__COND_2_END                                               #    89/109
# THEN                                                                          #    90/109
PUSHS int@1                                                                     #    91/109
DEFVAR TF@__INTERNAL__VAR_0                                                     #    92/109
POPS TF@__INTERNAL__VAR_0                                                       #    93/109
WRITE TF@__INTERNAL__VAR_0                                                      #    94/109
JUMP __INTERNAL__COND_2_BLOCK_END                                               #    95/109
LABEL __INTERNAL__COND_2_END                                                    #    96/109
# ELSE                                                                          #    97/109
PUSHS int@0                                                                     #    98/109
DEFVAR TF@__INTERNAL__VAR_0                                                     #    99/109
POPS TF@__INTERNAL__VAR_0                                                       #   100/109
WRITE TF@__INTERNAL__VAR_0                                                      #   101/109
# END IF                                                                        #   102/109
LABEL __INTERNAL__COND_2_BLOCK_END                                              #   103/109
CREATEFRAME                                                                     #   104/109
# END IF BLOCK                                                                  #   105/109
JUMP __INTERNAL__FILE_END                                                       #   106/109
# PROGRAM END                                                                   #   108/109
LABEL __INTERNAL__FILE_END                                                      #   109/109