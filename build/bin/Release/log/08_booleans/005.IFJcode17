# 2017-12-04 14:49:26.256805
# SECTION: 08_booleans
# TEST: 005
# INFO: Single dim in expression
# REQUIRED EXTENSIONS: BOOLOP
# ACTIVATED EXTENSIONS: UNARY, IFTHEN, FUNEXP, BOOLOP
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IJUMP at line: 2 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: ICREATEFRAME at line: 6 with following arguments:
# Executing instruction: IPUSHFRAME at line: 7 with following arguments:
# Executing instruction: ICREATEFRAME at line: 8 with following arguments:
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 10 with following arguments:
# Arg1: Const@=false(bool)
# Dest: LF@a()
# Executing instruction: IPUSHS at line: 11 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 12 with following arguments:
# Arg1: Stack@=true(bool)
# Dest: LF@a=false(bool)
# Executing instruction: ICLEARS at line: 13 with following arguments:
# Executing instruction: ICREATEFRAME at line: 15 with following arguments:
# Executing instruction: IPUSHS at line: 17 with following arguments:
# Arg1: LF@a=true(bool)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 18 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 19 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 21 with following arguments:
# Arg1: Const@=42(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 22 with following arguments:
# Dest: TF@__INTERNAL__VAR_0
# Executing instruction: IPOPS at line: 23 with following arguments:
# Arg1: Stack@=42(int)
# Dest: TF@__INTERNAL__VAR_0()
# Executing instruction: IWRITE at line: 24 with following arguments:
# Arg1: TF@__INTERNAL__VAR_0=42(int)
# Executing instruction: IJUMP at line: 25 with following arguments:
# Executing instruction: ILABEL at line: 29 with following arguments:
# Executing instruction: ICREATEFRAME at line: 30 with following arguments:
# Executing instruction: IJUMP at line: 32 with following arguments:
# Executing instruction: ILABEL at line: 35 with following arguments:
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 68 (32+36)
# 
#   1: scope 
#   2:  dim a as boolean = true
#   3:  if a then 
#   4:  print 42; 
#   5:  else 
#   6:  end if
#   7:  end scope

########################################

.IFJcode17                                                                      #     1/35
JUMP main                                                                       #     2/35
# MAIN                                                                          #     4/35
LABEL main                                                                      #     5/35
CREATEFRAME                                                                     #     6/35
PUSHFRAME                                                                       #     7/35
CREATEFRAME                                                                     #     8/35
DEFVAR LF@a                                                                     #     9/35
MOVE LF@a bool@false                                                            #    10/35
PUSHS bool@true                                                                 #    11/35
POPS LF@a                                                                       #    12/35
CLEARS                                                                          #    13/35
# IF BLOCK                                                                      #    14/35
CREATEFRAME                                                                     #    15/35
# IF                                                                            #    16/35
PUSHS LF@a                                                                      #    17/35
PUSHS bool@true                                                                 #    18/35
JUMPIFNEQS __INTERNAL__COND_0_END                                               #    19/35
# THEN                                                                          #    20/35
PUSHS int@42                                                                    #    21/35
DEFVAR TF@__INTERNAL__VAR_0                                                     #    22/35
POPS TF@__INTERNAL__VAR_0                                                       #    23/35
WRITE TF@__INTERNAL__VAR_0                                                      #    24/35
JUMP __INTERNAL__COND_0_BLOCK_END                                               #    25/35
LABEL __INTERNAL__COND_0_END                                                    #    26/35
# ELSE                                                                          #    27/35
# END IF                                                                        #    28/35
LABEL __INTERNAL__COND_0_BLOCK_END                                              #    29/35
CREATEFRAME                                                                     #    30/35
# END IF BLOCK                                                                  #    31/35
JUMP __INTERNAL__FILE_END                                                       #    32/35
# PROGRAM END                                                                   #    34/35
LABEL __INTERNAL__FILE_END                                                      #    35/35