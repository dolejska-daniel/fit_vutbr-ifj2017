# 2017-12-04 17:23:10.028995
# SECTION: 02_functions
# TEST: 15
# INFO: Function call function which have input
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: BOOLOP, UNARY, IFTHEN, FUNEXP
# STATE: FAIL
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IJUMP at line: 2 with following arguments:
# Executing instruction: ILABEL at line: 35 with following arguments:
# Executing instruction: ICREATEFRAME at line: 36 with following arguments:
# Executing instruction: IPUSHFRAME at line: 37 with following arguments:
# Executing instruction: ICREATEFRAME at line: 38 with following arguments:
# Executing instruction: IDEFVAR at line: 39 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 40 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@a()
# Executing instruction: ICREATEFRAME at line: 41 with following arguments:
# Executing instruction: ICALL at line: 42 with following arguments:
# Executing instruction: ILABEL at line: 18 with following arguments:
# Executing instruction: IPUSHFRAME at line: 19 with following arguments:
# Executing instruction: ICREATEFRAME at line: 20 with following arguments:
# Executing instruction: IDEFVAR at line: 21 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 22 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@a()
# Executing instruction: ICREATEFRAME at line: 23 with following arguments:
# Executing instruction: ICALL at line: 24 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: IPUSHFRAME at line: 6 with following arguments:
# Executing instruction: ICREATEFRAME at line: 7 with following arguments:
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 9 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@a()
# Executing instruction: IREAD at line: 10 with following arguments:
# Dest: LF@a=0(int)
# Executing instruction: IPUSHS at line: 11 with following arguments:
# Arg1: LF@a=45(int)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 12 with following arguments:
# Executing instruction: IPOPFRAME at line: 25 with following arguments:
# Executing instruction: IPOPS at line: 26 with following arguments:
# Arg1: Stack@=45(int)
# Dest: LF@a=0(int)
# Executing instruction: ICLEARS at line: 27 with following arguments:
# Executing instruction: IPUSHS at line: 28 with following arguments:
# Arg1: LF@a=45(int)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 29 with following arguments:
# Executing instruction: IPOPFRAME at line: 43 with following arguments:
# Executing instruction: IPOPS at line: 44 with following arguments:
# Arg1: Stack@=45(int)
# Dest: LF@a=0(int)
# Executing instruction: ICLEARS at line: 45 with following arguments:
# Executing instruction: IPUSHS at line: 46 with following arguments:
# Arg1: LF@a=45(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 47 with following arguments:
# Dest: TF@__INTERNAL__VAR_0
# Executing instruction: IMOVE at line: 48 with following arguments:
# Arg1: Const@=0(int)
# Dest: TF@__INTERNAL__VAR_0()
# Executing instruction: IPOPS at line: 49 with following arguments:
# Arg1: Stack@=45(int)
# Dest: TF@__INTERNAL__VAR_0=0(int)
# Executing instruction: IWRITE at line: 50 with following arguments:
# Arg1: TF@__INTERNAL__VAR_0=45(int)
# Executing instruction: IJUMP at line: 51 with following arguments:
# Executing instruction: ILABEL at line: 56 with following arguments:
# 
# STDOUT DIFF:
# --- expected
# +++ actual
# @@ -1 +1 @@

# -?  45
# + 45

# INTERPRETER STDIN: 
#  45
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: ---
# 
#   1: ' Function call function which have input
#   2: 
#   3: function foo() as integer
#   4: 	dim a as integer
#   5: 	input a
#   6: 	return a
#   7: end function
#   8: 
#   9: function ghGHgh654655646() as integer
#  10: 	dim a as integer
#  11: 	a = foo()
#  12: 	return a
#  13: end function
#  14: 
#  15: scope
#  16: 	dim a as integer
#  17: 	a = ghGHgh654655646()
#  18: 	print a;
#  19: end scope

########################################

.IFJcode17                                                                      #     1/56
JUMP main                                                                       #     2/56
# FUNCTION                                                                      #     4/56
LABEL foo                                                                       #     5/56
PUSHFRAME                                                                       #     6/56
CREATEFRAME                                                                     #     7/56
DEFVAR LF@a                                                                     #     8/56
MOVE LF@a int@0                                                                 #     9/56
READ LF@a int                                                                   #    10/56
PUSHS LF@a                                                                      #    11/56
RETURN                                                                          #    12/56
PUSHS int@0                                                                     #    13/56
RETURN                                                                          #    14/56
# END FUNCTION                                                                  #    15/56
# FUNCTION                                                                      #    17/56
LABEL ghghgh654655646                                                           #    18/56
PUSHFRAME                                                                       #    19/56
CREATEFRAME                                                                     #    20/56
DEFVAR LF@a                                                                     #    21/56
MOVE LF@a int@0                                                                 #    22/56
CREATEFRAME                                                                     #    23/56
CALL foo                                                                        #    24/56
POPFRAME                                                                        #    25/56
POPS LF@a                                                                       #    26/56
CLEARS                                                                          #    27/56
PUSHS LF@a                                                                      #    28/56
RETURN                                                                          #    29/56
PUSHS int@0                                                                     #    30/56
RETURN                                                                          #    31/56
# END FUNCTION                                                                  #    32/56
# MAIN                                                                          #    34/56
LABEL main                                                                      #    35/56
CREATEFRAME                                                                     #    36/56
PUSHFRAME                                                                       #    37/56
CREATEFRAME                                                                     #    38/56
DEFVAR LF@a                                                                     #    39/56
MOVE LF@a int@0                                                                 #    40/56
CREATEFRAME                                                                     #    41/56
CALL ghghgh654655646                                                            #    42/56
POPFRAME                                                                        #    43/56
POPS LF@a                                                                       #    44/56
CLEARS                                                                          #    45/56
PUSHS LF@a                                                                      #    46/56
DEFVAR TF@__INTERNAL__VAR_0                                                     #    47/56
MOVE TF@__INTERNAL__VAR_0 int@0                                                 #    48/56
POPS TF@__INTERNAL__VAR_0                                                       #    49/56
WRITE TF@__INTERNAL__VAR_0                                                      #    50/56
JUMP __INTERNAL__FILE_END                                                       #    51/56
# MAIN END                                                                      #    53/56
# PROGRAM END                                                                   #    55/56
LABEL __INTERNAL__FILE_END                                                      #    56/56