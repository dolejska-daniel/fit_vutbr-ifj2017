# 2017-12-04 10:53:27.418772
# SECTION: 02_functions
# TEST: 13
# INFO: calling multiple functions
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: FUNEXP, UNARY, IFTHEN, BOOLOP
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IJUMP at line: 2 with following arguments:
# Executing instruction: ILABEL at line: 92 with following arguments:
# Executing instruction: ICREATEFRAME at line: 93 with following arguments:
# Executing instruction: IPUSHFRAME at line: 94 with following arguments:
# Executing instruction: ICREATEFRAME at line: 95 with following arguments:
# Executing instruction: IDEFVAR at line: 96 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 97 with following arguments:
# Arg1: Const@=0(double)
# Dest: LF@a()
# Executing instruction: ICREATEFRAME at line: 98 with following arguments:
# Executing instruction: ICALL at line: 99 with following arguments:
# Executing instruction: ILABEL at line: 51 with following arguments:
# Executing instruction: IPUSHFRAME at line: 52 with following arguments:
# Executing instruction: ICREATEFRAME at line: 53 with following arguments:
# Executing instruction: IDEFVAR at line: 54 with following arguments:
# Dest: LF@res
# Executing instruction: IMOVE at line: 55 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@res()
# Executing instruction: ICREATEFRAME at line: 56 with following arguments:
# Executing instruction: IPUSHS at line: 57 with following arguments:
# Arg1: Const@=30(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 58 with following arguments:
# Dest: TF@__acv
# Executing instruction: IPOPS at line: 59 with following arguments:
# Arg1: Stack@=30(int)
# Dest: TF@__acv()
# Executing instruction: IPUSHS at line: 60 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 61 with following arguments:
# Dest: TF@__foo__
# Executing instruction: IPOPS at line: 62 with following arguments:
# Arg1: Stack@=10(int)
# Dest: TF@__foo__()
# Executing instruction: ICALL at line: 63 with following arguments:
# Executing instruction: ILABEL at line: 22 with following arguments:
# Executing instruction: IPUSHFRAME at line: 23 with following arguments:
# Executing instruction: ICREATEFRAME at line: 24 with following arguments:
# Executing instruction: IDEFVAR at line: 25 with following arguments:
# Dest: LF@_
# Executing instruction: IMOVE at line: 26 with following arguments:
# Arg1: LF@__acv=30(int)
# Dest: LF@_()
# Executing instruction: IDEFVAR at line: 27 with following arguments:
# Dest: LF@__
# Executing instruction: IMOVE at line: 28 with following arguments:
# Arg1: LF@__foo__=10(int)
# Dest: LF@__()
# Executing instruction: IPUSHS at line: 29 with following arguments:
# Arg1: LF@_=30(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: LF@__=10(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 31 with following arguments:
# Arg1: Stack@=30(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 32 with following arguments:
# Executing instruction: IPOPFRAME at line: 64 with following arguments:
# Executing instruction: IPOPS at line: 65 with following arguments:
# Arg1: Stack@=300(int)
# Dest: LF@res=0(int)
# Executing instruction: ICLEARS at line: 66 with following arguments:
# Executing instruction: ICREATEFRAME at line: 67 with following arguments:
# Executing instruction: IPUSHS at line: 68 with following arguments:
# Arg1: LF@res=300(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 69 with following arguments:
# Dest: TF@_
# Executing instruction: IPOPS at line: 70 with following arguments:
# Arg1: Stack@=300(int)
# Dest: TF@_()
# Executing instruction: ICALL at line: 71 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: IPUSHFRAME at line: 6 with following arguments:
# Executing instruction: ICREATEFRAME at line: 7 with following arguments:
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: LF@res
# Executing instruction: IMOVE at line: 9 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@res()
# Executing instruction: IPUSHS at line: 10 with following arguments:
# Arg1: LF@_=300(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 11 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 12 with following arguments:
# Arg1: Stack@=300(int)
# Arg2: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 13 with following arguments:
# Arg1: Stack@=302(int)
# Dest: LF@res=0(int)
# Executing instruction: ICLEARS at line: 14 with following arguments:
# Executing instruction: IPUSHS at line: 15 with following arguments:
# Arg1: LF@res=302(int)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 16 with following arguments:
# Executing instruction: IPOPFRAME at line: 72 with following arguments:
# Executing instruction: IPOPS at line: 73 with following arguments:
# Arg1: Stack@=302(int)
# Dest: LF@res=300(int)
# Executing instruction: ICLEARS at line: 74 with following arguments:
# Executing instruction: ICREATEFRAME at line: 75 with following arguments:
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@res=302(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 77 with following arguments:
# Dest: TF@_______
# Executing instruction: IPOPS at line: 78 with following arguments:
# Arg1: Stack@=302(int)
# Dest: TF@_______()
# Executing instruction: ICALL at line: 79 with following arguments:
# Executing instruction: ILABEL at line: 38 with following arguments:
# Executing instruction: IPUSHFRAME at line: 39 with following arguments:
# Executing instruction: ICREATEFRAME at line: 40 with following arguments:
# Executing instruction: IPUSHS at line: 41 with following arguments:
# Arg1: LF@_______=302(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 42 with following arguments:
# Arg1: Stack@=302(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 43 with following arguments:
# Arg1: Const@=0.5(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 44 with following arguments:
# Arg1: Stack@=302(double)
# Arg2: Stack@=0.5(double)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 45 with following arguments:
# Executing instruction: IPOPFRAME at line: 80 with following arguments:
# Executing instruction: IFLOAT2INTS at line: 81 with following arguments:
# Arg1: Stack@=151(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 82 with following arguments:
# Arg1: Stack@=151(int)
# Dest: LF@res=302(int)
# Executing instruction: ICLEARS at line: 83 with following arguments:
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@res=151(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=151(int)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 86 with following arguments:
# Executing instruction: IPOPFRAME at line: 100 with following arguments:
# Executing instruction: IPOPS at line: 101 with following arguments:
# Arg1: Stack@=151(double)
# Dest: LF@a=0(double)
# Executing instruction: ICLEARS at line: 102 with following arguments:
# Executing instruction: IPUSHS at line: 103 with following arguments:
# Arg1: LF@a=151(double)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 104 with following arguments:
# Dest: TF@__INTERNAL__VAR_0
# Executing instruction: IPOPS at line: 105 with following arguments:
# Arg1: Stack@=151(double)
# Dest: TF@__INTERNAL__VAR_0()
# Executing instruction: IWRITE at line: 106 with following arguments:
# Arg1: TF@__INTERNAL__VAR_0=151(double)
# Executing instruction: IJUMP at line: 107 with following arguments:
# Executing instruction: ILABEL at line: 110 with following arguments:
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 317 (146+171)
# 
#   1: ' calling multiple functions
#   2: 
#   3: function _add_two(_ as integer) as integer
#   4: 	dim res as integer
#   5: 	res = _ + 2
#   6: 	return res
#   7: end function
#   8: 
#   9: declare function _multiply(__acv as integer, __foo__ as integer) as integer
#  10: 
#  11: function _multiply(_ as integer, __ as integer) as integer
#  12: 
#  13: 	return _ * __
#  14: end function
#  15: 
#  16: function ____(_______ as integer) as double
#  17: 	return _______ * 0.5
#  18: end function
#  19: 
#  20: function __compute() as double
#  21: 	dim res as integer
#  22: 	res = _multiply(30, 10)
#  23: 	res = _add_two(res)
#  24: 	res = ____(res)
#  25: 	return res
#  26: end function
#  27: 
#  28: 
#  29: 
#  30: scope
#  31: 	dim a as double
#  32: 	a = __compute()
#  33: 	print a;
#  34: end scope

########################################

.IFJcode17                                                                      #     1/110
JUMP main                                                                       #     2/110
# FUNCTION                                                                      #     4/110
LABEL _add_two                                                                  #     5/110
PUSHFRAME                                                                       #     6/110
CREATEFRAME                                                                     #     7/110
DEFVAR LF@res                                                                   #     8/110
MOVE LF@res int@0                                                               #     9/110
PUSHS LF@_                                                                      #    10/110
PUSHS int@2                                                                     #    11/110
ADDS                                                                            #    12/110
POPS LF@res                                                                     #    13/110
CLEARS                                                                          #    14/110
PUSHS LF@res                                                                    #    15/110
RETURN                                                                          #    16/110
PUSHS int@0                                                                     #    17/110
RETURN                                                                          #    18/110
# END FUNCTION                                                                  #    19/110
# FUNCTION                                                                      #    21/110
LABEL _multiply                                                                 #    22/110
PUSHFRAME                                                                       #    23/110
CREATEFRAME                                                                     #    24/110
DEFVAR LF@_                                                                     #    25/110
MOVE LF@_ LF@__acv                                                              #    26/110
DEFVAR LF@__                                                                    #    27/110
MOVE LF@__ LF@__foo__                                                           #    28/110
PUSHS LF@_                                                                      #    29/110
PUSHS LF@__                                                                     #    30/110
MULS                                                                            #    31/110
RETURN                                                                          #    32/110
PUSHS int@0                                                                     #    33/110
RETURN                                                                          #    34/110
# END FUNCTION                                                                  #    35/110
# FUNCTION                                                                      #    37/110
LABEL ____                                                                      #    38/110
PUSHFRAME                                                                       #    39/110
CREATEFRAME                                                                     #    40/110
PUSHS LF@_______                                                                #    41/110
INT2FLOATS                                                                      #    42/110
PUSHS float@0.5                                                                 #    43/110
MULS                                                                            #    44/110
RETURN                                                                          #    45/110
PUSHS float@0.0                                                                 #    46/110
RETURN                                                                          #    47/110
# END FUNCTION                                                                  #    48/110
# FUNCTION                                                                      #    50/110
LABEL __compute                                                                 #    51/110
PUSHFRAME                                                                       #    52/110
CREATEFRAME                                                                     #    53/110
DEFVAR LF@res                                                                   #    54/110
MOVE LF@res int@0                                                               #    55/110
CREATEFRAME                                                                     #    56/110
PUSHS int@30                                                                    #    57/110
DEFVAR TF@__acv                                                                 #    58/110
POPS TF@__acv                                                                   #    59/110
PUSHS int@10                                                                    #    60/110
DEFVAR TF@__foo__                                                               #    61/110
POPS TF@__foo__                                                                 #    62/110
CALL _multiply                                                                  #    63/110
POPFRAME                                                                        #    64/110
POPS LF@res                                                                     #    65/110
CLEARS                                                                          #    66/110
CREATEFRAME                                                                     #    67/110
PUSHS LF@res                                                                    #    68/110
DEFVAR TF@_                                                                     #    69/110
POPS TF@_                                                                       #    70/110
CALL _add_two                                                                   #    71/110
POPFRAME                                                                        #    72/110
POPS LF@res                                                                     #    73/110
CLEARS                                                                          #    74/110
CREATEFRAME                                                                     #    75/110
PUSHS LF@res                                                                    #    76/110
DEFVAR TF@_______                                                               #    77/110
POPS TF@_______                                                                 #    78/110
CALL ____                                                                       #    79/110
POPFRAME                                                                        #    80/110
FLOAT2INTS                                                                      #    81/110
POPS LF@res                                                                     #    82/110
CLEARS                                                                          #    83/110
PUSHS LF@res                                                                    #    84/110
INT2FLOATS                                                                      #    85/110
RETURN                                                                          #    86/110
PUSHS float@0.0                                                                 #    87/110
RETURN                                                                          #    88/110
# END FUNCTION                                                                  #    89/110
# MAIN                                                                          #    91/110
LABEL main                                                                      #    92/110
CREATEFRAME                                                                     #    93/110
PUSHFRAME                                                                       #    94/110
CREATEFRAME                                                                     #    95/110
DEFVAR LF@a                                                                     #    96/110
MOVE LF@a float@0.0                                                             #    97/110
CREATEFRAME                                                                     #    98/110
CALL __compute                                                                  #    99/110
POPFRAME                                                                        #   100/110
POPS LF@a                                                                       #   101/110
CLEARS                                                                          #   102/110
PUSHS LF@a                                                                      #   103/110
DEFVAR TF@__INTERNAL__VAR_0                                                     #   104/110
POPS TF@__INTERNAL__VAR_0                                                       #   105/110
WRITE TF@__INTERNAL__VAR_0                                                      #   106/110
JUMP __INTERNAL__FILE_END                                                       #   107/110
# PROGRAM END                                                                   #   109/110
LABEL __INTERNAL__FILE_END                                                      #   110/110