# 2017-12-04 17:23:09.951790
# SECTION: 02_functions
# TEST: 13
# INFO: calling multiple functions
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: BOOLOP, UNARY, IFTHEN, FUNEXP
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IJUMP at line: 2 with following arguments:
# Executing instruction: ILABEL at line: 92 with following arguments:
# Executing instruction: ICREATEFRAME at line: 93 with following arguments:
# Executing instruction: IPUSHFRAME at line: 94 with following arguments:
# Executing instruction: ICREATEFRAME at line: 95 with following arguments:
# Executing instruction: IDEFVAR at line: 96 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 97 with following arguments:
# Arg1: Const@=0(double)
# Dest: LF@a()
# Executing instruction: ICREATEFRAME at line: 98 with following arguments:
# Executing instruction: ICALL at line: 99 with following arguments:
# Executing instruction: ILABEL at line: 51 with following arguments:
# Executing instruction: IPUSHFRAME at line: 52 with following arguments:
# Executing instruction: ICREATEFRAME at line: 53 with following arguments:
# Executing instruction: IDEFVAR at line: 54 with following arguments:
# Dest: LF@res
# Executing instruction: IMOVE at line: 55 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@res()
# Executing instruction: ICREATEFRAME at line: 56 with following arguments:
# Executing instruction: IPUSHS at line: 57 with following arguments:
# Arg1: Const@=30(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 58 with following arguments:
# Dest: TF@__acv
# Executing instruction: IPOPS at line: 59 with following arguments:
# Arg1: Stack@=30(int)
# Dest: TF@__acv()
# Executing instruction: IPUSHS at line: 60 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 61 with following arguments:
# Dest: TF@__foo__
# Executing instruction: IPOPS at line: 62 with following arguments:
# Arg1: Stack@=10(int)
# Dest: TF@__foo__()
# Executing instruction: ICALL at line: 63 with following arguments:
# Executing instruction: ILABEL at line: 22 with following arguments:
# Executing instruction: IPUSHFRAME at line: 23 with following arguments:
# Executing instruction: ICREATEFRAME at line: 24 with following arguments:
# Executing instruction: IDEFVAR at line: 25 with following arguments:
# Dest: LF@_
# Executing instruction: IMOVE at line: 26 with following arguments:
# Arg1: LF@__acv=30(int)
# Dest: LF@_()
# Executing instruction: IDEFVAR at line: 27 with following arguments:
# Dest: LF@__
# Executing instruction: IMOVE at line: 28 with following arguments:
# Arg1: LF@__foo__=10(int)
# Dest: LF@__()
# Executing instruction: IPUSHS at line: 29 with following arguments:
# Arg1: LF@_=30(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: LF@__=10(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 31 with following arguments:
# Arg1: Stack@=30(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 32 with following arguments:
# Executing instruction: IPOPFRAME at line: 64 with following arguments:
# Executing instruction: IPOPS at line: 65 with following arguments:
# Arg1: Stack@=300(int)
# Dest: LF@res=0(int)
# Executing instruction: ICLEARS at line: 66 with following arguments:
# Executing instruction: ICREATEFRAME at line: 67 with following arguments:
# Executing instruction: IPUSHS at line: 68 with following arguments:
# Arg1: LF@res=300(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 69 with following arguments:
# Dest: TF@_
# Executing instruction: IPOPS at line: 70 with following arguments:
# Arg1: Stack@=300(int)
# Dest: TF@_()
# Executing instruction: ICALL at line: 71 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: IPUSHFRAME at line: 6 with following arguments:
# Executing instruction: ICREATEFRAME at line: 7 with following arguments:
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: LF@res
# Executing instruction: IMOVE at line: 9 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@res()
# Executing instruction: IPUSHS at line: 10 with following arguments:
# Arg1: LF@_=300(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 11 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 12 with following arguments:
# Arg1: Stack@=300(int)
# Arg2: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 13 with following arguments:
# Arg1: Stack@=302(int)
# Dest: LF@res=0(int)
# Executing instruction: ICLEARS at line: 14 with following arguments:
# Executing instruction: IPUSHS at line: 15 with following arguments:
# Arg1: LF@res=302(int)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 16 with following arguments:
# Executing instruction: IPOPFRAME at line: 72 with following arguments:
# Executing instruction: IPOPS at line: 73 with following arguments:
# Arg1: Stack@=302(int)
# Dest: LF@res=300(int)
# Executing instruction: ICLEARS at line: 74 with following arguments:
# Executing instruction: ICREATEFRAME at line: 75 with following arguments:
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@res=302(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 77 with following arguments:
# Dest: TF@_______
# Executing instruction: IPOPS at line: 78 with following arguments:
# Arg1: Stack@=302(int)
# Dest: TF@_______()
# Executing instruction: ICALL at line: 79 with following arguments:
# Executing instruction: ILABEL at line: 38 with following arguments:
# Executing instruction: IPUSHFRAME at line: 39 with following arguments:
# Executing instruction: ICREATEFRAME at line: 40 with following arguments:
# Executing instruction: IPUSHS at line: 41 with following arguments:
# Arg1: LF@_______=302(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 42 with following arguments:
# Arg1: Stack@=302(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 43 with following arguments:
# Arg1: Const@=0.5(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 44 with following arguments:
# Arg1: Stack@=302(double)
# Arg2: Stack@=0.5(double)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 45 with following arguments:
# Executing instruction: IPOPFRAME at line: 80 with following arguments:
# Executing instruction: IFLOAT2INTS at line: 81 with following arguments:
# Arg1: Stack@=151(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 82 with following arguments:
# Arg1: Stack@=151(int)
# Dest: LF@res=302(int)
# Executing instruction: ICLEARS at line: 83 with following arguments:
# Executing instruction: IPUSHS at line: 84 with following arguments:
# Arg1: LF@res=151(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 85 with following arguments:
# Arg1: Stack@=151(int)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 86 with following arguments:
# Executing instruction: IPOPFRAME at line: 100 with following arguments:
# Executing instruction: IPOPS at line: 101 with following arguments:
# Arg1: Stack@=151(double)
# Dest: LF@a=0(double)
# Executing instruction: ICLEARS at line: 102 with following arguments:
# Executing instruction: IPUSHS at line: 103 with following arguments:
# Arg1: LF@a=151(double)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 104 with following arguments:
# Dest: TF@__INTERNAL__VAR_0
# Executing instruction: IMOVE at line: 105 with following arguments:
# Arg1: Const@=0(double)
# Dest: TF@__INTERNAL__VAR_0()
# Executing instruction: IPOPS at line: 106 with following arguments:
# Arg1: Stack@=151(double)
# Dest: TF@__INTERNAL__VAR_0=0(double)
# Executing instruction: IWRITE at line: 107 with following arguments:
# Arg1: TF@__INTERNAL__VAR_0=151(double)
# Executing instruction: IJUMP at line: 108 with following arguments:
# Executing instruction: ILABEL at line: 113 with following arguments:
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 319 (147+172)
# 
#   1: ' calling multiple functions
#   2: 
#   3: function _add_two(_ as integer) as integer
#   4: 	dim res as integer
#   5: 	res = _ + 2
#   6: 	return res
#   7: end function
#   8: 
#   9: declare function _multiply(__acv as integer, __foo__ as integer) as integer
#  10: 
#  11: function _multiply(_ as integer, __ as integer) as integer
#  12: 
#  13: 	return _ * __
#  14: end function
#  15: 
#  16: function ____(_______ as integer) as double
#  17: 	return _______ * 0.5
#  18: end function
#  19: 
#  20: function __compute() as double
#  21: 	dim res as integer
#  22: 	res = _multiply(30, 10)
#  23: 	res = _add_two(res)
#  24: 	res = ____(res)
#  25: 	return res
#  26: end function
#  27: 
#  28: 
#  29: 
#  30: scope
#  31: 	dim a as double
#  32: 	a = __compute()
#  33: 	print a;
#  34: end scope

########################################

.IFJcode17                                                                      #     1/113
JUMP main                                                                       #     2/113
# FUNCTION                                                                      #     4/113
LABEL _add_two                                                                  #     5/113
PUSHFRAME                                                                       #     6/113
CREATEFRAME                                                                     #     7/113
DEFVAR LF@res                                                                   #     8/113
MOVE LF@res int@0                                                               #     9/113
PUSHS LF@_                                                                      #    10/113
PUSHS int@2                                                                     #    11/113
ADDS                                                                            #    12/113
POPS LF@res                                                                     #    13/113
CLEARS                                                                          #    14/113
PUSHS LF@res                                                                    #    15/113
RETURN                                                                          #    16/113
PUSHS int@0                                                                     #    17/113
RETURN                                                                          #    18/113
# END FUNCTION                                                                  #    19/113
# FUNCTION                                                                      #    21/113
LABEL _multiply                                                                 #    22/113
PUSHFRAME                                                                       #    23/113
CREATEFRAME                                                                     #    24/113
DEFVAR LF@_                                                                     #    25/113
MOVE LF@_ LF@__acv                                                              #    26/113
DEFVAR LF@__                                                                    #    27/113
MOVE LF@__ LF@__foo__                                                           #    28/113
PUSHS LF@_                                                                      #    29/113
PUSHS LF@__                                                                     #    30/113
MULS                                                                            #    31/113
RETURN                                                                          #    32/113
PUSHS int@0                                                                     #    33/113
RETURN                                                                          #    34/113
# END FUNCTION                                                                  #    35/113
# FUNCTION                                                                      #    37/113
LABEL ____                                                                      #    38/113
PUSHFRAME                                                                       #    39/113
CREATEFRAME                                                                     #    40/113
PUSHS LF@_______                                                                #    41/113
INT2FLOATS                                                                      #    42/113
PUSHS float@0.5                                                                 #    43/113
MULS                                                                            #    44/113
RETURN                                                                          #    45/113
PUSHS float@0.0                                                                 #    46/113
RETURN                                                                          #    47/113
# END FUNCTION                                                                  #    48/113
# FUNCTION                                                                      #    50/113
LABEL __compute                                                                 #    51/113
PUSHFRAME                                                                       #    52/113
CREATEFRAME                                                                     #    53/113
DEFVAR LF@res                                                                   #    54/113
MOVE LF@res int@0                                                               #    55/113
CREATEFRAME                                                                     #    56/113
PUSHS int@30                                                                    #    57/113
DEFVAR TF@__acv                                                                 #    58/113
POPS TF@__acv                                                                   #    59/113
PUSHS int@10                                                                    #    60/113
DEFVAR TF@__foo__                                                               #    61/113
POPS TF@__foo__                                                                 #    62/113
CALL _multiply                                                                  #    63/113
POPFRAME                                                                        #    64/113
POPS LF@res                                                                     #    65/113
CLEARS                                                                          #    66/113
CREATEFRAME                                                                     #    67/113
PUSHS LF@res                                                                    #    68/113
DEFVAR TF@_                                                                     #    69/113
POPS TF@_                                                                       #    70/113
CALL _add_two                                                                   #    71/113
POPFRAME                                                                        #    72/113
POPS LF@res                                                                     #    73/113
CLEARS                                                                          #    74/113
CREATEFRAME                                                                     #    75/113
PUSHS LF@res                                                                    #    76/113
DEFVAR TF@_______                                                               #    77/113
POPS TF@_______                                                                 #    78/113
CALL ____                                                                       #    79/113
POPFRAME                                                                        #    80/113
FLOAT2INTS                                                                      #    81/113
POPS LF@res                                                                     #    82/113
CLEARS                                                                          #    83/113
PUSHS LF@res                                                                    #    84/113
INT2FLOATS                                                                      #    85/113
RETURN                                                                          #    86/113
PUSHS float@0.0                                                                 #    87/113
RETURN                                                                          #    88/113
# END FUNCTION                                                                  #    89/113
# MAIN                                                                          #    91/113
LABEL main                                                                      #    92/113
CREATEFRAME                                                                     #    93/113
PUSHFRAME                                                                       #    94/113
CREATEFRAME                                                                     #    95/113
DEFVAR LF@a                                                                     #    96/113
MOVE LF@a float@0.0                                                             #    97/113
CREATEFRAME                                                                     #    98/113
CALL __compute                                                                  #    99/113
POPFRAME                                                                        #   100/113
POPS LF@a                                                                       #   101/113
CLEARS                                                                          #   102/113
PUSHS LF@a                                                                      #   103/113
DEFVAR TF@__INTERNAL__VAR_0                                                     #   104/113
MOVE TF@__INTERNAL__VAR_0 float@0.0                                             #   105/113
POPS TF@__INTERNAL__VAR_0                                                       #   106/113
WRITE TF@__INTERNAL__VAR_0                                                      #   107/113
JUMP __INTERNAL__FILE_END                                                       #   108/113
# MAIN END                                                                      #   110/113
# PROGRAM END                                                                   #   112/113
LABEL __INTERNAL__FILE_END                                                      #   113/113