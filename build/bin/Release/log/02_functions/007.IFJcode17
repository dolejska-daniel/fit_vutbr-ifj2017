# 2017-12-04 14:49:23.107932
# SECTION: 02_functions
# TEST: 007
# INFO: function double implicit return
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: UNARY, IFTHEN, FUNEXP, BOOLOP
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IJUMP at line: 2 with following arguments:
# Executing instruction: ILABEL at line: 13 with following arguments:
# Executing instruction: ICREATEFRAME at line: 14 with following arguments:
# Executing instruction: IPUSHFRAME at line: 15 with following arguments:
# Executing instruction: ICREATEFRAME at line: 16 with following arguments:
# Executing instruction: IDEFVAR at line: 17 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 18 with following arguments:
# Arg1: Const@=0(double)
# Dest: LF@a()
# Executing instruction: ICREATEFRAME at line: 19 with following arguments:
# Executing instruction: ICALL at line: 20 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: IPUSHFRAME at line: 6 with following arguments:
# Executing instruction: ICREATEFRAME at line: 7 with following arguments:
# Executing instruction: IPUSHS at line: 8 with following arguments:
# Arg1: Const@=0(double)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 9 with following arguments:
# Executing instruction: IPOPFRAME at line: 21 with following arguments:
# Executing instruction: IPOPS at line: 22 with following arguments:
# Arg1: Stack@=0(double)
# Dest: LF@a=0(double)
# Executing instruction: ICLEARS at line: 23 with following arguments:
# Executing instruction: IPUSHS at line: 24 with following arguments:
# Arg1: LF@a=0(double)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 25 with following arguments:
# Dest: TF@__INTERNAL__VAR_0
# Executing instruction: IPOPS at line: 26 with following arguments:
# Arg1: Stack@=0(double)
# Dest: TF@__INTERNAL__VAR_0()
# Executing instruction: IWRITE at line: 27 with following arguments:
# Arg1: TF@__INTERNAL__VAR_0=0(double)
# Executing instruction: IJUMP at line: 28 with following arguments:
# Executing instruction: ILABEL at line: 31 with following arguments:
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 67 (41+26)
# 
#   1: function foo() as double 
#   2:  end function 
#   3:  scope 
#   4:  dim a as double 
#   5:  a = foo() 
#   6:  print a; 
#   7:  end scope

########################################

.IFJcode17                                                                      #     1/31
JUMP main                                                                       #     2/31
# FUNCTION                                                                      #     4/31
LABEL foo                                                                       #     5/31
PUSHFRAME                                                                       #     6/31
CREATEFRAME                                                                     #     7/31
PUSHS float@0.0                                                                 #     8/31
RETURN                                                                          #     9/31
# END FUNCTION                                                                  #    10/31
# MAIN                                                                          #    12/31
LABEL main                                                                      #    13/31
CREATEFRAME                                                                     #    14/31
PUSHFRAME                                                                       #    15/31
CREATEFRAME                                                                     #    16/31
DEFVAR LF@a                                                                     #    17/31
MOVE LF@a float@0.0                                                             #    18/31
CREATEFRAME                                                                     #    19/31
CALL foo                                                                        #    20/31
POPFRAME                                                                        #    21/31
POPS LF@a                                                                       #    22/31
CLEARS                                                                          #    23/31
PUSHS LF@a                                                                      #    24/31
DEFVAR TF@__INTERNAL__VAR_0                                                     #    25/31
POPS TF@__INTERNAL__VAR_0                                                       #    26/31
WRITE TF@__INTERNAL__VAR_0                                                      #    27/31
JUMP __INTERNAL__FILE_END                                                       #    28/31
# PROGRAM END                                                                   #    30/31
LABEL __INTERNAL__FILE_END                                                      #    31/31