# 2017-12-04 14:49:22.846236
# SECTION: 02_functions
# TEST: 21
# INFO: Recursion of three functions
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: UNARY, IFTHEN, FUNEXP, BOOLOP
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IJUMP at line: 2 with following arguments:
# Executing instruction: ILABEL at line: 139 with following arguments:
# Executing instruction: ICREATEFRAME at line: 140 with following arguments:
# Executing instruction: IPUSHFRAME at line: 141 with following arguments:
# Executing instruction: ICREATEFRAME at line: 142 with following arguments:
# Executing instruction: IDEFVAR at line: 143 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 144 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@a()
# Executing instruction: ICREATEFRAME at line: 145 with following arguments:
# Executing instruction: IPUSHS at line: 146 with following arguments:
# Arg1: Const@=20(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 147 with following arguments:
# Dest: TF@a
# Executing instruction: IPOPS at line: 148 with following arguments:
# Arg1: Stack@=20(int)
# Dest: TF@a()
# Executing instruction: ICALL at line: 149 with following arguments:
# Executing instruction: ILABEL at line: 93 with following arguments:
# Executing instruction: IPUSHFRAME at line: 94 with following arguments:
# Executing instruction: ICREATEFRAME at line: 95 with following arguments:
# Executing instruction: IDEFVAR at line: 96 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 97 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: ICREATEFRAME at line: 99 with following arguments:
# Executing instruction: IPUSHS at line: 101 with following arguments:
# Arg1: LF@a=20(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 102 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 103 with following arguments:
# Arg1: Stack@=20(int)
# Arg2: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 104 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 105 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ICREATEFRAME at line: 107 with following arguments:
# Executing instruction: IPUSHS at line: 108 with following arguments:
# Arg1: LF@a=20(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 109 with following arguments:
# Dest: TF@a
# Executing instruction: IPOPS at line: 110 with following arguments:
# Arg1: Stack@=20(int)
# Dest: TF@a()
# Executing instruction: ICALL at line: 111 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: IPUSHFRAME at line: 6 with following arguments:
# Executing instruction: ICREATEFRAME at line: 7 with following arguments:
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 9 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: ICREATEFRAME at line: 11 with following arguments:
# Executing instruction: IPUSHS at line: 13 with following arguments:
# Arg1: LF@a=20(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 14 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 15 with following arguments:
# Arg1: Stack@=20(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 16 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 17 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 22 with following arguments:
# Executing instruction: IPUSHS at line: 24 with following arguments:
# Arg1: LF@a=20(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 25 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 26 with following arguments:
# Arg1: Stack@=20(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 27 with following arguments:
# Arg1: Stack@=19(int)
# Dest: LF@b=0(int)
# Executing instruction: ICLEARS at line: 28 with following arguments:
# Executing instruction: ICREATEFRAME at line: 29 with following arguments:
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: LF@b=19(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 31 with following arguments:
# Dest: TF@nn
# Executing instruction: IPOPS at line: 32 with following arguments:
# Arg1: Stack@=19(int)
# Dest: TF@nn()
# Executing instruction: ICALL at line: 33 with following arguments:
# Executing instruction: ILABEL at line: 48 with following arguments:
# Executing instruction: IPUSHFRAME at line: 49 with following arguments:
# Executing instruction: ICREATEFRAME at line: 50 with following arguments:
# Executing instruction: IDEFVAR at line: 51 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 52 with following arguments:
# Arg1: LF@nn=19(int)
# Dest: LF@a()
# Executing instruction: IDEFVAR at line: 53 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 54 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: ICREATEFRAME at line: 56 with following arguments:
# Executing instruction: IPUSHS at line: 58 with following arguments:
# Arg1: LF@a=19(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 59 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 60 with following arguments:
# Arg1: Stack@=19(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 61 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 62 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 67 with following arguments:
# Executing instruction: IPUSHS at line: 69 with following arguments:
# Arg1: LF@a=19(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 70 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 71 with following arguments:
# Arg1: Stack@=19(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 72 with following arguments:
# Arg1: Stack@=18(int)
# Dest: LF@b=0(int)
# Executing instruction: ICLEARS at line: 73 with following arguments:
# Executing instruction: ICREATEFRAME at line: 74 with following arguments:
# Executing instruction: IPUSHS at line: 75 with following arguments:
# Arg1: LF@b=18(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 76 with following arguments:
# Dest: TF@a
# Executing instruction: IPOPS at line: 77 with following arguments:
# Arg1: Stack@=18(int)
# Dest: TF@a()
# Executing instruction: ICALL at line: 78 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: IPUSHFRAME at line: 6 with following arguments:
# Executing instruction: ICREATEFRAME at line: 7 with following arguments:
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 9 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: ICREATEFRAME at line: 11 with following arguments:
# Executing instruction: IPUSHS at line: 13 with following arguments:
# Arg1: LF@a=18(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 14 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 15 with following arguments:
# Arg1: Stack@=18(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 16 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 17 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 22 with following arguments:
# Executing instruction: IPUSHS at line: 24 with following arguments:
# Arg1: LF@a=18(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 25 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 26 with following arguments:
# Arg1: Stack@=18(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 27 with following arguments:
# Arg1: Stack@=17(int)
# Dest: LF@b=0(int)
# Executing instruction: ICLEARS at line: 28 with following arguments:
# Executing instruction: ICREATEFRAME at line: 29 with following arguments:
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: LF@b=17(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 31 with following arguments:
# Dest: TF@nn
# Executing instruction: IPOPS at line: 32 with following arguments:
# Arg1: Stack@=17(int)
# Dest: TF@nn()
# Executing instruction: ICALL at line: 33 with following arguments:
# Executing instruction: ILABEL at line: 48 with following arguments:
# Executing instruction: IPUSHFRAME at line: 49 with following arguments:
# Executing instruction: ICREATEFRAME at line: 50 with following arguments:
# Executing instruction: IDEFVAR at line: 51 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 52 with following arguments:
# Arg1: LF@nn=17(int)
# Dest: LF@a()
# Executing instruction: IDEFVAR at line: 53 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 54 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: ICREATEFRAME at line: 56 with following arguments:
# Executing instruction: IPUSHS at line: 58 with following arguments:
# Arg1: LF@a=17(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 59 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 60 with following arguments:
# Arg1: Stack@=17(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 61 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 62 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 67 with following arguments:
# Executing instruction: IPUSHS at line: 69 with following arguments:
# Arg1: LF@a=17(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 70 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 71 with following arguments:
# Arg1: Stack@=17(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 72 with following arguments:
# Arg1: Stack@=16(int)
# Dest: LF@b=0(int)
# Executing instruction: ICLEARS at line: 73 with following arguments:
# Executing instruction: ICREATEFRAME at line: 74 with following arguments:
# Executing instruction: IPUSHS at line: 75 with following arguments:
# Arg1: LF@b=16(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 76 with following arguments:
# Dest: TF@a
# Executing instruction: IPOPS at line: 77 with following arguments:
# Arg1: Stack@=16(int)
# Dest: TF@a()
# Executing instruction: ICALL at line: 78 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: IPUSHFRAME at line: 6 with following arguments:
# Executing instruction: ICREATEFRAME at line: 7 with following arguments:
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 9 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: ICREATEFRAME at line: 11 with following arguments:
# Executing instruction: IPUSHS at line: 13 with following arguments:
# Arg1: LF@a=16(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 14 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 15 with following arguments:
# Arg1: Stack@=16(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 16 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 17 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 22 with following arguments:
# Executing instruction: IPUSHS at line: 24 with following arguments:
# Arg1: LF@a=16(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 25 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 26 with following arguments:
# Arg1: Stack@=16(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 27 with following arguments:
# Arg1: Stack@=15(int)
# Dest: LF@b=0(int)
# Executing instruction: ICLEARS at line: 28 with following arguments:
# Executing instruction: ICREATEFRAME at line: 29 with following arguments:
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: LF@b=15(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 31 with following arguments:
# Dest: TF@nn
# Executing instruction: IPOPS at line: 32 with following arguments:
# Arg1: Stack@=15(int)
# Dest: TF@nn()
# Executing instruction: ICALL at line: 33 with following arguments:
# Executing instruction: ILABEL at line: 48 with following arguments:
# Executing instruction: IPUSHFRAME at line: 49 with following arguments:
# Executing instruction: ICREATEFRAME at line: 50 with following arguments:
# Executing instruction: IDEFVAR at line: 51 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 52 with following arguments:
# Arg1: LF@nn=15(int)
# Dest: LF@a()
# Executing instruction: IDEFVAR at line: 53 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 54 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: ICREATEFRAME at line: 56 with following arguments:
# Executing instruction: IPUSHS at line: 58 with following arguments:
# Arg1: LF@a=15(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 59 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 60 with following arguments:
# Arg1: Stack@=15(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 61 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 62 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 67 with following arguments:
# Executing instruction: IPUSHS at line: 69 with following arguments:
# Arg1: LF@a=15(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 70 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 71 with following arguments:
# Arg1: Stack@=15(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 72 with following arguments:
# Arg1: Stack@=14(int)
# Dest: LF@b=0(int)
# Executing instruction: ICLEARS at line: 73 with following arguments:
# Executing instruction: ICREATEFRAME at line: 74 with following arguments:
# Executing instruction: IPUSHS at line: 75 with following arguments:
# Arg1: LF@b=14(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 76 with following arguments:
# Dest: TF@a
# Executing instruction: IPOPS at line: 77 with following arguments:
# Arg1: Stack@=14(int)
# Dest: TF@a()
# Executing instruction: ICALL at line: 78 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: IPUSHFRAME at line: 6 with following arguments:
# Executing instruction: ICREATEFRAME at line: 7 with following arguments:
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 9 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: ICREATEFRAME at line: 11 with following arguments:
# Executing instruction: IPUSHS at line: 13 with following arguments:
# Arg1: LF@a=14(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 14 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 15 with following arguments:
# Arg1: Stack@=14(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 16 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 17 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 22 with following arguments:
# Executing instruction: IPUSHS at line: 24 with following arguments:
# Arg1: LF@a=14(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 25 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 26 with following arguments:
# Arg1: Stack@=14(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 27 with following arguments:
# Arg1: Stack@=13(int)
# Dest: LF@b=0(int)
# Executing instruction: ICLEARS at line: 28 with following arguments:
# Executing instruction: ICREATEFRAME at line: 29 with following arguments:
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: LF@b=13(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 31 with following arguments:
# Dest: TF@nn
# Executing instruction: IPOPS at line: 32 with following arguments:
# Arg1: Stack@=13(int)
# Dest: TF@nn()
# Executing instruction: ICALL at line: 33 with following arguments:
# Executing instruction: ILABEL at line: 48 with following arguments:
# Executing instruction: IPUSHFRAME at line: 49 with following arguments:
# Executing instruction: ICREATEFRAME at line: 50 with following arguments:
# Executing instruction: IDEFVAR at line: 51 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 52 with following arguments:
# Arg1: LF@nn=13(int)
# Dest: LF@a()
# Executing instruction: IDEFVAR at line: 53 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 54 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: ICREATEFRAME at line: 56 with following arguments:
# Executing instruction: IPUSHS at line: 58 with following arguments:
# Arg1: LF@a=13(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 59 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 60 with following arguments:
# Arg1: Stack@=13(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 61 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 62 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 67 with following arguments:
# Executing instruction: IPUSHS at line: 69 with following arguments:
# Arg1: LF@a=13(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 70 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 71 with following arguments:
# Arg1: Stack@=13(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 72 with following arguments:
# Arg1: Stack@=12(int)
# Dest: LF@b=0(int)
# Executing instruction: ICLEARS at line: 73 with following arguments:
# Executing instruction: ICREATEFRAME at line: 74 with following arguments:
# Executing instruction: IPUSHS at line: 75 with following arguments:
# Arg1: LF@b=12(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 76 with following arguments:
# Dest: TF@a
# Executing instruction: IPOPS at line: 77 with following arguments:
# Arg1: Stack@=12(int)
# Dest: TF@a()
# Executing instruction: ICALL at line: 78 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: IPUSHFRAME at line: 6 with following arguments:
# Executing instruction: ICREATEFRAME at line: 7 with following arguments:
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 9 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: ICREATEFRAME at line: 11 with following arguments:
# Executing instruction: IPUSHS at line: 13 with following arguments:
# Arg1: LF@a=12(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 14 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 15 with following arguments:
# Arg1: Stack@=12(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 16 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 17 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 22 with following arguments:
# Executing instruction: IPUSHS at line: 24 with following arguments:
# Arg1: LF@a=12(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 25 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 26 with following arguments:
# Arg1: Stack@=12(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 27 with following arguments:
# Arg1: Stack@=11(int)
# Dest: LF@b=0(int)
# Executing instruction: ICLEARS at line: 28 with following arguments:
# Executing instruction: ICREATEFRAME at line: 29 with following arguments:
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: LF@b=11(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 31 with following arguments:
# Dest: TF@nn
# Executing instruction: IPOPS at line: 32 with following arguments:
# Arg1: Stack@=11(int)
# Dest: TF@nn()
# Executing instruction: ICALL at line: 33 with following arguments:
# Executing instruction: ILABEL at line: 48 with following arguments:
# Executing instruction: IPUSHFRAME at line: 49 with following arguments:
# Executing instruction: ICREATEFRAME at line: 50 with following arguments:
# Executing instruction: IDEFVAR at line: 51 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 52 with following arguments:
# Arg1: LF@nn=11(int)
# Dest: LF@a()
# Executing instruction: IDEFVAR at line: 53 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 54 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: ICREATEFRAME at line: 56 with following arguments:
# Executing instruction: IPUSHS at line: 58 with following arguments:
# Arg1: LF@a=11(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 59 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 60 with following arguments:
# Arg1: Stack@=11(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 61 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 62 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 67 with following arguments:
# Executing instruction: IPUSHS at line: 69 with following arguments:
# Arg1: LF@a=11(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 70 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 71 with following arguments:
# Arg1: Stack@=11(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 72 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@b=0(int)
# Executing instruction: ICLEARS at line: 73 with following arguments:
# Executing instruction: ICREATEFRAME at line: 74 with following arguments:
# Executing instruction: IPUSHS at line: 75 with following arguments:
# Arg1: LF@b=10(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 76 with following arguments:
# Dest: TF@a
# Executing instruction: IPOPS at line: 77 with following arguments:
# Arg1: Stack@=10(int)
# Dest: TF@a()
# Executing instruction: ICALL at line: 78 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: IPUSHFRAME at line: 6 with following arguments:
# Executing instruction: ICREATEFRAME at line: 7 with following arguments:
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 9 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: ICREATEFRAME at line: 11 with following arguments:
# Executing instruction: IPUSHS at line: 13 with following arguments:
# Arg1: LF@a=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 14 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 15 with following arguments:
# Arg1: Stack@=10(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 16 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 17 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 22 with following arguments:
# Executing instruction: IPUSHS at line: 24 with following arguments:
# Arg1: LF@a=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 25 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 26 with following arguments:
# Arg1: Stack@=10(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 27 with following arguments:
# Arg1: Stack@=9(int)
# Dest: LF@b=0(int)
# Executing instruction: ICLEARS at line: 28 with following arguments:
# Executing instruction: ICREATEFRAME at line: 29 with following arguments:
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: LF@b=9(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 31 with following arguments:
# Dest: TF@nn
# Executing instruction: IPOPS at line: 32 with following arguments:
# Arg1: Stack@=9(int)
# Dest: TF@nn()
# Executing instruction: ICALL at line: 33 with following arguments:
# Executing instruction: ILABEL at line: 48 with following arguments:
# Executing instruction: IPUSHFRAME at line: 49 with following arguments:
# Executing instruction: ICREATEFRAME at line: 50 with following arguments:
# Executing instruction: IDEFVAR at line: 51 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 52 with following arguments:
# Arg1: LF@nn=9(int)
# Dest: LF@a()
# Executing instruction: IDEFVAR at line: 53 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 54 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: ICREATEFRAME at line: 56 with following arguments:
# Executing instruction: IPUSHS at line: 58 with following arguments:
# Arg1: LF@a=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 59 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 60 with following arguments:
# Arg1: Stack@=9(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 61 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 62 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 67 with following arguments:
# Executing instruction: IPUSHS at line: 69 with following arguments:
# Arg1: LF@a=9(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 70 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 71 with following arguments:
# Arg1: Stack@=9(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 72 with following arguments:
# Arg1: Stack@=8(int)
# Dest: LF@b=0(int)
# Executing instruction: ICLEARS at line: 73 with following arguments:
# Executing instruction: ICREATEFRAME at line: 74 with following arguments:
# Executing instruction: IPUSHS at line: 75 with following arguments:
# Arg1: LF@b=8(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 76 with following arguments:
# Dest: TF@a
# Executing instruction: IPOPS at line: 77 with following arguments:
# Arg1: Stack@=8(int)
# Dest: TF@a()
# Executing instruction: ICALL at line: 78 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: IPUSHFRAME at line: 6 with following arguments:
# Executing instruction: ICREATEFRAME at line: 7 with following arguments:
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 9 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: ICREATEFRAME at line: 11 with following arguments:
# Executing instruction: IPUSHS at line: 13 with following arguments:
# Arg1: LF@a=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 14 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 15 with following arguments:
# Arg1: Stack@=8(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 16 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 17 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 22 with following arguments:
# Executing instruction: IPUSHS at line: 24 with following arguments:
# Arg1: LF@a=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 25 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 26 with following arguments:
# Arg1: Stack@=8(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 27 with following arguments:
# Arg1: Stack@=7(int)
# Dest: LF@b=0(int)
# Executing instruction: ICLEARS at line: 28 with following arguments:
# Executing instruction: ICREATEFRAME at line: 29 with following arguments:
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: LF@b=7(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 31 with following arguments:
# Dest: TF@nn
# Executing instruction: IPOPS at line: 32 with following arguments:
# Arg1: Stack@=7(int)
# Dest: TF@nn()
# Executing instruction: ICALL at line: 33 with following arguments:
# Executing instruction: ILABEL at line: 48 with following arguments:
# Executing instruction: IPUSHFRAME at line: 49 with following arguments:
# Executing instruction: ICREATEFRAME at line: 50 with following arguments:
# Executing instruction: IDEFVAR at line: 51 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 52 with following arguments:
# Arg1: LF@nn=7(int)
# Dest: LF@a()
# Executing instruction: IDEFVAR at line: 53 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 54 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: ICREATEFRAME at line: 56 with following arguments:
# Executing instruction: IPUSHS at line: 58 with following arguments:
# Arg1: LF@a=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 59 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 60 with following arguments:
# Arg1: Stack@=7(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 61 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 62 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 67 with following arguments:
# Executing instruction: IPUSHS at line: 69 with following arguments:
# Arg1: LF@a=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 70 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 71 with following arguments:
# Arg1: Stack@=7(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 72 with following arguments:
# Arg1: Stack@=6(int)
# Dest: LF@b=0(int)
# Executing instruction: ICLEARS at line: 73 with following arguments:
# Executing instruction: ICREATEFRAME at line: 74 with following arguments:
# Executing instruction: IPUSHS at line: 75 with following arguments:
# Arg1: LF@b=6(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 76 with following arguments:
# Dest: TF@a
# Executing instruction: IPOPS at line: 77 with following arguments:
# Arg1: Stack@=6(int)
# Dest: TF@a()
# Executing instruction: ICALL at line: 78 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: IPUSHFRAME at line: 6 with following arguments:
# Executing instruction: ICREATEFRAME at line: 7 with following arguments:
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 9 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: ICREATEFRAME at line: 11 with following arguments:
# Executing instruction: IPUSHS at line: 13 with following arguments:
# Arg1: LF@a=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 14 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 15 with following arguments:
# Arg1: Stack@=6(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 16 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 17 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 22 with following arguments:
# Executing instruction: IPUSHS at line: 24 with following arguments:
# Arg1: LF@a=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 25 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 26 with following arguments:
# Arg1: Stack@=6(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 27 with following arguments:
# Arg1: Stack@=5(int)
# Dest: LF@b=0(int)
# Executing instruction: ICLEARS at line: 28 with following arguments:
# Executing instruction: ICREATEFRAME at line: 29 with following arguments:
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: LF@b=5(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 31 with following arguments:
# Dest: TF@nn
# Executing instruction: IPOPS at line: 32 with following arguments:
# Arg1: Stack@=5(int)
# Dest: TF@nn()
# Executing instruction: ICALL at line: 33 with following arguments:
# Executing instruction: ILABEL at line: 48 with following arguments:
# Executing instruction: IPUSHFRAME at line: 49 with following arguments:
# Executing instruction: ICREATEFRAME at line: 50 with following arguments:
# Executing instruction: IDEFVAR at line: 51 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 52 with following arguments:
# Arg1: LF@nn=5(int)
# Dest: LF@a()
# Executing instruction: IDEFVAR at line: 53 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 54 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: ICREATEFRAME at line: 56 with following arguments:
# Executing instruction: IPUSHS at line: 58 with following arguments:
# Arg1: LF@a=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 59 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 60 with following arguments:
# Arg1: Stack@=5(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 61 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 62 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 67 with following arguments:
# Executing instruction: IPUSHS at line: 69 with following arguments:
# Arg1: LF@a=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 70 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 71 with following arguments:
# Arg1: Stack@=5(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 72 with following arguments:
# Arg1: Stack@=4(int)
# Dest: LF@b=0(int)
# Executing instruction: ICLEARS at line: 73 with following arguments:
# Executing instruction: ICREATEFRAME at line: 74 with following arguments:
# Executing instruction: IPUSHS at line: 75 with following arguments:
# Arg1: LF@b=4(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 76 with following arguments:
# Dest: TF@a
# Executing instruction: IPOPS at line: 77 with following arguments:
# Arg1: Stack@=4(int)
# Dest: TF@a()
# Executing instruction: ICALL at line: 78 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: IPUSHFRAME at line: 6 with following arguments:
# Executing instruction: ICREATEFRAME at line: 7 with following arguments:
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 9 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: ICREATEFRAME at line: 11 with following arguments:
# Executing instruction: IPUSHS at line: 13 with following arguments:
# Arg1: LF@a=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 14 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 15 with following arguments:
# Arg1: Stack@=4(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 16 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 17 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 22 with following arguments:
# Executing instruction: IPUSHS at line: 24 with following arguments:
# Arg1: LF@a=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 25 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 26 with following arguments:
# Arg1: Stack@=4(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 27 with following arguments:
# Arg1: Stack@=3(int)
# Dest: LF@b=0(int)
# Executing instruction: ICLEARS at line: 28 with following arguments:
# Executing instruction: ICREATEFRAME at line: 29 with following arguments:
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: LF@b=3(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 31 with following arguments:
# Dest: TF@nn
# Executing instruction: IPOPS at line: 32 with following arguments:
# Arg1: Stack@=3(int)
# Dest: TF@nn()
# Executing instruction: ICALL at line: 33 with following arguments:
# Executing instruction: ILABEL at line: 48 with following arguments:
# Executing instruction: IPUSHFRAME at line: 49 with following arguments:
# Executing instruction: ICREATEFRAME at line: 50 with following arguments:
# Executing instruction: IDEFVAR at line: 51 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 52 with following arguments:
# Arg1: LF@nn=3(int)
# Dest: LF@a()
# Executing instruction: IDEFVAR at line: 53 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 54 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: ICREATEFRAME at line: 56 with following arguments:
# Executing instruction: IPUSHS at line: 58 with following arguments:
# Arg1: LF@a=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 59 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 60 with following arguments:
# Arg1: Stack@=3(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 61 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 62 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 67 with following arguments:
# Executing instruction: IPUSHS at line: 69 with following arguments:
# Arg1: LF@a=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 70 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 71 with following arguments:
# Arg1: Stack@=3(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 72 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@b=0(int)
# Executing instruction: ICLEARS at line: 73 with following arguments:
# Executing instruction: ICREATEFRAME at line: 74 with following arguments:
# Executing instruction: IPUSHS at line: 75 with following arguments:
# Arg1: LF@b=2(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 76 with following arguments:
# Dest: TF@a
# Executing instruction: IPOPS at line: 77 with following arguments:
# Arg1: Stack@=2(int)
# Dest: TF@a()
# Executing instruction: ICALL at line: 78 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: IPUSHFRAME at line: 6 with following arguments:
# Executing instruction: ICREATEFRAME at line: 7 with following arguments:
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 9 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: ICREATEFRAME at line: 11 with following arguments:
# Executing instruction: IPUSHS at line: 13 with following arguments:
# Arg1: LF@a=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 14 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 15 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 16 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 17 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 22 with following arguments:
# Executing instruction: IPUSHS at line: 24 with following arguments:
# Arg1: LF@a=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 25 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 26 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 27 with following arguments:
# Arg1: Stack@=1(int)
# Dest: LF@b=0(int)
# Executing instruction: ICLEARS at line: 28 with following arguments:
# Executing instruction: ICREATEFRAME at line: 29 with following arguments:
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: LF@b=1(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 31 with following arguments:
# Dest: TF@nn
# Executing instruction: IPOPS at line: 32 with following arguments:
# Arg1: Stack@=1(int)
# Dest: TF@nn()
# Executing instruction: ICALL at line: 33 with following arguments:
# Executing instruction: ILABEL at line: 48 with following arguments:
# Executing instruction: IPUSHFRAME at line: 49 with following arguments:
# Executing instruction: ICREATEFRAME at line: 50 with following arguments:
# Executing instruction: IDEFVAR at line: 51 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 52 with following arguments:
# Arg1: LF@nn=1(int)
# Dest: LF@a()
# Executing instruction: IDEFVAR at line: 53 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 54 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: ICREATEFRAME at line: 56 with following arguments:
# Executing instruction: IPUSHS at line: 58 with following arguments:
# Arg1: LF@a=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 59 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 60 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 61 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 62 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 67 with following arguments:
# Executing instruction: IPUSHS at line: 69 with following arguments:
# Arg1: LF@a=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 70 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 71 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 72 with following arguments:
# Arg1: Stack@=0(int)
# Dest: LF@b=0(int)
# Executing instruction: ICLEARS at line: 73 with following arguments:
# Executing instruction: ICREATEFRAME at line: 74 with following arguments:
# Executing instruction: IPUSHS at line: 75 with following arguments:
# Arg1: LF@b=0(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 76 with following arguments:
# Dest: TF@a
# Executing instruction: IPOPS at line: 77 with following arguments:
# Arg1: Stack@=0(int)
# Dest: TF@a()
# Executing instruction: ICALL at line: 78 with following arguments:
# Executing instruction: ILABEL at line: 5 with following arguments:
# Executing instruction: IPUSHFRAME at line: 6 with following arguments:
# Executing instruction: ICREATEFRAME at line: 7 with following arguments:
# Executing instruction: IDEFVAR at line: 8 with following arguments:
# Dest: LF@b
# Executing instruction: IMOVE at line: 9 with following arguments:
# Arg1: Const@=0(int)
# Dest: LF@b()
# Executing instruction: ICREATEFRAME at line: 11 with following arguments:
# Executing instruction: IPUSHS at line: 13 with following arguments:
# Arg1: LF@a=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 14 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IEQS at line: 15 with following arguments:
# Arg1: Stack@=0(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 16 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 17 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 19 with following arguments:
# Arg1: Const@=20(int)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 20 with following arguments:
# Executing instruction: IPOPFRAME at line: 79 with following arguments:
# Executing instruction: IPOPS at line: 80 with following arguments:
# Arg1: Stack@=20(int)
# Dest: LF@b=0(int)
# Executing instruction: ICLEARS at line: 81 with following arguments:
# Executing instruction: IPUSHS at line: 82 with following arguments:
# Arg1: LF@b=20(int)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 83 with following arguments:
# Executing instruction: IPOPFRAME at line: 34 with following arguments:
# Executing instruction: IPOPS at line: 35 with following arguments:
# Arg1: Stack@=20(int)
# Dest: LF@b=1(int)
# Executing instruction: ICLEARS at line: 36 with following arguments:
# Executing instruction: IPUSHS at line: 37 with following arguments:
# Arg1: LF@b=20(int)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 38 with following arguments:
# Executing instruction: IPOPFRAME at line: 79 with following arguments:
# Executing instruction: IPOPS at line: 80 with following arguments:
# Arg1: Stack@=20(int)
# Dest: LF@b=2(int)
# Executing instruction: ICLEARS at line: 81 with following arguments:
# Executing instruction: IPUSHS at line: 82 with following arguments:
# Arg1: LF@b=20(int)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 83 with following arguments:
# Executing instruction: IPOPFRAME at line: 34 with following arguments:
# Executing instruction: IPOPS at line: 35 with following arguments:
# Arg1: Stack@=20(int)
# Dest: LF@b=3(int)
# Executing instruction: ICLEARS at line: 36 with following arguments:
# Executing instruction: IPUSHS at line: 37 with following arguments:
# Arg1: LF@b=20(int)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 38 with following arguments:
# Executing instruction: IPOPFRAME at line: 79 with following arguments:
# Executing instruction: IPOPS at line: 80 with following arguments:
# Arg1: Stack@=20(int)
# Dest: LF@b=4(int)
# Executing instruction: ICLEARS at line: 81 with following arguments:
# Executing instruction: IPUSHS at line: 82 with following arguments:
# Arg1: LF@b=20(int)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 83 with following arguments:
# Executing instruction: IPOPFRAME at line: 34 with following arguments:
# Executing instruction: IPOPS at line: 35 with following arguments:
# Arg1: Stack@=20(int)
# Dest: LF@b=5(int)
# Executing instruction: ICLEARS at line: 36 with following arguments:
# Executing instruction: IPUSHS at line: 37 with following arguments:
# Arg1: LF@b=20(int)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 38 with following arguments:
# Executing instruction: IPOPFRAME at line: 79 with following arguments:
# Executing instruction: IPOPS at line: 80 with following arguments:
# Arg1: Stack@=20(int)
# Dest: LF@b=6(int)
# Executing instruction: ICLEARS at line: 81 with following arguments:
# Executing instruction: IPUSHS at line: 82 with following arguments:
# Arg1: LF@b=20(int)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 83 with following arguments:
# Executing instruction: IPOPFRAME at line: 34 with following arguments:
# Executing instruction: IPOPS at line: 35 with following arguments:
# Arg1: Stack@=20(int)
# Dest: LF@b=7(int)
# Executing instruction: ICLEARS at line: 36 with following arguments:
# Executing instruction: IPUSHS at line: 37 with following arguments:
# Arg1: LF@b=20(int)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 38 with following arguments:
# Executing instruction: IPOPFRAME at line: 79 with following arguments:
# Executing instruction: IPOPS at line: 80 with following arguments:
# Arg1: Stack@=20(int)
# Dest: LF@b=8(int)
# Executing instruction: ICLEARS at line: 81 with following arguments:
# Executing instruction: IPUSHS at line: 82 with following arguments:
# Arg1: LF@b=20(int)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 83 with following arguments:
# Executing instruction: IPOPFRAME at line: 34 with following arguments:
# Executing instruction: IPOPS at line: 35 with following arguments:
# Arg1: Stack@=20(int)
# Dest: LF@b=9(int)
# Executing instruction: ICLEARS at line: 36 with following arguments:
# Executing instruction: IPUSHS at line: 37 with following arguments:
# Arg1: LF@b=20(int)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 38 with following arguments:
# Executing instruction: IPOPFRAME at line: 79 with following arguments:
# Executing instruction: IPOPS at line: 80 with following arguments:
# Arg1: Stack@=20(int)
# Dest: LF@b=10(int)
# Executing instruction: ICLEARS at line: 81 with following arguments:
# Executing instruction: IPUSHS at line: 82 with following arguments:
# Arg1: LF@b=20(int)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 83 with following arguments:
# Executing instruction: IPOPFRAME at line: 34 with following arguments:
# Executing instruction: IPOPS at line: 35 with following arguments:
# Arg1: Stack@=20(int)
# Dest: LF@b=11(int)
# Executing instruction: ICLEARS at line: 36 with following arguments:
# Executing instruction: IPUSHS at line: 37 with following arguments:
# Arg1: LF@b=20(int)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 38 with following arguments:
# Executing instruction: IPOPFRAME at line: 79 with following arguments:
# Executing instruction: IPOPS at line: 80 with following arguments:
# Arg1: Stack@=20(int)
# Dest: LF@b=12(int)
# Executing instruction: ICLEARS at line: 81 with following arguments:
# Executing instruction: IPUSHS at line: 82 with following arguments:
# Arg1: LF@b=20(int)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 83 with following arguments:
# Executing instruction: IPOPFRAME at line: 34 with following arguments:
# Executing instruction: IPOPS at line: 35 with following arguments:
# Arg1: Stack@=20(int)
# Dest: LF@b=13(int)
# Executing instruction: ICLEARS at line: 36 with following arguments:
# Executing instruction: IPUSHS at line: 37 with following arguments:
# Arg1: LF@b=20(int)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 38 with following arguments:
# Executing instruction: IPOPFRAME at line: 79 with following arguments:
# Executing instruction: IPOPS at line: 80 with following arguments:
# Arg1: Stack@=20(int)
# Dest: LF@b=14(int)
# Executing instruction: ICLEARS at line: 81 with following arguments:
# Executing instruction: IPUSHS at line: 82 with following arguments:
# Arg1: LF@b=20(int)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 83 with following arguments:
# Executing instruction: IPOPFRAME at line: 34 with following arguments:
# Executing instruction: IPOPS at line: 35 with following arguments:
# Arg1: Stack@=20(int)
# Dest: LF@b=15(int)
# Executing instruction: ICLEARS at line: 36 with following arguments:
# Executing instruction: IPUSHS at line: 37 with following arguments:
# Arg1: LF@b=20(int)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 38 with following arguments:
# Executing instruction: IPOPFRAME at line: 79 with following arguments:
# Executing instruction: IPOPS at line: 80 with following arguments:
# Arg1: Stack@=20(int)
# Dest: LF@b=16(int)
# Executing instruction: ICLEARS at line: 81 with following arguments:
# Executing instruction: IPUSHS at line: 82 with following arguments:
# Arg1: LF@b=20(int)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 83 with following arguments:
# Executing instruction: IPOPFRAME at line: 34 with following arguments:
# Executing instruction: IPOPS at line: 35 with following arguments:
# Arg1: Stack@=20(int)
# Dest: LF@b=17(int)
# Executing instruction: ICLEARS at line: 36 with following arguments:
# Executing instruction: IPUSHS at line: 37 with following arguments:
# Arg1: LF@b=20(int)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 38 with following arguments:
# Executing instruction: IPOPFRAME at line: 79 with following arguments:
# Executing instruction: IPOPS at line: 80 with following arguments:
# Arg1: Stack@=20(int)
# Dest: LF@b=18(int)
# Executing instruction: ICLEARS at line: 81 with following arguments:
# Executing instruction: IPUSHS at line: 82 with following arguments:
# Arg1: LF@b=20(int)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 83 with following arguments:
# Executing instruction: IPOPFRAME at line: 34 with following arguments:
# Executing instruction: IPOPS at line: 35 with following arguments:
# Arg1: Stack@=20(int)
# Dest: LF@b=19(int)
# Executing instruction: ICLEARS at line: 36 with following arguments:
# Executing instruction: IPUSHS at line: 37 with following arguments:
# Arg1: LF@b=20(int)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 38 with following arguments:
# Executing instruction: IPOPFRAME at line: 112 with following arguments:
# Executing instruction: IPOPS at line: 113 with following arguments:
# Arg1: Stack@=20(int)
# Dest: LF@b=0(int)
# Executing instruction: ICLEARS at line: 114 with following arguments:
# Executing instruction: IPUSHS at line: 115 with following arguments:
# Arg1: LF@b=20(int)
# Dest: Stack@()
# Executing instruction: IRETURN at line: 116 with following arguments:
# Executing instruction: IPOPFRAME at line: 150 with following arguments:
# Executing instruction: IPOPS at line: 151 with following arguments:
# Arg1: Stack@=20(int)
# Dest: LF@a=0(int)
# Executing instruction: ICLEARS at line: 152 with following arguments:
# Executing instruction: IPUSHS at line: 153 with following arguments:
# Arg1: LF@a=20(int)
# Dest: Stack@()
# Executing instruction: IDEFVAR at line: 154 with following arguments:
# Dest: TF@__INTERNAL__VAR_0
# Executing instruction: IPOPS at line: 155 with following arguments:
# Arg1: Stack@=20(int)
# Dest: TF@__INTERNAL__VAR_0()
# Executing instruction: IWRITE at line: 156 with following arguments:
# Arg1: TF@__INTERNAL__VAR_0=20(int)
# Executing instruction: IJUMP at line: 157 with following arguments:
# Executing instruction: ILABEL at line: 160 with following arguments:
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 2460 (991+1469)
# 
#   1: ' Recursion of three functions
#   2: 
#   3: declare function bar(nn as integer) as integer
#   4: 
#   5: function foo(a as integer) as integer
#   6: 	dim b as integer
#   7: 	if (a = 0) then
#   8: 		return 20
#   9: 	else
#  10: 		b = a - 1
#  11: 		b = bar(b)	
#  12: 		return b
#  13: 	end if
#  14: end function
#  15: 
#  16: function bar(a as integer) as integer
#  17: 	dim b as integer
#  18: 	if (a = 0) then
#  19: 		return 20
#  20: 	else
#  21: 		b = a - 1
#  22: 		b = foo(b)
#  23: 		return b
#  24: 	end if
#  25: end function
#  26: 
#  27: function start(a as integer) as integer
#  28: 
#  29: 	dim b as integer
#  30: 
#  31: 	if (a > 10) then 
#  32: 		b = foo(a)
#  33: 		return b
#  34: 	else
#  35: 		b = bar(a)
#  36: 		return b
#  37: 	end if	
#  38: 
#  39: 	
#  40: end function
#  41: 
#  42: scope
#  43: 	
#  44: 	dim a as integer
#  45: 	a = start(20)
#  46: 	print a;
#  47: 
#  48: 
#  49: end scope

########################################

.IFJcode17                                                                      #     1/160
JUMP main                                                                       #     2/160
# FUNCTION                                                                      #     4/160
LABEL foo                                                                       #     5/160
PUSHFRAME                                                                       #     6/160
CREATEFRAME                                                                     #     7/160
DEFVAR LF@b                                                                     #     8/160
MOVE LF@b int@0                                                                 #     9/160
# IF BLOCK                                                                      #    10/160
CREATEFRAME                                                                     #    11/160
# IF                                                                            #    12/160
PUSHS LF@a                                                                      #    13/160
PUSHS int@0                                                                     #    14/160
EQS                                                                             #    15/160
PUSHS bool@true                                                                 #    16/160
JUMPIFNEQS __INTERNAL__COND_0_END                                               #    17/160
# THEN                                                                          #    18/160
PUSHS int@20                                                                    #    19/160
RETURN                                                                          #    20/160
JUMP __INTERNAL__COND_0_BLOCK_END                                               #    21/160
LABEL __INTERNAL__COND_0_END                                                    #    22/160
# ELSE                                                                          #    23/160
PUSHS LF@a                                                                      #    24/160
PUSHS int@1                                                                     #    25/160
SUBS                                                                            #    26/160
POPS LF@b                                                                       #    27/160
CLEARS                                                                          #    28/160
CREATEFRAME                                                                     #    29/160
PUSHS LF@b                                                                      #    30/160
DEFVAR TF@nn                                                                    #    31/160
POPS TF@nn                                                                      #    32/160
CALL bar                                                                        #    33/160
POPFRAME                                                                        #    34/160
POPS LF@b                                                                       #    35/160
CLEARS                                                                          #    36/160
PUSHS LF@b                                                                      #    37/160
RETURN                                                                          #    38/160
# END IF                                                                        #    39/160
LABEL __INTERNAL__COND_0_BLOCK_END                                              #    40/160
CREATEFRAME                                                                     #    41/160
# END IF BLOCK                                                                  #    42/160
PUSHS int@0                                                                     #    43/160
RETURN                                                                          #    44/160
# END FUNCTION                                                                  #    45/160
# FUNCTION                                                                      #    47/160
LABEL bar                                                                       #    48/160
PUSHFRAME                                                                       #    49/160
CREATEFRAME                                                                     #    50/160
DEFVAR LF@a                                                                     #    51/160
MOVE LF@a LF@nn                                                                 #    52/160
DEFVAR LF@b                                                                     #    53/160
MOVE LF@b int@0                                                                 #    54/160
# IF BLOCK                                                                      #    55/160
CREATEFRAME                                                                     #    56/160
# IF                                                                            #    57/160
PUSHS LF@a                                                                      #    58/160
PUSHS int@0                                                                     #    59/160
EQS                                                                             #    60/160
PUSHS bool@true                                                                 #    61/160
JUMPIFNEQS __INTERNAL__COND_1_END                                               #    62/160
# THEN                                                                          #    63/160
PUSHS int@20                                                                    #    64/160
RETURN                                                                          #    65/160
JUMP __INTERNAL__COND_1_BLOCK_END                                               #    66/160
LABEL __INTERNAL__COND_1_END                                                    #    67/160
# ELSE                                                                          #    68/160
PUSHS LF@a                                                                      #    69/160
PUSHS int@1                                                                     #    70/160
SUBS                                                                            #    71/160
POPS LF@b                                                                       #    72/160
CLEARS                                                                          #    73/160
CREATEFRAME                                                                     #    74/160
PUSHS LF@b                                                                      #    75/160
DEFVAR TF@a                                                                     #    76/160
POPS TF@a                                                                       #    77/160
CALL foo                                                                        #    78/160
POPFRAME                                                                        #    79/160
POPS LF@b                                                                       #    80/160
CLEARS                                                                          #    81/160
PUSHS LF@b                                                                      #    82/160
RETURN                                                                          #    83/160
# END IF                                                                        #    84/160
LABEL __INTERNAL__COND_1_BLOCK_END                                              #    85/160
CREATEFRAME                                                                     #    86/160
# END IF BLOCK                                                                  #    87/160
PUSHS int@0                                                                     #    88/160
RETURN                                                                          #    89/160
# END FUNCTION                                                                  #    90/160
# FUNCTION                                                                      #    92/160
LABEL start                                                                     #    93/160
PUSHFRAME                                                                       #    94/160
CREATEFRAME                                                                     #    95/160
DEFVAR LF@b                                                                     #    96/160
MOVE LF@b int@0                                                                 #    97/160
# IF BLOCK                                                                      #    98/160
CREATEFRAME                                                                     #    99/160
# IF                                                                            #   100/160
PUSHS LF@a                                                                      #   101/160
PUSHS int@10                                                                    #   102/160
GTS                                                                             #   103/160
PUSHS bool@true                                                                 #   104/160
JUMPIFNEQS __INTERNAL__COND_2_END                                               #   105/160
# THEN                                                                          #   106/160
CREATEFRAME                                                                     #   107/160
PUSHS LF@a                                                                      #   108/160
DEFVAR TF@a                                                                     #   109/160
POPS TF@a                                                                       #   110/160
CALL foo                                                                        #   111/160
POPFRAME                                                                        #   112/160
POPS LF@b                                                                       #   113/160
CLEARS                                                                          #   114/160
PUSHS LF@b                                                                      #   115/160
RETURN                                                                          #   116/160
JUMP __INTERNAL__COND_2_BLOCK_END                                               #   117/160
LABEL __INTERNAL__COND_2_END                                                    #   118/160
# ELSE                                                                          #   119/160
CREATEFRAME                                                                     #   120/160
PUSHS LF@a                                                                      #   121/160
DEFVAR TF@nn                                                                    #   122/160
POPS TF@nn                                                                      #   123/160
CALL bar                                                                        #   124/160
POPFRAME                                                                        #   125/160
POPS LF@b                                                                       #   126/160
CLEARS                                                                          #   127/160
PUSHS LF@b                                                                      #   128/160
RETURN                                                                          #   129/160
# END IF                                                                        #   130/160
LABEL __INTERNAL__COND_2_BLOCK_END                                              #   131/160
CREATEFRAME                                                                     #   132/160
# END IF BLOCK                                                                  #   133/160
PUSHS int@0                                                                     #   134/160
RETURN                                                                          #   135/160
# END FUNCTION                                                                  #   136/160
# MAIN                                                                          #   138/160
LABEL main                                                                      #   139/160
CREATEFRAME                                                                     #   140/160
PUSHFRAME                                                                       #   141/160
CREATEFRAME                                                                     #   142/160
DEFVAR LF@a                                                                     #   143/160
MOVE LF@a int@0                                                                 #   144/160
CREATEFRAME                                                                     #   145/160
PUSHS int@20                                                                    #   146/160
DEFVAR TF@a                                                                     #   147/160
POPS TF@a                                                                       #   148/160
CALL start                                                                      #   149/160
POPFRAME                                                                        #   150/160
POPS LF@a                                                                       #   151/160
CLEARS                                                                          #   152/160
PUSHS LF@a                                                                      #   153/160
DEFVAR TF@__INTERNAL__VAR_0                                                     #   154/160
POPS TF@__INTERNAL__VAR_0                                                       #   155/160
WRITE TF@__INTERNAL__VAR_0                                                      #   156/160
JUMP __INTERNAL__FILE_END                                                       #   157/160
# PROGRAM END                                                                   #   159/160
LABEL __INTERNAL__FILE_END                                                      #   160/160